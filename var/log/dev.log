[2020-07-09T11:37:29.810641+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://apelstda.xaviervitali.fr/","method":"GET"} []
[2020-07-09T11:37:31.173904+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-09T11:38:21.087850+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://apelstda.xaviervitali.fr/","method":"GET"} []
[2020-07-09T11:38:21.152304+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-09T11:48:27.859186+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://apelstda.xaviervitali.fr/","method":"GET"} []
[2020-07-09T11:48:27.998507+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-09T11:49:18.847549+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://apelstda.xaviervitali.fr/","method":"GET"} []
[2020-07-09T11:49:19.024667+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-09T11:50:39.144757+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://apelstda.xaviervitali.fr/","method":"GET"} []
[2020-07-09T11:50:39.266321+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-09T11:50:43.617086+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://apelstda.xaviervitali.fr/","method":"GET"} []
[2020-07-09T11:50:43.643274+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-09T11:51:33.941027+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://apelstda.xaviervitali.fr/","method":"GET"} []
[2020-07-09T11:51:34.101888+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-09T11:53:38.914010+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://apelstda.xaviervitali.fr/","method":"GET"} []
[2020-07-09T11:53:38.986242+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T00:08:22.750047+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/config/routes/dev/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/xaviervimj/projet/symfony/vendor/symfony/config/Resource/FileResource.php","line":65,"trace":[{"file":"/home/xaviervimj/projet/symfony/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2020-07-10T00:08:24.099577+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-10T00:08:24.214027+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T00:08:24.326126+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:08:24.326716+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-10T00:08:24.917064+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-10T00:08:25.209287+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T00:08:25.662455+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b9fd37"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/b9fd37","method":"GET"} []
[2020-07-10T00:08:49.197398+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:08:49.247557+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:08:49.247644+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:08:49.247696+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:08:49.252342+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T00:08:49.267461+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:08:49.267981+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-10T00:09:05.396423+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-10T00:09:05.454021+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-10T00:09:05.454117+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:09:05.454173+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:09:05.455935+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:09:05.581405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:09:06.492855+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:09:06.541691+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 09 Jul 2020 22:09:06 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQzMzI1NDYsImV4cCI6MTU5NDMzNjE0Niwicm9sZXMiOlsiUk9MRV9XUklUVEVSIiwiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYXV0ZXVyQGdtYWlsLmNvbSIsImlkIjo0MSwiZmlyc3ROYW1lIjoicHJlbm9tIGF1dGV1ciIsImxhc3ROYW1lIjoibm9tIGF1dGV1ciIsImdlbmRlciI6Ik0iLCJjaGlsZHJlbiI6WyJDUFwvQ0UxIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.uf2nHPHi5V0Dd_nYqb_Ow4SY_4C8DxwKIYSCGKSFe-PeHdgdzigC3YMHpGOl_4rhka25aiZNFHYaKknSSHZukfpQBU4ttEep9QiI9VDgI-BMVTGFneGwR8xtL7QQGpTNrCb_NGXDshZTunAt3W-yyB0cDsATFagfI3ZkjYFfXlcGhrlDfNo06O24EwEjoBKIIBYeO_IIVfsnAx2VvuOpbVpZxdjrW2PQU3BmT7kke-TyDH56LKeInM_bByKyHINSnuiWRtyAyUt59gdH5ulgYHFa-arrNdrK-RntzSZuurqfxtzmqnkqIc7RQUaBasrjbU99qOrMvw6fWsTnCbDHg6vtIhsD-dNMIrZV-OWUDTwHMAJ7ljtQPhq1ZSZD2OVe1rSZtBHCwn77O64KWz_MwCNORUAqdH8gqPMMePkSBWp9HBehXnKMVnqK9AMxy7Zk1PvMlCQBQJYk735UtGuQyU1RXfw_sGQLPbTUh57FOt3EokLb1wLAl1a1Odd3Pis7fL8oagR9Jp2klV-FmKP9uS8tv_CHuJWSdv_jbts94ccOJ18O_lk98H9DMPB5LGvnxAmpIGqVXzNpvqrRacP-VOmS37vjF2rVFMYy9gfuhhQrTn7rYJCS118w8fYEewuTK5_qLV-FxrYvVT8YyJC6mNxl42NKbUNzMTpDY3iaXQ4\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:09:06.541768+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:09:06.541809+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:09:12.946087+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:09:12.955387+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:09:12.955442+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:09:12.955490+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:09:12.957987+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T00:09:12.966014+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:09:12.966529+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-10T00:09:36.405778+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:09:36.433161+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:09:36.433219+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:09:36.433284+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:09:36.440870+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:09:36.526341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:09:36.538418+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:09:36.539230+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:09:36.539279+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:09:36.568946+02:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:09:36.571596+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Access Denied." at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:10:06.928819+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-10T00:10:06.941003+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-10T00:10:06.941058+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:06.941109+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:06.942900+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:06.997015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:10:07.879297+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:07.933315+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 09 Jul 2020 22:10:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQzMzI2MDcsImV4cCI6MTU5NDMzNjIwNywicm9sZXMiOlsiUk9MRV9XUklUVEVSIiwiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYXV0ZXVyQGdtYWlsLmNvbSIsImlkIjo0MSwiZmlyc3ROYW1lIjoicHJlbm9tIGF1dGV1ciIsImxhc3ROYW1lIjoibm9tIGF1dGV1ciIsImdlbmRlciI6Ik0iLCJjaGlsZHJlbiI6WyJDUFwvQ0UxIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.UDNC_GzHjT5TCZAShJ6LITOuZJZ_7jwy2sd6N9uuw9cXZLE2OiCburB7QDM9ZkBPygiF0jzGc9gMlegliA0qbYJbAvYg639UGI5zhfCTPHdQsQNf5-iRccbqNVJpJgQFNJXv_Xp1lrEaE0HkE4upuAglix3zrff49DcIXIBiyc-hu7HW1Bf8LSTVl7QnUWLXmVJnYKGtVJzi0B7pdOwpzkz7hTIGi4aUM5E89jQ6Z2s8uNc-n8AEn8_cQiaCKc84I9dXCGGv4r_YQ2c9mgya15fCkC-cRmy2arNR5ROhRWGvFREr5jcHSFSkU9wW-nt04srNOKTzHCIVVWpwHPcLTSbeUUZEWj_PyhXJIx7z2bjxn4ISrXpuMHzDoTIzLaLghkArjJZHTasPdkASp3Nb58P-qjmqudrLnNwKjSihfEA4ZLDJuj3CKpHUs0n76kpwldMdMl3-ClnGjPKdoEebx1r0LhHeBrwCvIu05y3uFoqOfU4TPxSRwdcuwnKLZbrddVCSgoNSHEtZp3-XesQpNj56U0l2bI2o5WuCF0LFEHs8ccISHIqmrhfZa0eHBF4TBHvQkzNIhyR5wcSd2C4lE1ai5cW4mFgXvfkeWU_zJ-SFhvRyxsccWIAYrr-kMVPkmeNuSI06_Zbc3l8xip4GmNUnBaYDn4BDiMhLcdwRCgA\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:07.933398+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:07.933453+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:08.492757+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:10:08.538008+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:10:08.538077+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:08.538134+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:08.543963+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:08.556552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:10:08.563868+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:08.564157+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:08.564203+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:08.573579+02:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:10:08.575720+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Access Denied." at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:10:13.677713+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:10:13.710385+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:10:13.710492+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:13.710589+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:13.716816+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:13.734349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:10:13.742583+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:13.742901+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:13.742970+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:13.750582+02:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:10:13.752556+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Access Denied." at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:10:30.811790+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-10T00:10:30.819376+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-10T00:10:30.819431+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:30.819481+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:30.820308+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:30.851822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:10:31.710087+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:31.752962+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 09 Jul 2020 22:10:31 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQzMzI2MzEsImV4cCI6MTU5NDMzNjIzMSwicm9sZXMiOlsiUk9MRV9XUklUVEVSIiwiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYXV0ZXVyQGdtYWlsLmNvbSIsImlkIjo0MSwiZmlyc3ROYW1lIjoicHJlbm9tIGF1dGV1ciIsImxhc3ROYW1lIjoibm9tIGF1dGV1ciIsImdlbmRlciI6Ik0iLCJjaGlsZHJlbiI6WyJDUFwvQ0UxIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.mKnJqEUhYrUcsT2eV3nGS2UoD1ge_UqyusgSvSZYMJU-7Zq7eKH-HLGHuzMGkb3FXtkK1BpfRY1HdUDMk_-iZXOriHaqM6DyXcjYD4PRjzOcpvXeCCXDtfvZUj3snIPer45MQvVjwVZo6LOkQFs4LGxi0c622rOspbJ8yQvbD1WD8OUzpjI9XBvacUPbuvEFvOy4Fz336v__bIbqLhDwi6ihPKChJV8UTSIvnBc2MFaPjwqXazFSmSBUhFazd4SZkW9Dr_7OODbF28EkaTkERz0meAb64n6Wg5pxIK1qK1rMl_0ZFE7sbMeBR80dgFLc9t4AG1kwOGGq1kHIiPVS1SgMqdDBfy_3E8LMyB3f_V438UPTj_8UA5FnEl9cYVZuuDC5x-ZijwRURziAanjqhePJHMt9vbfCv2RIgY_6c7eBa5hGCj5M_IRRBr8xrFMkV8QjWOgYxZH0PUnRysKxXQXbB93jEEh3yq0s3m5EGHEQ5Y0bzakNMsrXkO96wqX9j60pWGTBOXz4MnvG6_YhxZpV-BeJo_moDXaB28hQnHJ1JiMik7ItTkH1kpKBKpCSAZxJw9i2H2S81eWOSPjrr0KqTaHs54VSyhfLaPzCYqWOz-u6bgXw7evP3x6wjZE3uutyN83mZqSxhNVXbvaofMYrrs1KO5n8eSRZRKXF3_w\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:31.753045+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:31.753085+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:10:32.093324+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:10:32.123951+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:10:32.124025+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:32.124086+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:32.128047+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:32.141538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:10:32.148758+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:32.149050+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:32.149096+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:10:32.155756+02:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:10:32.157665+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Access Denied." at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:11:29.998928+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-10T00:11:30.012575+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-10T00:11:30.012631+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:11:30.012689+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:11:30.013745+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:11:30.012137+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:11:30.033969+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:30.037591+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:30.037652+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:30.037733+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:30.046975+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:30.054029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:30.061656+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:30.062366+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:30.062422+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:30.235661+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:11:30.241311+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[22,10,1,2,3,5,6,7,8,9]] []
[2020-07-10T00:11:30.453274+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:11:30.925500+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:11:30.971002+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 09 Jul 2020 22:11:30 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQzMzI2OTAsImV4cCI6MTU5NDMzNjI5MCwicm9sZXMiOlsiUk9MRV9XUklUVEVSIiwiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYXV0ZXVyQGdtYWlsLmNvbSIsImlkIjo0MSwiZmlyc3ROYW1lIjoicHJlbm9tIGF1dGV1ciIsImxhc3ROYW1lIjoibm9tIGF1dGV1ciIsImdlbmRlciI6Ik0iLCJjaGlsZHJlbiI6WyJDUFwvQ0UxIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.Tw6GxbHzGu9bsPB9dSQirqdN-e8Ne19F7Be6V2ygKnDxbqxLM8ZsY1JVMGHvGCpowBLaml7pjtAR4iaMYyR55IKcfsus_U9jaTHHTB7Qh8tmxy49wwXa6gAq2YrQI2OeQSnuLaHax8dtSg7Urz9ppwjVPKshuibehIuv-KFynY32VGiQMpAQq7zJq10fEVZObnIFsNsOfMLqIO0iqCQrkD-NX53T-e3obP5c1t8TEKbJH6vQvIuBc6Lys4A8dZMlNlhbDKTWW11-CfHKJwfu0iZlDncydY1B2G4KTMYvqTi00QJPE6IzERraXiCPjQ9gwBSk9kbey-N46oACl706qpNBzLC3wFL10ZgdExM9qaDzSYvok-j22b8ZgUIS37pHwTrQ5tiU3HfJY0R-FN1_kVljgRPUz--ebudNeM2_Qyg599KVwL2VfUYTYhVEI9umN3zGuZEW3qrB6iyVbh4KJVRgDq8s0asAhAVcFNVt8V4FHQZqGm98CFMQsrTDik_rOXcd5BEyemolIp-ALTguW5jDZR5qTzbkWO8Uj8eDhwkXDS6Oro1_IBvgSTEImQ9K9oTodmbCSHakGx09c386FraUaF_GREPs0p4Y6uxYWo2HotV8_oFEfuBybGhOsRLLhLCw9UZXdoHbOiEngmovsXzpOtUccypftw8KYVuNcgk\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:11:30.971116+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:11:30.971161+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:11:31.045122+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:11:31.053679+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:31.053731+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:31.053786+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:31.057794+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:31.089514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:31.097282+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:31.097568+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:31.097616+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:31.208042+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:11:31.210569+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:11:31.250253+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:11:35.166882+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:11:35.176002+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:35.176081+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:35.176140+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:35.180626+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:35.214980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:35.223034+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:35.223325+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:35.223373+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:35.277934+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:11:35.280471+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:11:35.304338+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:11:37.827359+02:00] request.INFO: Matched route "api_file_uploads_GET_collection". {"route":"api_file_uploads_GET_collection","route_parameters":{"_route":"api_file_uploads_GET_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\FileUpload","_api_collection_operation_name":"GET"},"request_uri":"https://adminstda.xaviervitali.fr/api/file_uploads","method":"GET"} []
[2020-07-10T00:11:37.836358+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:37.836420+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:37.836488+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:37.840371+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:37.872747+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:37.880645+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:37.880935+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:37.880983+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:38.013185+02:00] doctrine.DEBUG: SELECT f0_.id AS id_0, f0_.file_uploaded_name AS file_uploaded_name_1, f0_.title AS title_2, f0_.updated_at AS updated_at_3, u1_.id AS id_4, u1_.email AS email_5, u1_.roles AS roles_6, u1_.password AS password_7, u1_.gender AS gender_8, u1_.last_name AS last_name_9, u1_.first_name AS first_name_10, u1_.children AS children_11, u1_.email_notification AS email_notification_12, u1_.registered_at AS registered_at_13, u1_.granted AS granted_14, u1_.about AS about_15, f0_.added_by_id AS added_by_id_16 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id ORDER BY f0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:11:38.097088+02:00] doctrine.DEBUG: SELECT count(DISTINCT f0_.id) AS sclr_0 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id [] []
[2020-07-10T00:11:43.171182+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:11:43.179791+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:43.179850+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:43.179916+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:43.184016+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:43.216076+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:43.223917+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:43.224194+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:43.224240+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:43.254127+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:11:43.256605+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:11:43.285836+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:11:44.125560+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:11:44.155390+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:44.155455+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.155514+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.159481+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.171723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:44.178641+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.178933+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.178993+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.250877+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:11:44.253775+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[22,10,1,2,3,5,6,7,8,9]] []
[2020-07-10T00:11:44.392401+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:11:44.740160+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:11:44.749286+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:44.749361+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.749426+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.753850+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.787525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:44.795682+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.795970+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.796018+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:44.825253+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:11:44.827768+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:11:44.851110+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:11:45.897472+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:11:45.905518+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:45.905568+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:45.905623+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:45.909567+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:45.940527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:45.948357+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:45.948655+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:45.948701+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:45.977208+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:11:45.979858+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:11:46.007191+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:11:51.108981+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:11:51.117236+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:11:51.117290+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:51.117361+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:51.121276+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:51.152680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:11:51.160545+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:51.160830+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:51.160876+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:11:51.189653+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:11:51.192405+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:11:51.215796+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:12:07.509139+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:12:07.530691+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:12:07.530745+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:07.530804+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:07.540331+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:07.597511+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:12:07.609386+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:07.618836+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:07.618888+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:07.789813+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [26] []
[2020-07-10T00:12:07.835893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:12:07.890195+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\User could not be converted to string" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 130 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\User could not be converted to string at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:130)"} []
[2020-07-10T00:12:29.281738+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:12:29.289270+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:12:29.289324+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:29.289384+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:29.293481+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:29.326099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:12:29.334290+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:29.334587+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:29.334635+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:12:29.415268+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [26] []
[2020-07-10T00:12:29.431063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:12:29.441710+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\User could not be converted to string" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 130 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\User could not be converted to string at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:130)"} []
[2020-07-10T00:13:19.667017+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:13:19.699933+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:13:19.700017+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:13:19.700094+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:13:19.709510+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:13:19.830001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:13:19.857055+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:13:19.857845+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:13:19.857894+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:13:19.918671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:13:19.938676+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTitle() on null {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:13:19.965435+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTitle() on null" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 120 {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:14:32.668155+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:14:32.691326+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:14:32.691386+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:14:32.691458+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:14:32.701602+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:14:32.761555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:14:32.773454+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:14:32.774431+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:14:32.774480+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:14:32.829285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:14:32.840173+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTitle() on null {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:14:32.852574+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTitle() on null" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 120 {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:15:13.146766+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:15:13.183625+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:15:13.183739+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:13.183844+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:13.193664+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:13.256310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:15:13.269241+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:13.270082+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:13.270131+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:13.324836+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [26] []
[2020-07-10T00:15:13.353225+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:15:13.376630+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\User could not be converted to string" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 130 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\User could not be converted to string at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:130)"} []
[2020-07-10T00:15:35.780650+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:15:35.788449+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:15:35.788506+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:35.788571+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:35.792651+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:35.826008+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:15:35.833956+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:35.834256+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:35.834305+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:15:35.856363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:15:35.862083+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTitle() on null {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:15:35.867869+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTitle() on null" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 120 {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:16:25.606744+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:16:25.652964+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:16:25.653084+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:25.653193+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:25.666233+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:25.727800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:16:25.775872+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:25.776839+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:25.776895+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:25.839824+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [26] []
[2020-07-10T00:16:25.869921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:16:25.899121+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\User could not be converted to string" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 130 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\User could not be converted to string at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:130)"} []
[2020-07-10T00:16:40.087139+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:16:40.094444+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:16:40.094494+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:40.094553+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:40.098402+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:40.130319+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:16:40.138047+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:40.138316+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:40.138363+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:40.159081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:16:40.164642+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTitle() on null {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:16:40.170251+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTitle() on null" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 120 {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:16:46.041927+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:16:46.049323+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:16:46.049373+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:46.049433+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:46.053440+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:46.085310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:16:46.093219+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:46.093490+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:46.093535+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:46.114998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:16:46.120639+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTitle() on null {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:16:46.125574+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTitle() on null" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 120 {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:16:55.429650+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:16:55.437563+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:16:55.437622+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:55.437683+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:55.441831+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:55.473773+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:16:55.481835+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:55.482122+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:55.482169+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:16:55.507780+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [26] []
[2020-07-10T00:17:11.260541+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:17:11.285575+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:17:11.285680+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:11.285782+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:11.298558+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:11.375288+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:17:11.387249+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:11.388052+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:11.388102+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:52.196996+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:17:52.218865+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:17:52.218945+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:52.219014+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:52.228726+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:52.290250+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:17:52.302196+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:52.303042+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:52.303092+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:58.609199+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:17:58.616814+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:17:58.616868+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:58.616933+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:58.620978+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:58.653735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:17:58.661746+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:58.662039+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:17:58.662088+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:01.281976+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:18:01.290217+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:18:01.290287+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:01.290353+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:01.294435+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:01.326905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:18:01.335556+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:01.335867+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:01.335916+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:10.050298+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:18:10.057594+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:18:10.057647+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:10.057721+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:10.061565+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:10.093610+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:18:10.101464+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:10.101732+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:10.101778+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:17.459768+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:18:17.467530+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:18:17.467604+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:17.467677+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:17.471846+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:17.513894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:18:17.522056+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:17.522363+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:17.522412+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:24.850088+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:18:24.874032+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:18:24.874086+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:24.874150+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:24.884749+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:24.944861+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:18:24.957507+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:24.958407+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:24.958462+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:18:25.014154+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:18:25.025404+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTitle() on null {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:18:25.038075+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTitle() on null" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 120 {"exception":"[object] (Error(code: 0): Call to a member function getTitle() on null at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:120)"} []
[2020-07-10T00:19:29.739079+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:19:29.762057+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:19:29.762112+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:19:29.762170+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:19:29.779670+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:19:30.105923+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:19:30.118128+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:19:30.119019+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:19:30.119068+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:19:30.210532+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:19:30.232164+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\User could not be converted to string" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 130 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\User could not be converted to string at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:130)"} []
[2020-07-10T00:22:01.532667+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:22:01.553739+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:22:01.553793+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:01.553858+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:01.563103+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:01.628827+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:22:01.652453+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:01.653293+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:01.653343+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:01.731175+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:22:01.751201+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\User::$getGender" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 129 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\User::$getGender at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:129)"} []
[2020-07-10T00:22:17.362284+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:22:17.369626+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:22:17.369678+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:17.369740+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:17.373693+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:17.405088+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:22:17.412722+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:17.413003+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:17.413048+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:17.434297+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:22:17.443757+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\User::$getGender" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 129 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\User::$getGender at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:129)"} []
[2020-07-10T00:22:28.130446+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:22:28.137790+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:22:28.137840+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:28.137907+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:28.141900+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:28.173057+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:22:28.180694+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:28.180971+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:28.181017+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:28.202099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:22:28.211268+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\User::$getGender" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 129 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\User::$getGender at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:129)"} []
[2020-07-10T00:22:32.475107+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:22:32.515370+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:22:32.515426+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:32.515490+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:32.526279+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:32.612203+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:22:32.625062+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:32.626149+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:32.626198+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:32.700133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:22:32.728834+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\User::$getGender" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 129 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\User::$getGender at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:129)"} []
[2020-07-10T00:22:49.556483+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:22:49.564072+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:22:49.564125+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:49.564195+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:49.568601+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:49.603093+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:22:49.611717+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:49.612032+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:49.612087+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:22:49.634726+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:23:33.175556+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:23:33.199304+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:23:33.199357+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:23:33.199422+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:23:33.209691+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:23:33.271921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:23:33.284080+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:23:33.284973+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:23:33.285022+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:23:33.367183+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:23:33.405455+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\User::$getGender" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 129 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\User::$getGender at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:129)"} []
[2020-07-10T00:26:18.112246+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:26:18.138954+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:26:18.139066+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:26:18.139173+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:26:18.152381+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:26:18.376537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:26:18.405499+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:26:18.406430+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:26:18.406501+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:26:18.525947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:26:18.552510+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:26:19.644506+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:26:22.298429+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:26:22.450737+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:26:22.534426+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:27:41.349911+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:27:41.389432+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:27:41.389505+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:27:41.389573+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:27:41.399483+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:27:41.507366+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:27:41.526718+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:27:41.527607+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:27:41.527656+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:27:41.611139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:27:41.628056+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:27:42.450620+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:27:45.066567+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:27:45.228334+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:27:45.310576+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:28:29.261858+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:28:29.284094+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:28:29.284147+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:28:29.284210+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:28:29.294159+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:28:29.352741+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:28:29.364800+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:28:29.365681+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:28:29.365730+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:28:29.418438+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:28:29.435215+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:28:30.132627+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:28:32.601750+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:28:32.712473+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:28:32.789470+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:29:16.142047+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:29:16.164001+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:29:16.164082+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:16.164155+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:16.173797+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:16.236758+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:29:16.257096+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:16.257941+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:16.257990+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:16.308396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:29:43.865485+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:29:43.873123+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:29:43.873178+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:43.873248+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:43.877333+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:43.910162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:29:43.918436+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:43.918728+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:43.918777+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:43.942207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:29:48.459284+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:29:48.487143+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:29:48.487236+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:48.487307+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:48.512437+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:48.569336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:29:48.581064+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:48.581891+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:48.581940+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:29:48.652395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:30:07.385194+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:30:07.392415+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:30:07.392475+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:07.392540+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:07.396442+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:07.427845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:30:07.435584+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:07.435874+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:07.435920+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:07.457156+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:30:11.065066+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:30:11.072424+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:30:11.072476+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:11.072537+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:11.076449+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:11.107410+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:30:11.115150+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:11.115437+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:11.115486+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:11.137033+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:30:13.728118+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:30:13.735912+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:30:13.735983+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:13.736051+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:13.740148+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:13.773148+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:30:13.781552+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:13.781845+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:13.781891+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:13.803627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:30:21.027052+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:30:21.047417+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:30:21.047470+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:21.047533+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:21.056718+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:21.111285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:30:21.122589+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:21.123412+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:21.123462+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:21.174893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:30:21.190856+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:30:22.030276+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:30:24.658385+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:30:24.774855+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:30:24.857515+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:30:47.446425+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-10T00:30:47.454350+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-10T00:30:47.454417+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:30:47.454468+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:30:47.455282+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:30:47.487412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:30:48.414979+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:30:48.462507+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 09 Jul 2020 22:30:48 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQzMzM4NDgsImV4cCI6MTU5NDMzNzQ0OCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.BCaDWgR8zcQGr51IZG6DYGcVX7RkYuuVGEnyVG30V_GO7RXw9gXstVhbj0Lm6ywsRqGXxFmpzkPuAHxFKuTDDwOMfZhFXaEVpMFPA4C6u-u0COyb-hVqpdz53xSnGMNev8wlOjNvJp7RQFi35V_8gusybfOW-SNAz__nwpGtV4kdn0vqPgaoGhlei3SG-ZMYYcBeWKBy222gxloJ2tsp0oKmbg7YXPIsNTRgB7v8Xq5xKnUnBv5u25uqnSFLUl4SUMK0ndxmwlcQXUqHjkRgeN2z16q5vPInrhFaDcwEkU6fHfpN8qdKw_dFlTLWjWIhgaOlRzlu81SdfxGNcEbZsZ9AA5BQVuHnQr6EObB8WKbLIMyWgzK4ub9oUIuUlwVBA_5IPHbAoqAYDXxScd_UWCy8IbNpCiO6J8zAA9uJi2Emg_dccQ3q2GGe7nezjySaaPwlOZC1xpIYn8OKMKBujG0fHVTKf2h36p2cfv4dmu9iDT0Vwrs-tqzXkprHN48SfngG9I7RwOcJrLN-0NInQxuUSBTr3yFOk8yLQ_uYXJ0D-vSX_r1i-BNViQfu0uAnmOSoWHdmul0XG82tZPYwVzthjXzryGFfUgbjqxYRbOjeDk-pjOFu2tHZqHK3sxBY5GOJo9AOA2SV9PqeIO8WFs0BASocI4jzpVS24x1tD_Y\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:30:48.462619+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:30:48.462662+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:30:49.010265+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:30:49.040632+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:30:49.040703+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.040761+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.044785+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.056722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:30:49.063638+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.063926+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.063978+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.138831+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:30:49.144318+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[22,10,1,2,3,5,6,7,8,9]] []
[2020-07-10T00:30:49.237370+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:30:49.794563+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:30:49.802715+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:30:49.802769+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.802830+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.806754+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.838317+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:30:49.846285+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.846566+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.846611+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:49.877578+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:30:49.880131+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:30:49.929462+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:30:53.710467+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":"id}}","_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"{{article"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/%7B%7Barticle.id%7D%7D","method":"GET"} []
[2020-07-10T00:30:53.722711+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:30:53.722765+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:53.722828+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:53.732730+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:53.850723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:30:53.872181+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:53.873048+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:53.873096+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:30:53.884762+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Format "id}}" is not supported" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/AddFormatListener.php line 104 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Format \"id}}\" is not supported at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/AddFormatListener.php:104)"} []
[2020-07-10T00:33:25.157162+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:33:25.168731+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:33:25.168796+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.168868+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.177797+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.187604+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:33:25.195915+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.196516+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.196566+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.262957+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [26] []
[2020-07-10T00:33:25.282492+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:33:25.284389+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"nouvel article","2":"<p>article</p>","3":"2020-07-10T00:33:25+02:00","4":"2020-07-10T00:33:25+02:00","5":"nouvel_article","6":26,"7":41} []
[2020-07-10T00:33:25.285940+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-10T00:33:25.287806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [23] []
[2020-07-10T00:33:25.436400+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.article_id = ? [23] []
[2020-07-10T00:33:25.801736+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:33:25.833531+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:33:25.833610+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.833671+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.837738+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.850303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:33:25.857765+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.858065+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.858114+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:25.980047+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:33:25.985989+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[23,22,1,2,3,5,6,7,8,9,10]] []
[2020-07-10T00:33:26.107068+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:33:26.467662+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:33:26.475986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:33:26.476037+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:26.476092+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:26.479933+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:26.510966+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:33:26.518706+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:26.518973+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:26.519019+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:26.600155+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:33:26.603328+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:33:26.627725+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:33:29.951600+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"23"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/23","method":"GET"} []
[2020-07-10T00:33:29.959709+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:33:29.959770+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:29.959830+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:29.963960+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:30.001047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:33:30.011989+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:30.012391+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:30.012452+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:33:30.117045+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [23] []
[2020-07-10T00:34:13.750036+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:34:13.776680+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:34:13.776734+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:13.776793+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:13.786239+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:13.865025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:34:13.877318+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:13.878186+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:13.878235+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:14.000404+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:34:14.006133+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:34:14.082609+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:34:29.486164+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:34:29.493884+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:34:29.493951+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:29.494013+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:29.498182+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:29.538015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:34:29.550647+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:29.551077+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:29.551152+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:29.663689+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [23] []
[2020-07-10T00:34:29.688646+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:34:29.690083+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"dodo maintenant","2":"<p>ZZZZZZZZZZZZzzzzzzzzzzz [...]","3":"2020-07-10T00:34:29+02:00","4":"2020-07-10T00:34:29+02:00","5":"dodo_maintenant","6":23,"7":41} []
[2020-07-10T00:34:29.691828+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-10T00:34:29.693157+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [24] []
[2020-07-10T00:34:29.732274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.article_id = ? [24] []
[2020-07-10T00:34:30.079759+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:34:30.110185+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:34:30.110260+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.110327+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.114347+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.126506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:34:30.133470+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.133753+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.133800+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.186543+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:34:30.191040+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[24,23,22,8,9,10,1,2,3,5,6,7]] []
[2020-07-10T00:34:30.287091+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:34:30.615836+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:34:30.624410+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:34:30.624477+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.624537+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.628650+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.661049+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:34:30.669176+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.669479+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.669527+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:30.700684+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:34:30.704209+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:34:30.848801+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:34:51.506286+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"24"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/24","method":"GET"} []
[2020-07-10T00:34:51.518572+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:34:51.518630+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:51.518689+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:51.528789+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:51.601279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:34:51.612990+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:51.613826+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:51.613875+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:34:51.703285+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [24] []
[2020-07-10T00:36:23.122951+02:00] request.INFO: Matched route "api_articles_delete_item". {"route":"api_articles_delete_item","route_parameters":{"_route":"api_articles_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"delete","id":"24"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/24","method":"DELETE"} []
[2020-07-10T00:36:23.156347+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:36:23.156458+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.156559+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.166921+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.228764+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:36:23.241464+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.242514+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.242587+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.491221+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [24] []
[2020-07-10T00:36:23.507292+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.article_id = ? [24] []
[2020-07-10T00:36:23.511398+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:36:23.511813+02:00] doctrine.DEBUG: DELETE FROM article WHERE id = ? [24] []
[2020-07-10T00:36:23.513656+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-10T00:36:23.863025+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:36:23.894868+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:36:23.894945+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.895012+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.899142+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.913902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:36:23.921987+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.922413+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.922483+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:23.993400+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:36:23.999511+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[23,22,1,2,3,5,6,7,8,9,10]] []
[2020-07-10T00:36:24.069455+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:36:24.390995+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:36:24.399683+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:36:24.399757+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:24.399820+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:24.403995+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:24.436680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:36:24.445024+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:24.445330+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:24.445378+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:24.488859+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:36:24.492612+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:36:24.528410+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:36:25.106501+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:36:25.115273+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:36:25.115350+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:25.115414+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:25.119558+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:25.152754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:36:25.161140+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:25.161461+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:25.161508+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:25.191757+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:36:25.194441+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:36:25.206267+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:36:39.683568+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:36:39.690882+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:36:39.690931+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:39.690986+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:39.694884+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:39.726082+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:36:39.734279+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:39.734585+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:39.734634+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:36:39.766755+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [23] []
[2020-07-10T00:36:39.784180+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:36:39.785531+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"je veux faire dodo","2":"<p>zzzzzzzzzzzzzzZZZZZZzz</p>","3":"2020-07-10T00:36:39+02:00","4":"2020-07-10T00:36:39+02:00","5":"je_veux_faire_dodo","6":23,"7":41} []
[2020-07-10T00:36:39.786688+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-10T00:36:39.792833+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: entity" at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php line 100 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: entity at /home/xaviervimj/projet/symfony/src/Doctrine/Subscriber/ArticleSubscriber.php:100)"} []
[2020-07-10T00:37:12.715832+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:37:12.736849+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:37:12.736904+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:37:12.736970+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:37:12.746271+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:37:12.802410+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:37:12.814098+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:37:12.814972+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:37:12.815020+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:37:12.884509+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [23] []
[2020-07-10T00:37:12.931157+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:37:12.932663+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"je veux faire dodo","2":"<p>zzzzzzzzzzzzzzZZZZZZzz</p>","3":"2020-07-10T00:37:12+02:00","4":"2020-07-10T00:37:12+02:00","5":"je_veux_faire_dodo","6":23,"7":41} []
[2020-07-10T00:37:12.933585+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:37:12.950588+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:37:13.818413+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:37:16.272491+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-10T00:37:16.282536+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:37:16.470605+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:37:16.547649+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:41:30.977953+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:41:31.073323+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:41:31.073432+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:31.073530+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:31.127115+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:31.400991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:41:31.459812+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:31.461535+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:31.461590+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:31.855628+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [23] []
[2020-07-10T00:41:32.055158+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:41:32.071437+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"je veux faire dodo","2":"<p>zzzzzzzzzzzzzzZZZZZZzz</p>","3":"2020-07-10T00:41:32+02:00","4":"2020-07-10T00:41:32+02:00","5":"je_veux_faire_dodo","6":23,"7":41} []
[2020-07-10T00:41:32.072575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:41:32.136701+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:41:32.901166+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:41:35.589477+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-10T00:41:35.690702+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:41:36.142754+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:41:36.226132+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:41:40.078581+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:41:40.085965+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:41:40.086016+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:40.086072+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:40.090162+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:40.122326+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:41:40.130572+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:40.130870+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:40.130916+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:40.153860+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [23] []
[2020-07-10T00:41:40.168771+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:41:40.170005+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"je veux faire dodo","2":"<p>zzzzzzzzzzzzzzZZZZZZzz</p>","3":"2020-07-10T00:41:40+02:00","4":"2020-07-10T00:41:40+02:00","5":"je_veux_faire_dodo","6":23,"7":41} []
[2020-07-10T00:41:40.170913+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:41:40.178481+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:41:40.910701+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:41:41.233779+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-10T00:41:41.241943+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:41:41.303543+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:41:41.385189+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:41:47.585968+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:41:47.593348+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:41:47.593400+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:47.593469+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:47.597500+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:47.629678+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:41:47.637617+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:47.637892+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:47.637937+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:41:47.661150+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [23] []
[2020-07-10T00:41:47.677327+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:41:47.678558+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"je veux faire dodo","2":"<p>zzzzzzzzzzzzzzZZZZZZzz</p>","3":"2020-07-10T00:41:47+02:00","4":"2020-07-10T00:41:47+02:00","5":"je_veux_faire_dodo","6":23,"7":41} []
[2020-07-10T00:41:47.679516+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:41:47.689900+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:41:48.385766+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:41:50.830483+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-10T00:41:50.836846+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:41:50.894305+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:41:50.970939+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:43:11.947315+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:43:11.968772+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:43:11.968850+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:11.968913+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:11.978330+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:12.036980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:43:12.049048+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:12.049940+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:12.049990+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:12.113192+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [23] []
[2020-07-10T00:43:12.143702+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:43:12.145438+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"je veux faire dodo","2":"<p>zzzzzzzzzzzzzzZZZZZZzz</p>","3":"2020-07-10T00:43:12+02:00","4":"2020-07-10T00:43:12+02:00","5":"je_veux_faire_dodo","6":23,"7":41} []
[2020-07-10T00:43:12.146844+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:43:12.165156+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:43:12.972054+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:43:30.582109+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-10T00:43:30.585017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [30] []
[2020-07-10T00:43:30.692682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.article_id = ? [30] []
[2020-07-10T00:43:30.798656+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:43:30.875941+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:43:31.128615+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:43:31.159896+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:43:31.159975+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:31.160041+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:31.164144+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:31.176626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:43:31.183891+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:31.184190+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:31.184238+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:31.435340+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:43:31.477694+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[30,23,22,9,10,1,2,3,5,6,7,8]] []
[2020-07-10T00:43:31.561915+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:43:31.995570+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:43:32.003776+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:43:32.003826+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:32.003882+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:32.007773+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:32.039772+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:43:32.048260+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:32.048572+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:32.048620+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:32.099978+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:43:32.104319+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:43:32.148217+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:43:59.845956+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:43:59.993039+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:43:59.993155+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:43:59.993276+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.011198+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.047717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:44:00.062269+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.063286+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.063361+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.166023+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:44:00.170584+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[30,23,22,9,10,1,2,3,5,6,7,8]] []
[2020-07-10T00:44:00.232251+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:44:00.589039+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:44:00.600801+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:44:00.600901+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.601021+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.607035+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.642905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:44:00.654272+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.654690+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.654762+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:00.690567+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:44:00.693428+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:44:00.721496+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:44:03.993535+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:44:04.002143+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:44:04.002194+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:04.002250+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:04.006309+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:04.038556+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:44:04.046436+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:04.046725+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:04.046774+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:04.085978+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:44:04.089967+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:44:04.114252+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:44:11.578888+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-07-10T00:44:11.586604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:44:11.586658+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:11.586716+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:11.590798+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:11.622801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:44:11.630773+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:11.631082+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:11.631130+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:11.674697+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [23] []
[2020-07-10T00:44:11.698039+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-10T00:44:11.699312+02:00] doctrine.DEBUG: INSERT INTO article (title, content, created_at, updated_at, slug, category_id, author_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"fini","2":"<p>cscsqcs</p>","3":"2020-07-10T00:44:11+02:00","4":"2020-07-10T00:44:11+02:00","5":"fini","6":23,"7":41} []
[2020-07-10T00:44:11.700382+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email_notification = ? [true] []
[2020-07-10T00:44:11.713918+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-07-10T00:44:12.455589+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-07-10T00:44:20.034878+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-10T00:44:20.040974+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Mailer\Exception\TransportException: "Expected response code "354" but got code "550", with message "550 5.7.0 Requested action not taken: too many emails per second"." at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php line 297 {"exception":"[object] (Symfony\\Component\\Mailer\\Exception\\TransportException(code: 550): Expected response code \"354\" but got code \"550\", with message \"550 5.7.0 Requested action not taken: too many emails per second\". at /home/xaviervimj/projet/symfony/vendor/symfony/mailer/Transport/Smtp/SmtpTransport.php:297)"} []
[2020-07-10T00:44:20.111753+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-07-10T00:44:20.193385+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-07-10T00:44:33.795325+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:44:33.893024+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:44:33.893091+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:33.893156+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:33.902992+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:33.924953+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:44:33.935725+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:33.936602+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:33.936651+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:34.007618+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:44:34.015920+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[30,23,22,1,2,3,5,6,7,8,9,10]] []
[2020-07-10T00:44:34.104354+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:44:34.457359+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:44:34.465537+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:44:34.465588+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:34.465642+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:34.469540+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:34.500621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-07-10T00:44:34.508643+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:34.508940+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:34.508985+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:44:34.546730+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:44:34.551638+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:44:34.584878+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:52:24.619170+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-10T00:52:24.647588+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-10T00:52:24.647675+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:52:24.647731+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:52:24.649641+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:52:24.717855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:52:25.732919+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:52:25.833899+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 09 Jul 2020 22:52:25 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQzMzUxNDUsImV4cCI6MTU5NDMzODc0NSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.OmRNaJzh8tZLWMgoi2Smoup29-GER25-xbCnTkH8bWw50yMVoQWL10SfIMz9jSPt-gn8eeIFX_kLxfwJoCzYHBYaNTTparCjg0yKOegJ7bVr-y7FO_IOsqN6lA4JYgM-KibW-dctxubwjc79lqKyh-lp5F7ADY47-m7G6BCyQP8rcB8XSaO6BsNT7CIcFU5i90bFxnDa6qa-bWlqYI3z_PkrxCb1z7w0u71nidCPrflX5a9mlQjwaCDWkdyfLH1y43Um3ecmT7XD51VMcZLyRHo8a0ZFIz9IPG_YtixoxEHjY9md1L9v9Gx2anTgQaCVs2m5Vwt3j-ZKRAC1U7-AUYIfKjiYfBzafoDZJj320c8jyFgd3ZWNmOGxu8AZyqRiCB4CfeYR7wvmNcnXblLl_n23UmvMwS9x0fSshEhm4m3PiOVzGIVrzUA6YxVLdsBJre-5HFLbT3x_PMp_sbUZOyKhMlH5sJ6-E3mTMkOyRQu2Ryaf9qrRIBhu41HPIS2jEwLsOZh5g4vLy36jW5jJ2MDy-EWao3JNMKpfFRqSi7HZ-JYvfw5NcRyGRgYi-fha_jEvPBgjpcCrnH1ph4VakqMjF7Pjl5riTNQCOQB8A08g3ppAFGpBiFLm_Mmp5s35yEm1Kb2RGezftVkh00aCkuxw3gyT8a2flAeFtgSeLUg\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:52:25.833984+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:52:25.834025+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T00:52:26.427544+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T00:52:26.462504+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:52:26.462579+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:26.462647+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:26.468564+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:26.481369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:52:26.488753+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:26.489044+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:26.489090+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:26.564943+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T00:52:26.570248+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[30,23,22,1,2,3,5,6,7,8,9,10]] []
[2020-07-10T00:52:26.635312+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T00:52:27.218557+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:52:27.226684+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:52:27.226735+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:27.226791+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:27.230719+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:27.262516+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:52:27.270340+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:27.270611+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:27.270656+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:27.302087+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:52:27.304729+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:52:27.348220+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:52:31.834034+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"30"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/30","method":"GET"} []
[2020-07-10T00:52:31.841758+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:52:31.841808+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:31.841863+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:31.845781+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:31.877153+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:52:31.884788+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:31.885060+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:31.885106+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:31.924758+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [30] []
[2020-07-10T00:52:36.396100+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"30"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/30","method":"GET"} []
[2020-07-10T00:52:36.404191+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:52:36.404245+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.404311+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.408444+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.441238+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:52:36.449249+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.449546+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.449596+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.475288+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [30] []
[2020-07-10T00:52:36.776870+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T00:52:36.785369+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T00:52:36.785425+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.785488+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.789748+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.821672+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T00:52:36.829487+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.829777+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.829836+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T00:52:36.858582+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T00:52:36.861158+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T00:52:36.884387+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T00:52:51.314749+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-10T00:52:51.457696+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T00:52:51.509234+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T00:52:51.521435+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-10T00:52:51.824636+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-10T00:52:52.025873+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T00:52:52.442242+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b07fa4"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/b07fa4","method":"GET"} []
[2020-07-10T08:20:49.136474+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-10T08:20:49.240516+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-10T08:20:49.240575+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T08:20:49.240625+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T08:20:49.244055+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T08:20:49.383956+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T08:20:50.269484+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T08:20:50.337924+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 10 Jul 2020 06:20:50 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQzNjIwNTAsImV4cCI6MTU5NDM2NTY1MCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.FN3WvUCTnbBqyl1Hh9zPgCNFFW_HMnePK0WRV-CVUhCwhVRMsMHiTWrQbvCKHEOfgh_HNi6HYmYq4mxM6uMWy9a2foEwY7n5I3UBWLtwphSA-39gF-mxM4mD20IeWHbWKbkLhRPnJeYiBYuCowiHiBkQTnzG0QtMMi7L4pAnk16KOiQf1xlik0nJVY7XDtw8F7zomX7VpgBQ41kYN9RNu37XhxTPHJnnU19MU5S0m3CnDYav7jcNJLBpGWVGgW3JwUWHfFxnsqOpx7FqS4VA28JYDRY2_lnX47jooPY1gjQo4RcaVAuUEfpIXlSGM_8mbeQoaDr2bs0m9bp2ZdgwLrCzd_1RNgMv4MhFEsXJ76LHLnX5XIJmn-KZfiCJowpG22nsX2Gto0FtU54hV-kDM5WO8fkM_gfuQgGVVnCgoWpShO-Jfr5HDoJd2E1cJDisDx6P8VeV0yHGOLzjeIcMaSLOVFP2VtKIExFdaG6HMRBch0evDsatH9dxxvrWeTQ8pVbf1Gma2X5hdDmCjeRjep5pxKdzvi38zlhE0fZQiapjKz7hJyHvUzdRwAQa1nOZCTr66mc3gi8fSFEqZMcq4SRu7FqWxI6sWepM_GrXcjB8bMGFkAeqV5zqY6EcwIBYE6AXYBSyYXNc36_rs5nvaLT-caBZ7bqnicC82ODK8k4\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T08:20:50.338047+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T08:20:50.338088+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-10T08:20:54.330479+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T08:20:54.951465+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T08:20:54.951546+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:54.951616+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:55.015634+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:55.124128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T08:20:55.155590+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:55.157292+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:55.157342+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:57.192455+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T08:20:57.292224+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.role[2020-07-10T08:20:56.807593+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T08:20:56.965110+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T08:20:56.965190+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:56.965258+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:56.992530+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:57.053215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T08:20:57.089515+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:57.093971+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:57.094048+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:57.273878+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T08:20:57.291473+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[30,23,22,1,2,3,5,6,7,8,9,10]] []
[2020-07-10T08:20:57.646961+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T08:20:58.965195+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-10T08:20:59.127094+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T08:20:59.127175+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:59.127244+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:59.175194+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:59.229628+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T08:20:59.247901+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:59.249690+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:59.249741+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:20:59.436097+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-10T08:20:59.604283+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[30,23,22,1,2,3,5,6,7,8,9,10]] []
[2020-07-10T08:20:59.805288+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-10T08:21:01.565578+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-10T08:21:01.588697+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-10T08:21:01.588777+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:21:01.588845+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:21:01.607654+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:21:01.731072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-10T08:21:01.751652+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:21:01.753294+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:21:01.753344+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-10T08:21:01.980515+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-10T08:21:02.040380+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,24,25,26]] []
[2020-07-10T08:21:02.432003+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-10T09:34:55.803450+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-10T09:34:56.044437+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T09:34:56.172873+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-10T09:34:56.174332+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-10T09:34:56.625976+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-10T09:34:57.480655+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-10T09:34:58.293433+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6e4618"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/6e4618","method":"GET"} []
[2020-07-10T09:34:58.562893+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-12T20:25:05.823275+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:25:05.850836+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:25:05.905467+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:25:05.905871+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:25:06.410464+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:25:06.798595+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:25:07.292515+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5aca0c"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/5aca0c","method":"GET"} []
[2020-07-12T20:25:11.757556+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:25:11.802470+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:25:12.662952+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:25:12.672108+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:25:12.901976+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:25:12.913380+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:25:12.918826+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:25:12.919176+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:25:13.172923+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:25:13.213761+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:25:13.537590+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"994cc4"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/994cc4","method":"GET"} []
[2020-07-12T20:26:58.784474+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:26:58.939938+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:26:59.294616+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f8b5e"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/9f8b5e","method":"GET"} []
[2020-07-12T20:27:03.181885+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:27:03.255045+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:27:04.174676+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:27:04.184502+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:27:04.431673+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:27:04.442932+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:27:04.450038+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:27:04.450684+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:27:04.692269+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:27:04.733894+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:27:05.028805+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f79404"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/f79404","method":"GET"} []
[2020-07-12T20:27:12.889875+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:27:12.932380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:27:13.826234+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:27:13.835735+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:27:14.081119+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:27:14.092370+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:27:14.097735+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:27:14.098070+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:27:14.340540+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:27:14.383057+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:27:14.694728+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad5646"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/ad5646","method":"GET"} []
[2020-07-12T20:27:18.532251+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"ad5646"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/ad5646?panel=security","method":"GET"} []
[2020-07-12T20:27:18.771461+02:00] request.INFO: Matched route "_profiler_search_bar". {"route":"_profiler_search_bar","route_parameters":{"_route":"_profiler_search_bar","_controller":"web_profiler.controller.profiler::searchBarAction"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/search_bar?panel=security","method":"GET"} []
[2020-07-12T20:27:22.023284+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"ad5646"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/ad5646?panel=logger","method":"GET"} []
[2020-07-12T20:27:22.048191+02:00] request.INFO: Matched route "_profiler_search_bar". {"route":"_profiler_search_bar","route_parameters":{"_route":"_profiler_search_bar","_controller":"web_profiler.controller.profiler::searchBarAction"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/search_bar?panel=logger","method":"GET"} []
[2020-07-12T20:27:57.386478+02:00] request.INFO: Matched route "api_contacts_post_collection". {"route":"api_contacts_post_collection","route_parameters":{"_route":"api_contacts_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Contact","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/contacts","method":"POST"} []
[2020-07-12T20:27:57.461118+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-12T20:27:57.461176+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T20:27:57.461236+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T20:27:57.470348+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T20:27:57.537648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-12T20:27:57.556272+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T20:27:57.557034+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T20:27:57.557081+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T20:27:57.827234+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [39] []
[2020-07-12T20:27:57.829291+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [39] []
[2020-07-12T20:27:57.872635+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-12T20:27:57.874310+02:00] doctrine.DEBUG: INSERT INTO contact (created_at, title, content, channel, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"2020-07-12T20:27:57+02:00","2":"vsdvsdv","3":"svvdvd","4":"espace contact","5":39,"6":39} []
[2020-07-12T20:27:57.875932+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-12T20:27:57.878403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.id = ? [5] []
[2020-07-12T20:28:17.757916+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:28:17.772526+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:28:17.779794+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:28:17.780498+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:28:18.069469+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:28:18.139155+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:28:18.451259+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88477b"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/88477b","method":"GET"} []
[2020-07-12T20:28:23.475325+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:28:23.591314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:28:24.477917+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:28:24.486970+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:28:24.759946+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:28:24.771435+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:28:24.776908+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:28:24.777222+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:28:25.022947+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:28:25.063663+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:28:25.401753+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3c7610"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/3c7610","method":"GET"} []
[2020-07-12T20:28:43.821254+02:00] request.INFO: Matched route "security_logout". {"route":"security_logout","route_parameters":{"_route":"security_logout","_controller":"App\\Controller\\SecurityController::logout"},"request_uri":"http://adminstda.xaviervitali.fr/logout","method":"GET"} []
[2020-07-12T20:28:43.866460+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:28:43.879306+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:28:43.879642+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:28:44.182280+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:28:44.227444+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:28:44.560272+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"202206"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/202206","method":"GET"} []
[2020-07-12T20:28:48.888946+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:28:48.949663+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:28:49.828746+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:28:49.838437+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:28:50.077391+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:28:50.089313+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:28:50.096491+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:28:50.097188+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:28:50.359269+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:28:50.420272+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:28:50.740556+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c2d82a"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/c2d82a","method":"GET"} []
[2020-07-12T20:29:03.152195+02:00] request.INFO: Matched route "_profiler_open_file". {"route":"_profiler_open_file","route_parameters":{"_route":"_profiler_open_file","_controller":"web_profiler.controller.profiler::openAction"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/open?file=src%2FController%2FSecurityController.php&line=37","method":"GET"} []
[2020-07-12T20:29:20.744343+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:29:20.782127+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:29:20.815344+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:29:20.816019+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:29:23.083630+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:29:23.167518+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:29:23.523137+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d30292"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/d30292","method":"GET"} []
[2020-07-12T20:29:28.980467+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:29:29.052322+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:29:29.970000+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:29:29.979716+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:29:30.307498+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:29:30.319268+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:29:30.324923+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:29:30.325246+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:29:30.569147+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:29:30.611505+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:29:30.966846+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2393d3"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/2393d3","method":"GET"} []
[2020-07-12T20:29:57.417721+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"http://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-07-12T20:29:57.463377+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:29:57.477832+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:29:57.478512+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:29:57.723004+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://adminstda.xaviervitali.fr/api","method":"GET"} []
[2020-07-12T20:29:57.744919+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-12T20:29:57.744995+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T20:29:57.745046+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T20:29:57.747366+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:29:57.753584+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:29:57.753934+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:29:57.794981+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:29:57.881342+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:30:10.962701+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:30:10.975417+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:30:10.981644+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:30:10.982153+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:30:11.283249+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:30:11.326731+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:30:11.690750+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4cc5b0"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/4cc5b0","method":"GET"} []
[2020-07-12T20:30:15.075302+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"4cc5b0"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/4cc5b0?panel=logger","method":"GET"} []
[2020-07-12T20:30:15.111454+02:00] request.INFO: Matched route "_profiler_search_bar". {"route":"_profiler_search_bar","route_parameters":{"_route":"_profiler_search_bar","_controller":"web_profiler.controller.profiler::searchBarAction"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/search_bar?panel=logger","method":"GET"} []
[2020-07-12T20:30:19.517671+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"4cc5b0"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/4cc5b0?panel=twig","method":"GET"} []
[2020-07-12T20:30:19.540731+02:00] request.INFO: Matched route "_profiler_search_bar". {"route":"_profiler_search_bar","route_parameters":{"_route":"_profiler_search_bar","_controller":"web_profiler.controller.profiler::searchBarAction"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/search_bar?panel=twig","method":"GET"} []
[2020-07-12T20:30:20.072227+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"4cc5b0"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/4cc5b0?panel=security","method":"GET"} []
[2020-07-12T20:30:20.095204+02:00] request.INFO: Matched route "_profiler_search_bar". {"route":"_profiler_search_bar","route_parameters":{"_route":"_profiler_search_bar","_controller":"web_profiler.controller.profiler::searchBarAction"},"request_uri":"http://adminstda.xaviervitali.fr/_profiler/search_bar?panel=security","method":"GET"} []
[2020-07-12T20:30:33.049961+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:30:33.147334+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:30:34.054381+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:30:34.075021+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:30:34.397953+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:30:34.409322+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:30:34.416414+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:30:34.417065+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:30:34.663719+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:30:34.734283+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:30:35.047208+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"315579"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/315579","method":"GET"} []
[2020-07-12T20:32:18.386480+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:32:18.498537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:32:19.419835+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:32:19.446850+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:32:19.773851+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:32:19.785754+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:32:19.793230+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:32:19.793917+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:32:20.056265+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:32:20.131972+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:32:20.453676+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aa976c"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/aa976c","method":"GET"} []
[2020-07-12T20:32:39.922630+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:32:39.964004+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:32:40.836071+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:32:40.845131+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:32:41.209409+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:32:41.220754+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:32:41.226173+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:32:41.226475+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:32:41.467562+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:32:41.508550+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:32:41.825891+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c02ff2"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/c02ff2","method":"GET"} []
[2020-07-12T20:33:28.064962+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:33:28.192929+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["xavier.vitali@gmail.com"] []
[2020-07-12T20:33:29.112969+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/xaviervimj/projet/symfony/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/xaviervimj/projet/symfony/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-07-12T20:33:29.113093+02:00] security.DEBUG: Authentication failure, redirect triggered. {"failure_path":"security_login"} []
[2020-07-12T20:33:29.507470+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:33:29.583733+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:33:29.936777+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"44fe34"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/44fe34","method":"GET"} []
[2020-07-12T20:36:08.461868+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:36:08.571005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:36:09.456671+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:36:09.494692+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:36:09.913167+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:36:09.924432+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:36:09.931510+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:36:09.932181+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:36:10.177988+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:36:10.248139+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:36:10.576426+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ab6a7b"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/ab6a7b","method":"GET"} []
[2020-07-12T20:38:02.259373+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:38:02.301988+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:38:02.328592+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:38:02.329291+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:38:02.680462+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:38:02.744770+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:38:03.107656+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f4762e"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/f4762e","method":"GET"} []
[2020-07-12T20:38:07.468864+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:38:07.549126+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:38:08.429400+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:38:08.438816+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:38:08.738939+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:38:08.750146+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:38:08.755657+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:38:08.755958+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:38:09.006597+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:38:09.047458+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:38:09.331075+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bf6a3b"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/bf6a3b","method":"GET"} []
[2020-07-12T20:41:05.830815+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:41:06.007843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:41:06.940789+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:41:06.970790+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:41:07.343296+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:41:07.354971+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:41:07.362311+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:41:07.363025+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:41:07.601932+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:41:07.689156+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:41:08.008787+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d65153"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/d65153","method":"GET"} []
[2020-07-12T20:41:11.592044+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:41:11.632404+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:41:12.490260+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:41:12.499594+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:41:12.852905+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:41:12.870159+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:41:12.878368+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:41:12.878853+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:41:13.163563+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:41:13.207432+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:41:13.534894+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a8e4b"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/3a8e4b","method":"GET"} []
[2020-07-12T20:41:16.264139+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:41:16.306871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:41:17.282527+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:41:17.291795+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:41:17.683162+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:41:17.694616+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:41:17.700239+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:41:17.700562+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:41:17.996553+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:41:18.040092+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:41:18.359899+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd90cc"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/fd90cc","method":"GET"} []
[2020-07-12T20:43:37.373467+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:43:37.471509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:43:38.383658+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:43:38.411179+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:43:41.136926+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:43:41.148755+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:43:41.156156+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:43:41.156824+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:43:41.441571+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:43:41.504964+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:43:41.822366+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c9de0a"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/c9de0a","method":"GET"} []
[2020-07-12T20:43:46.830437+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:43:46.872354+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:43:47.763117+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:43:47.773910+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:43:48.107281+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:43:48.118932+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:43:48.124348+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:43:48.124649+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:43:48.397200+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:43:48.437790+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:43:48.765886+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c6ee3"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/7c6ee3","method":"GET"} []
[2020-07-12T20:47:26.312480+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:47:26.408481+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:47:27.302811+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:47:27.322731+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:47:27.664036+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:47:27.675380+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:47:27.682459+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:47:27.683132+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:47:27.951865+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:47:28.014239+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:47:28.370801+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"669065"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/669065","method":"GET"} []
[2020-07-12T20:59:37.769766+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:59:37.823139+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:59:37.837483+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:59:37.838151+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:59:38.137954+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:59:38.212483+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:59:38.590342+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc8b6a"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/cc8b6a","method":"GET"} []
[2020-07-12T20:59:40.959228+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T20:59:41.046530+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T20:59:41.917082+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T20:59:41.926547+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T20:59:42.185548+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T20:59:42.196968+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:59:42.202340+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T20:59:42.202658+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T20:59:42.441938+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T20:59:42.482861+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T20:59:42.757445+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"02d0a2"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/02d0a2","method":"GET"} []
[2020-07-12T21:00:17.045997+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T21:00:17.152232+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T21:00:18.075757+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T21:00:18.122588+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T21:00:18.427956+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T21:00:18.439864+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:00:18.447238+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T21:00:18.447946+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T21:00:18.720182+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:00:18.828059+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:00:19.159632+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"019d7c"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/019d7c","method":"GET"} []
[2020-07-12T21:02:15.293495+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T21:02:15.454395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T21:02:16.365271+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T21:02:16.404266+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T21:02:16.694035+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T21:02:16.705372+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:02:16.712524+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-12T21:02:16.713188+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-12T21:02:16.952771+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:02:17.032381+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:02:17.349965+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dc77f5"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/dc77f5","method":"GET"} []
[2020-07-12T21:03:17.251241+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:03:17.297766+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: form" at /home/xaviervimj/projet/symfony/src/Controller/SecurityController.php line 40 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: form at /home/xaviervimj/projet/symfony/src/Controller/SecurityController.php:40)"} []
[2020-07-12T21:03:17.505102+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:03:18.061705+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7923ab"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/7923ab","method":"GET"} []
[2020-07-12T21:03:35.442846+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:03:35.459701+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: form" at /home/xaviervimj/projet/symfony/src/Controller/SecurityController.php line 40 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: form at /home/xaviervimj/projet/symfony/src/Controller/SecurityController.php:40)"} []
[2020-07-12T21:03:35.481585+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:03:35.888968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4662bb"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/4662bb","method":"GET"} []
[2020-07-12T21:03:41.716986+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:03:41.735185+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: form" at /home/xaviervimj/projet/symfony/src/Controller/SecurityController.php line 40 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: form at /home/xaviervimj/projet/symfony/src/Controller/SecurityController.php:40)"} []
[2020-07-12T21:03:41.757937+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:03:42.187719+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f6fa8e"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/f6fa8e","method":"GET"} []
[2020-07-12T21:03:44.954499+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:03:44.970984+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: form" at /home/xaviervimj/projet/symfony/src/Controller/SecurityController.php line 40 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: form at /home/xaviervimj/projet/symfony/src/Controller/SecurityController.php:40)"} []
[2020-07-12T21:03:44.992421+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:03:45.610528+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9c6746"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/9c6746","method":"GET"} []
[2020-07-12T21:03:59.463868+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:05:01.782327+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:05:15.206059+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:05:19.145429+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:05:28.130022+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:05:33.944843+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-12T21:05:34.172173+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-12T21:05:34.654340+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ec9f3"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/9ec9f3","method":"GET"} []
[2020-07-12T21:05:36.260261+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-12T21:05:36.330008+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T21:05:37.244249+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-12T21:05:37.253782+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T21:05:37.653487+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-12T21:05:37.665942+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-12T21:05:37.694751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-12T21:05:37.706470+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-12T21:05:37.752139+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T21:05:37.990068+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-07-12T21:05:38.003813+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-12T21:05:38.032884+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-12T21:05:38.044017+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-12T21:05:38.083255+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-07-12T21:05:38.084341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-07-12T21:05:38.345591+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-12T21:05:38.696946+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2c667"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/f2c667","method":"GET"} []
[2020-07-12T21:37:25.177480+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-12T21:37:25.204897+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-12T21:37:25.204971+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-12T21:37:25.205020+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-12T21:37:25.206837+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-12T21:37:25.264935+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T21:37:26.148518+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-12T21:37:26.199009+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Sun, 12 Jul 2020 19:37:26 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQ1ODI2NDYsImV4cCI6MTU5NDU4NjI0Niwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.un_0aB44lyg6AuVVb9Dk6M7JBdxumbNF9wV4ERVzftyORTpCcZvZkNeYom5jMxEC0vVEm6Ckn91iW_G2sok0x9VhaPGJZ5oFZ6pavmZ2aYRhq_fac9vHH0YDZx0-4rTCP5ydR-rCl8zvPIWmv9aH04ulobZf-aB6SLLs6uP8UeW0WrF-NeV0EjtiefpX-O_FatlHXDvR_srq3FGqbd9uLUE5qPF1bhbXoeWUbaLNK-h8gM5-tlaUij5scKrdN_dwzcJPPzlgI7PF8ZDm_G_ZsFSWRMKIrNZ5apNlZs2fT_t9qqXldG0D9Ts--GISKQTSyBBoLu8PzlmsnXcSN1zV2zkd1wUyunMdHUgOJ2nAJMSYh4hC-EB60ZxrSpJD44pxBKplW2aTWPygSNxC5dpaf1_ovdh56rJLsFds6MEIf6F3maAlhiE_sjFMrpnshR6-gy0B3Qq1VLiXrq29l-swMvoVb6b_5yxRPztpD067crYlwi_BJhOsAOOZ1ueTacXcuMs-QtstSwrdZKCIyKNyNZbh3qmbXJ6hwueDH8bqsy31BQsxziQ1kvUD7yeeQwZ99Nn4qdEb6e4oeyzu18vMDA5TKfJ5YgcAiPeTE7xi6T5IDHStWPIimHZQ8SqpskaBwwf4XezRWFN3MyP3zzLeMYv4yX7XlOLMcJidHGulIS0\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-12T21:37:26.199097+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-12T21:37:26.199139+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-12T21:37:26.738693+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-12T21:37:26.787056+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-12T21:37:26.787127+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:26.787186+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:26.792952+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:26.803500+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T21:37:26.813406+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:26.813691+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:26.813737+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:27.338016+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-12T21:37:27.343812+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-07-12T21:37:27.641415+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-12T21:37:28.167963+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-12T21:37:28.175947+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-12T21:37:28.176000+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:28.176058+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:28.179994+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:28.210725+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-12T21:37:28.224169+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:28.224453+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:28.224499+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-12T21:37:28.337753+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-12T21:37:28.340401+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-12T21:37:28.411021+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-13T12:17:01.345759+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /assets/files/jellyfish-10480-5f0c347204734754481216.mp4" (from "http://localhost:4200/uploads")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /assets/files/jellyfish-10480-5f0c347204734754481216.mp4\" (from \"http://localhost:4200/uploads\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/files/jellyfish-10480-5f0c347204734754481216.mp4/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-13T12:17:01.345569+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /assets/files/green-tree-beside-seashore-near-green-mountain-719609-5f0c34865f893563153151.jpg" (from "http://localhost:4200/uploads")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /assets/files/green-tree-beside-seashore-near-green-mountain-719609-5f0c34865f893563153151.jpg\" (from \"http://localhost:4200/uploads\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/files/green-tree-beside-seashore-near-green-mountain-719609-5f0c34865f893563153151.jpg/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-13T12:18:20.930409+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /assets/files/green-tree-beside-seashore-near-green-mountain-719609-5f0c34865f893563153151.jpg" (from "http://localhost:4200/uploads")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /assets/files/green-tree-beside-seashore-near-green-mountain-719609-5f0c34865f893563153151.jpg\" (from \"http://localhost:4200/uploads\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/files/green-tree-beside-seashore-near-green-mountain-719609-5f0c34865f893563153151.jpg/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-13T12:18:20.930506+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /assets/files/jellyfish-10480-5f0c347204734754481216.mp4" (from "http://localhost:4200/uploads")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /assets/files/jellyfish-10480-5f0c347204734754481216.mp4\" (from \"http://localhost:4200/uploads\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/files/jellyfish-10480-5f0c347204734754481216.mp4/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-13T15:32:54.400104+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-07-13T15:32:55.594565+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-13T15:32:55.925762+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-13T15:32:55.927897+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-13T15:32:56.982530+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-13T15:32:57.982379+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-13T15:32:58.541656+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e754f2"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/e754f2","method":"GET"} []
[2020-07-13T15:32:58.583414+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "https://adminstda.xaviervitali.fr/login")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"https://adminstda.xaviervitali.fr/login\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-13T16:00:35.595454+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-13T16:00:35.625290+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-13T16:00:35.625347+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-13T16:00:35.625397+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-13T16:00:35.707824+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-13T16:00:37.584457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-13T16:00:39.354011+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-13T16:00:40.180171+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 13 Jul 2020 14:00:40 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQ2NDg4MzksImV4cCI6MTU5NDY1MjQzOSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.Ccr0sMT-dEbYD0WXaxhy139MMbQ4IhPCIi5IsfcP3krp8Dz_IO6BauXM3Q8VfGeMbBgrkKTjwfYin7Sod7LouiPMrckhRieJ8jZPm1CduGh0rwQd5VXdHHyaGneJCeRdjYVNa4bTZ3uQN__Qi6Mwrvv_MzQDOtfRTraojhxkmUEPreeHBk-EZSSYoEPHEAZ_x3uK9AAd7wjde7uIL181arODaGT0cz1iGrDFAzGxpc4EmT3FHisZIZXLCxG9VnVWtf1CYY7_Mgm3msGYddx06_P2xb4gvPET31dcwguxErCUz5XNxYLnzeu-9uctsvUnrEfFznDkiODjvwrX4ufuBDDUBLg-cw7hZqxWZWkUGlmE9VUSKCOTSfKssFpZHBc7CF4fVyM78nV8VcNd4CRDk9hIQNpWhBVg38lzKgIYm09MTFtjGnsnCDNJZS9s5u0LX0F9emIYXWynI2BkGsMU5N7hyMiX6e7bZfrx238USawL3K3MyhyLEdTX0Mcn5djDj6Go97IbdY1M5JbdbchmCvoDea-bg1vENX0PS03DLhYtmbWTcaufWYrFpvNtLnze5mENqxIou3EoHEgIvS8oCaI40klU3RQFAlFT0fD4aD92yxD9LEF_WCfLokUlgMxOoPBrezbVmAlvhKUqn2lNHSieF7wok4MTWkX2AIIncc4\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-13T16:00:40.180279+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-13T16:00:40.180320+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-13T16:00:40.911475+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-13T16:00:41.208005+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-13T16:00:41.208085+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:41.208148+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:41.271448+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:41.298788+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-13T16:00:41.353182+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:41.353482+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:41.353527+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:43.906273+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-13T16:00:44.139142+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-07-13T16:00:44.773507+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-13T16:00:45.605133+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-13T16:00:45.622448+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-13T16:00:45.622564+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:45.622671+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:45.629124+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:45.681177+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-13T16:00:45.704083+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:45.704515+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:45.704587+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-13T16:00:45.983163+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-13T16:00:45.988849+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-13T16:00:46.236316+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-14T22:05:49.941917+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-14T22:05:49.941962+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-14T22:05:49.941946+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-14T22:05:50.023204+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-14T22:05:50.023204+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-14T22:05:50.023204+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-14T22:05:50.023293+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.023297+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.023295+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.023347+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.023352+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.023355+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.043757+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.043756+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.043773+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:50.769218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-14T22:05:50.769272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-14T22:05:50.769272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-14T22:05:51.857207+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:51.862734+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:51.923048+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.032345+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Tue, 14 Jul 2020 20:05:52 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQ3NTcxNTEsImV4cCI6MTU5NDc2MDc1MSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.UWNhO6Wbp64PViPBm4DGkfFpiNv6Te9OxY-R8RL16SvvuMMA6_vW12fD1WEwVHCWh12KB-jyJkVXSh9M_m8FVtV3GHLEwEhzaeYos_eeTx42hj45mFEJatlOseYJ1sfX1XJs54B6sKjRqbPxwpRLszYOLOaoLTcSfZDfReJROEeIApIEL2qHWSJlh8-RRcmYluGwJ1oQEIDPFkmdYZlDmJqX0OOitvlykYI55c_Q50cjiIly_m2btLLRC6biz8j43-fq5T_Ce8DBL2j4nBM0U169swPzAcWaI3_-m6xtQJK3S7TEuMK_Vz6fGy95r910CMMILt-nUMam9M9vLhOKHxdb5rf2Lqem0_vWofs16jfk4gJV1yWGQ9hERMSgizALohVKHreuC-jE7Z2M3p819dWOYRrzMoi0zwNoQGpHDKp7LsvgGB0vIm3qdepeh71ybTB3KYTXgjqIR2hCZIH9jWxb2mcTtRvEBIMgll8kHhYChhRpcfCsjjIwPtfWoyGQD81fcX2Ku6AM1qaDtJsDss1eO1XkTSrqg95oSj7tBzkC4sRNe4zHtNPg-A7bs4Be7e9G6yg1kUWwaL4R7iHDu4OTrGzQ1ZsUaH4nEme4EdNuaS22gEg1MpOQO0u1QbIDhoqs1voNs2p7LXm9BQxxuOgpJAjF8YvL7Yb23kPCN0k\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.032481+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.032539+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.036772+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Tue, 14 Jul 2020 20:05:52 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQ3NTcxNTEsImV4cCI6MTU5NDc2MDc1MSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.UWNhO6Wbp64PViPBm4DGkfFpiNv6Te9OxY-R8RL16SvvuMMA6_vW12fD1WEwVHCWh12KB-jyJkVXSh9M_m8FVtV3GHLEwEhzaeYos_eeTx42hj45mFEJatlOseYJ1sfX1XJs54B6sKjRqbPxwpRLszYOLOaoLTcSfZDfReJROEeIApIEL2qHWSJlh8-RRcmYluGwJ1oQEIDPFkmdYZlDmJqX0OOitvlykYI55c_Q50cjiIly_m2btLLRC6biz8j43-fq5T_Ce8DBL2j4nBM0U169swPzAcWaI3_-m6xtQJK3S7TEuMK_Vz6fGy95r910CMMILt-nUMam9M9vLhOKHxdb5rf2Lqem0_vWofs16jfk4gJV1yWGQ9hERMSgizALohVKHreuC-jE7Z2M3p819dWOYRrzMoi0zwNoQGpHDKp7LsvgGB0vIm3qdepeh71ybTB3KYTXgjqIR2hCZIH9jWxb2mcTtRvEBIMgll8kHhYChhRpcfCsjjIwPtfWoyGQD81fcX2Ku6AM1qaDtJsDss1eO1XkTSrqg95oSj7tBzkC4sRNe4zHtNPg-A7bs4Be7e9G6yg1kUWwaL4R7iHDu4OTrGzQ1ZsUaH4nEme4EdNuaS22gEg1MpOQO0u1QbIDhoqs1voNs2p7LXm9BQxxuOgpJAjF8YvL7Yb23kPCN0k\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.036869+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.036912+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.040287+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Tue, 14 Jul 2020 20:05:52 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQ3NTcxNTEsImV4cCI6MTU5NDc2MDc1MSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.UWNhO6Wbp64PViPBm4DGkfFpiNv6Te9OxY-R8RL16SvvuMMA6_vW12fD1WEwVHCWh12KB-jyJkVXSh9M_m8FVtV3GHLEwEhzaeYos_eeTx42hj45mFEJatlOseYJ1sfX1XJs54B6sKjRqbPxwpRLszYOLOaoLTcSfZDfReJROEeIApIEL2qHWSJlh8-RRcmYluGwJ1oQEIDPFkmdYZlDmJqX0OOitvlykYI55c_Q50cjiIly_m2btLLRC6biz8j43-fq5T_Ce8DBL2j4nBM0U169swPzAcWaI3_-m6xtQJK3S7TEuMK_Vz6fGy95r910CMMILt-nUMam9M9vLhOKHxdb5rf2Lqem0_vWofs16jfk4gJV1yWGQ9hERMSgizALohVKHreuC-jE7Z2M3p819dWOYRrzMoi0zwNoQGpHDKp7LsvgGB0vIm3qdepeh71ybTB3KYTXgjqIR2hCZIH9jWxb2mcTtRvEBIMgll8kHhYChhRpcfCsjjIwPtfWoyGQD81fcX2Ku6AM1qaDtJsDss1eO1XkTSrqg95oSj7tBzkC4sRNe4zHtNPg-A7bs4Be7e9G6yg1kUWwaL4R7iHDu4OTrGzQ1ZsUaH4nEme4EdNuaS22gEg1MpOQO0u1QbIDhoqs1voNs2p7LXm9BQxxuOgpJAjF8YvL7Yb23kPCN0k\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.040430+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.040498+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-14T22:05:52.814783+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-14T22:05:52.962784+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-14T22:05:52.962868+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:52.962934+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:53.011678+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:53.046676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-14T22:05:53.061430+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:53.061735+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:53.061782+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:54.422466+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-14T22:05:54.540564+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-07-14T22:05:55.006626+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-14T22:05:55.693998+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-14T22:05:55.702393+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-14T22:05:55.702453+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:55.702516+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:55.706595+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:55.738448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-14T22:05:55.752001+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:55.752293+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:55.752344+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:55.881980+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-14T22:05:55.886010+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-14T22:05:56.006646+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-14T22:05:57.962737+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-14T22:05:57.971326+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-14T22:05:57.971394+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:57.971460+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:57.975592+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:58.008617+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-14T22:05:58.022977+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:58.023319+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:58.023368+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:05:58.054037+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-14T22:05:58.056490+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-14T22:05:58.091033+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-14T22:06:00.166136+02:00] request.INFO: Matched route "api_file_uploads_GET_collection". {"route":"api_file_uploads_GET_collection","route_parameters":{"_route":"api_file_uploads_GET_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\FileUpload","_api_collection_operation_name":"GET"},"request_uri":"https://adminstda.xaviervitali.fr/api/file_uploads","method":"GET"} []
[2020-07-14T22:06:00.174386+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-14T22:06:00.174463+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:06:00.174526+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:06:00.178634+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:06:00.211202+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-14T22:06:00.225203+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:06:00.225512+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:06:00.225559+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-14T22:06:02.020172+02:00] doctrine.DEBUG: SELECT f0_.id AS id_0, f0_.file_uploaded_name AS file_uploaded_name_1, f0_.title AS title_2, f0_.updated_at AS updated_at_3, u1_.id AS id_4, u1_.email AS email_5, u1_.roles AS roles_6, u1_.password AS password_7, u1_.gender AS gender_8, u1_.last_name AS last_name_9, u1_.first_name AS first_name_10, u1_.children AS children_11, u1_.email_notification AS email_notification_12, u1_.registered_at AS registered_at_13, u1_.granted AS granted_14, u1_.about AS about_15, f0_.added_by_id AS added_by_id_16 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id ORDER BY f0_.updated_at DESC LIMIT 30 [] []
[2020-07-14T22:06:02.140400+02:00] doctrine.DEBUG: SELECT count(DISTINCT f0_.id) AS sclr_0 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id [] []
[2020-07-17T09:31:15.932798+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-17T09:31:15.932818+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-17T09:31:16.145184+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-17T09:31:16.145184+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-17T09:31:16.145272+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:16.145274+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:16.145329+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:16.145331+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:16.191959+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:16.191976+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:18.221807+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-17T09:31:18.221871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-17T09:31:20.053982+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:20.065888+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:20.693501+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 17 Jul 2020 07:31:20 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQ5NzEwODAsImV4cCI6MTU5NDk3NDY4MCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.WtJbabCE6-r_-1KylHkBg2L9ZmMa4vDpoYktMHbGhIatU3vmhLDE7jjjKcpq7tX-5DnnlrJFfYLKgX5JW1e0CSZbs64p0AyAj6otx-_eLlQJKMsV1ZVUvvd9btaeZTRYCHCyV-ic6_QOTUa_BAz8wwUgyFdbg16B9MaI4onUiuMMEW2pY5nYbw1HdzUzb0FLN7iNzpNDriOxvPFGBwnF_o6WybV9_AGgPr5T8RTD2cUDMZe-M3td-GJlvPy39BNSWW-OUd8GwG9NQec6_RFGM2hQiBltmMJox89KjtSvo2L3NCDBGwFFvAUfXlXJK8DhUVNPI-jF2v-Zk63chDTdNJ-cYhmC_ilWzwYyb3TSCLYi3BCq4aujPNoYDsOcpzVzicXOY2HeRcGQLTtHfTiGHgkxV9uq6l_Dk3lbFTarPFXhzWnhh5zV547pO5JwB1V3S71liwwJZbKzXQl4leCL6w2Fc2Kvi3fYoJsD_Fkts-0DVNWkysTEbxwlhERZ4tF0JHI0Ku9jSWIfKkpHXbeZKwdA756ciL7EbK0oKdw-ovWeBIlDnfVlD_GSQcBJqaJ-_DDBnUpM5uLqZONg7HEiVldqSTuWxs3W5W8aPlOf6PQ_W3aF9OkYVgIBnmR3orZkqjak5stAceVo16KbyO_If7VH3GwjdwEa6Z48bOP-aPw\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:20.693508+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 17 Jul 2020 07:31:20 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTQ5NzEwODAsImV4cCI6MTU5NDk3NDY4MCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.WtJbabCE6-r_-1KylHkBg2L9ZmMa4vDpoYktMHbGhIatU3vmhLDE7jjjKcpq7tX-5DnnlrJFfYLKgX5JW1e0CSZbs64p0AyAj6otx-_eLlQJKMsV1ZVUvvd9btaeZTRYCHCyV-ic6_QOTUa_BAz8wwUgyFdbg16B9MaI4onUiuMMEW2pY5nYbw1HdzUzb0FLN7iNzpNDriOxvPFGBwnF_o6WybV9_AGgPr5T8RTD2cUDMZe-M3td-GJlvPy39BNSWW-OUd8GwG9NQec6_RFGM2hQiBltmMJox89KjtSvo2L3NCDBGwFFvAUfXlXJK8DhUVNPI-jF2v-Zk63chDTdNJ-cYhmC_ilWzwYyb3TSCLYi3BCq4aujPNoYDsOcpzVzicXOY2HeRcGQLTtHfTiGHgkxV9uq6l_Dk3lbFTarPFXhzWnhh5zV547pO5JwB1V3S71liwwJZbKzXQl4leCL6w2Fc2Kvi3fYoJsD_Fkts-0DVNWkysTEbxwlhERZ4tF0JHI0Ku9jSWIfKkpHXbeZKwdA756ciL7EbK0oKdw-ovWeBIlDnfVlD_GSQcBJqaJ-_DDBnUpM5uLqZONg7HEiVldqSTuWxs3W5W8aPlOf6PQ_W3aF9OkYVgIBnmR3orZkqjak5stAceVo16KbyO_If7VH3GwjdwEa6Z48bOP-aPw\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:20.693631+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:20.693650+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:20.693674+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:20.693716+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-17T09:31:21.934468+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-17T09:31:22.110272+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-17T09:31:22.110402+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-17T09:31:22.110516+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-17T09:31:22.186477+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-17T09:31:22.247762+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-17T09:31:22.273030+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-17T09:31:22.273419+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-17T09:31:22.273474+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-17T09:31:25.549350+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-17T09:31:25.767274+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-07-17T09:31:26.543280+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-19T18:59:41.349059+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-19T18:59:41.882683+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-19T18:59:42.082175+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-19T18:59:42.084159+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-19T18:59:42.960981+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-19T18:59:43.655590+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-19T18:59:44.527347+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0cc3a"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/d0cc3a","method":"GET"} []
[2020-07-19T18:59:44.696794+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "https://adminstda.xaviervitali.fr/login")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"https://adminstda.xaviervitali.fr/login\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-19T18:59:50.109296+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-19T18:59:51.176325+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-19T18:59:52.311867+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-19T18:59:52.334617+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-19T18:59:52.636730+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-19T18:59:52.649587+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-19T18:59:52.679228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-19T18:59:52.691134+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-19T18:59:52.709923+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-19T18:59:52.963468+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-07-19T18:59:52.976147+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-19T18:59:53.005091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-19T18:59:53.016258+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-19T18:59:53.077735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-07-19T18:59:53.078667+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-07-19T18:59:53.138640+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-19T18:59:53.547731+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"91cf4a"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/91cf4a","method":"GET"} []
[2020-07-21T20:31:25.204894+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-07-21T20:31:25.709475+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-21T20:31:25.931716+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-21T20:31:25.933777+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-21T20:31:26.713693+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-21T20:31:27.381239+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-21T20:31:28.460589+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"756243"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/756243","method":"GET"} []
[2020-07-24T06:24:34.925315+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-24T06:24:34.925444+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-24T06:24:34.925433+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-24T06:24:35.224315+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-24T06:24:35.224315+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-24T06:24:35.224322+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-24T06:24:35.224406+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:35.224407+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:35.224428+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:35.224464+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:35.224464+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:35.224524+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:35.274102+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:35.274108+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:35.274105+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:37.006437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T06:24:37.006437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T06:24:37.006510+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T06:24:38.581054+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.584657+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.723487+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881544+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 24 Jul 2020 04:24:38 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTU1NjQ2NzgsImV4cCI6MTU5NTU2ODI3OCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.QBqd37dd7oGFcDd0l_rHfMbR8mkgpNSKDTPl__ogL_ZAN7GuRlRzkLaae0ODWUrr_Uh2BFHIJt5t4boj0ZGp4cXIRneRah_5ZhfnCBp3i3lxQuKsuLB0R876LQJsinLG3A_EI0n0bGuegZ09NS6rKBXmSHEQBfDgihdf8Z7w0cKRo6q85PouT9Hl8dwGoI7BOHEwbUIqes-rAIPypp5jbGcJ3OkuDumgyF8GqLbVyZN-3sKzatNETkz0MWjAish48JGXpxcv0qSI24BHvyGgjH15IciDcnyitmCqwd9DuKpDGLp3Rqw9aLkCKo_roRaWUxv8JmokXk8MnMNAqp-GnJDvRtjdnpXLL0i5t17t9EVPvTj8BfKDN_P7drQBU-s4mXVTO1Cg0O2MaNErk33DIL3BEYo9moakixYAYcjLIWzDK-7SWAswOEdTSbglr_wLGHsBv-bE1dvMG2Qx4ktz2bPL1WzBQYeoelD8mI1nMSIi3CspjlPcOmcBfhNCNACFTWn2L0YtnyZzu4UdeJLwmscUCrm6-ArxVtfJ49k3QdgulhdfKxExw5DLnnQMv0DqZHkpJCzM9KKZTs5aSSmK1nMhdv17brFsHq9eln7EoJtuAy_iKm4OqwusuboKDmLReN_LSpZ3ovbqPRTMrKhp-UJochEGKvQzwgv99dsv2m4\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881544+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 24 Jul 2020 04:24:38 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTU1NjQ2NzgsImV4cCI6MTU5NTU2ODI3OCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.QBqd37dd7oGFcDd0l_rHfMbR8mkgpNSKDTPl__ogL_ZAN7GuRlRzkLaae0ODWUrr_Uh2BFHIJt5t4boj0ZGp4cXIRneRah_5ZhfnCBp3i3lxQuKsuLB0R876LQJsinLG3A_EI0n0bGuegZ09NS6rKBXmSHEQBfDgihdf8Z7w0cKRo6q85PouT9Hl8dwGoI7BOHEwbUIqes-rAIPypp5jbGcJ3OkuDumgyF8GqLbVyZN-3sKzatNETkz0MWjAish48JGXpxcv0qSI24BHvyGgjH15IciDcnyitmCqwd9DuKpDGLp3Rqw9aLkCKo_roRaWUxv8JmokXk8MnMNAqp-GnJDvRtjdnpXLL0i5t17t9EVPvTj8BfKDN_P7drQBU-s4mXVTO1Cg0O2MaNErk33DIL3BEYo9moakixYAYcjLIWzDK-7SWAswOEdTSbglr_wLGHsBv-bE1dvMG2Qx4ktz2bPL1WzBQYeoelD8mI1nMSIi3CspjlPcOmcBfhNCNACFTWn2L0YtnyZzu4UdeJLwmscUCrm6-ArxVtfJ49k3QdgulhdfKxExw5DLnnQMv0DqZHkpJCzM9KKZTs5aSSmK1nMhdv17brFsHq9eln7EoJtuAy_iKm4OqwusuboKDmLReN_LSpZ3ovbqPRTMrKhp-UJochEGKvQzwgv99dsv2m4\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881557+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 24 Jul 2020 04:24:38 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTU1NjQ2NzgsImV4cCI6MTU5NTU2ODI3OCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.QBqd37dd7oGFcDd0l_rHfMbR8mkgpNSKDTPl__ogL_ZAN7GuRlRzkLaae0ODWUrr_Uh2BFHIJt5t4boj0ZGp4cXIRneRah_5ZhfnCBp3i3lxQuKsuLB0R876LQJsinLG3A_EI0n0bGuegZ09NS6rKBXmSHEQBfDgihdf8Z7w0cKRo6q85PouT9Hl8dwGoI7BOHEwbUIqes-rAIPypp5jbGcJ3OkuDumgyF8GqLbVyZN-3sKzatNETkz0MWjAish48JGXpxcv0qSI24BHvyGgjH15IciDcnyitmCqwd9DuKpDGLp3Rqw9aLkCKo_roRaWUxv8JmokXk8MnMNAqp-GnJDvRtjdnpXLL0i5t17t9EVPvTj8BfKDN_P7drQBU-s4mXVTO1Cg0O2MaNErk33DIL3BEYo9moakixYAYcjLIWzDK-7SWAswOEdTSbglr_wLGHsBv-bE1dvMG2Qx4ktz2bPL1WzBQYeoelD8mI1nMSIi3CspjlPcOmcBfhNCNACFTWn2L0YtnyZzu4UdeJLwmscUCrm6-ArxVtfJ49k3QdgulhdfKxExw5DLnnQMv0DqZHkpJCzM9KKZTs5aSSmK1nMhdv17brFsHq9eln7EoJtuAy_iKm4OqwusuboKDmLReN_LSpZ3ovbqPRTMrKhp-UJochEGKvQzwgv99dsv2m4\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881654+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881662+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881695+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881703+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881686+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:38.881747+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:39.680326+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-24T06:24:39.688002+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-24T06:24:39.688076+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:39.688127+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:39.688942+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:39.720665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T06:24:39.861009+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-24T06:24:40.090380+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-24T06:24:40.090474+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:40.090548+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:40.248503+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:40.268367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T06:24:40.331703+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:40.332139+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:40.332208+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:40.635397+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:40.680327+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 24 Jul 2020 04:24:40 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTU1NjQ2ODAsImV4cCI6MTU5NTU2ODI4MCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.MMOuusJoRkVQR9rtCwd-y2wI5677Lg1kZWll1EoNBA7XemdTKA-K3fHCE7brSYYPKlFBjbpvReacgR9fgEVIqvmTZzl7sH-zDqz-4z_tFsGVdM5p3AKTPPiad5DhCklXtBNciEzKw9HK9cyoeOmjcT9eNVpTZoMAQsJYnnB5ALvT10xX0RkK38k1tmhr90W1NwvtA9tvZNTelG29pgzxvru1ycOWqdtYXkUkkKoSYU5_Cu272yQqEUnt3vIZK532FRRMussrOMQu25Z_I8Wo0L6PMVxy1srCtSPOY4daUkIpKy3GfAhlm4BCENbf49KFwGMUWhW7W6JfTp8TBxdjHvXa6ASclK-OA-EnJahWcLGbPR9r0LJPleNlO9OpsoAkT16VmBP-FCr-sfz2OmFsu_1qKc_ZQ44VKHsA9Ois2h9cPM8W0D0Z4rmXrujpF6xxfIBa7zAfSc6UVRV5GKv9_O6MCFBomnsuOC_jTLZ3s4EM1AJItRLTK7VKialq5ChxrtzCb9wQf0SJOj9M3xMfa1lOBvBUx_CNnNBOiO9QWM2NdIkVJa-yaTHXMlf7nLuXgQdplSD7aL3HyLfEgiLPYf5qnXcayrDMGeyGRF0Ksvfw-4uZh_yT8jKX60m609d3Jwg219AcnxTS_LBdWeGKPitcCbftdW0NDE10fQ5kcfM\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:40.680437+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:40.680479+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T06:24:41.045064+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-24T06:24:41.079403+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-24T06:24:41.079480+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:41.079540+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:41.083622+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:41.093997+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T06:24:41.103717+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:41.104013+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:41.104061+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:42.211672+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-24T06:24:42.211929+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-24T06:24:42.332053+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,6,8,1,3,5]] []
[2020-07-24T06:24:42.332053+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-07-24T06:24:42.883102+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-24T06:24:42.883293+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-24T06:24:43.666083+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-24T06:24:43.674506+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-24T06:24:43.674578+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:43.674642+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:43.678742+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:43.711555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T06:24:43.725509+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:43.725784+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:43.725829+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T06:24:43.845525+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-24T06:24:43.849890+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-24T06:24:43.933996+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-24T16:30:57.069723+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-24T16:30:57.069723+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-24T16:30:57.189597+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-24T16:30:57.189622+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-24T16:30:57.189680+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:30:57.189691+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:30:57.189735+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:30:57.189742+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:30:57.203513+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:30:57.203527+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:30:58.307754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T16:30:58.307754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T16:30:59.805184+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:30:59.833878+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:31:00.073826+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 24 Jul 2020 14:31:00 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTU2MDEwNTksImV4cCI6MTU5NTYwNDY1OSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.hLSK-NLycfSRl-8Kdvo_ynuTePincDkueIE7VJx1sxhm091qwgOhuCCLIm83X_l_rwwhZDliXRXl09rlujBkmzA1NYtjhtKdV5LI8cqP9ouQnMir95UnAZz6rSGsB-vTGMe44lzgdWfu6ihC7iPslhlTp1l_AutOOUZ3bzFcxjcvpMIIT-LRsMrJMi0vbO71J2lHRUVZurL_rr5CKbI8v0VFJSCvGub2soI19k5EUWEZCZ663bLpEa8_uwTnCv2TVPxkkFTcKcCW-vZhvPuTaCb9IfxVJbiesMgncBr4QgGQFAKfDOf4aH9p01lzEyfQOUjFawj98YkXC1dcUcJ8nRynsusGtynHHBJDV4M4fzD4LJ-qXDK_GsDZ91F0u-oFpwflQuIR77-sVhemz2TTFvCn_jar7pRww2dEBpjoyTqCzIw_iAKwdVnsIMyrpQnnv7yAPxSln15s9p2UGRnrsCtwGNjQUdLlENp2iFdgGaaRX-O3-9Kanka3xkxXdaEjgKIMwdbiHgJ5MdCpLGmYrmALfqs9uB1jRBmsOh-KWpyzTdFtzdsCyET2ujppNJZVZtvP22S9Z_HllIWXxFxMDsD7bmBj9AMR-7vqmJnPPV57k2n8CspD92AQU0BxWq5yHaRNCEFbnmBio0CH12MgOBLurLI6DTjRZpzRaeQMAqA\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:31:00.073855+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 24 Jul 2020 14:31:00 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTU2MDEwNTksImV4cCI6MTU5NTYwNDY1OSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.hLSK-NLycfSRl-8Kdvo_ynuTePincDkueIE7VJx1sxhm091qwgOhuCCLIm83X_l_rwwhZDliXRXl09rlujBkmzA1NYtjhtKdV5LI8cqP9ouQnMir95UnAZz6rSGsB-vTGMe44lzgdWfu6ihC7iPslhlTp1l_AutOOUZ3bzFcxjcvpMIIT-LRsMrJMi0vbO71J2lHRUVZurL_rr5CKbI8v0VFJSCvGub2soI19k5EUWEZCZ663bLpEa8_uwTnCv2TVPxkkFTcKcCW-vZhvPuTaCb9IfxVJbiesMgncBr4QgGQFAKfDOf4aH9p01lzEyfQOUjFawj98YkXC1dcUcJ8nRynsusGtynHHBJDV4M4fzD4LJ-qXDK_GsDZ91F0u-oFpwflQuIR77-sVhemz2TTFvCn_jar7pRww2dEBpjoyTqCzIw_iAKwdVnsIMyrpQnnv7yAPxSln15s9p2UGRnrsCtwGNjQUdLlENp2iFdgGaaRX-O3-9Kanka3xkxXdaEjgKIMwdbiHgJ5MdCpLGmYrmALfqs9uB1jRBmsOh-KWpyzTdFtzdsCyET2ujppNJZVZtvP22S9Z_HllIWXxFxMDsD7bmBj9AMR-7vqmJnPPV57k2n8CspD92AQU0BxWq5yHaRNCEFbnmBio0CH12MgOBLurLI6DTjRZpzRaeQMAqA\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:31:00.073937+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:31:00.073952+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:31:00.073978+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:31:00.073993+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-24T16:31:01.080501+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-24T16:31:01.238973+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-24T16:31:01.239075+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:01.239172+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:01.329247+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:01.371581+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T16:31:01.387238+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:01.387549+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:01.387597+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:02.642563+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-24T16:31:02.778207+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-07-24T16:31:03.137471+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-24T16:31:04.450581+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-24T16:31:04.459071+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-24T16:31:04.459130+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:04.459189+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:04.463261+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:04.495222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T16:31:04.508843+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:04.509147+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:04.509195+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:04.587777+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-24T16:31:04.592333+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-24T16:31:04.665855+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-24T16:31:12.414160+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"10"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/10","method":"GET"} []
[2020-07-24T16:31:12.421883+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-24T16:31:12.421937+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:12.421993+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:12.425987+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:12.457624+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T16:31:12.471088+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:12.471375+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:12.471423+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:13.721705+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [10] []
[2020-07-24T16:31:52.385136+02:00] request.INFO: Matched route "api_comments_post_collection". {"route":"api_comments_post_collection","route_parameters":{"_route":"api_comments_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments","method":"POST"} []
[2020-07-24T16:31:52.399641+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-24T16:31:52.399763+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:52.399871+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:52.422200+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:52.518553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T16:31:52.542045+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:52.542872+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:52.542923+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:52.765101+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, a0_.category_id AS category_id_6, a0_.author_id AS author_id_7 FROM article a0_ WHERE a0_.id = ? [10] []
[2020-07-24T16:31:53.025743+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-24T16:31:53.027868+02:00] doctrine.DEBUG: INSERT INTO comment (content, created_at, author_id, article_id, blocked_id) VALUES (?, ?, ?, ?, ?) {"1":"Trop beau !!","2":"2020-07-24T16:31:52+02:00","3":null,"4":10,"5":null} []
[2020-07-24T16:31:53.031509+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-24T16:31:53.033139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [101] []
[2020-07-24T16:31:56.326826+02:00] request.INFO: Matched route "api_comments_delete_item". {"route":"api_comments_delete_item","route_parameters":{"_route":"api_comments_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"delete","id":"101"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/101","method":"DELETE"} []
[2020-07-24T16:31:56.334505+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-24T16:31:56.334564+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:56.334627+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:56.338730+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:56.372014+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-24T16:31:56.386569+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:56.386974+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:56.387022+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-24T16:31:56.668620+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [101] []
[2020-07-24T16:31:56.718434+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-24T16:31:56.718974+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [101] []
[2020-07-24T16:31:56.721441+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-25T19:17:26.947019+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.en.xlf {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/xaviervimj/projet/symfony/vendor/symfony/config/Resource/FileResource.php","line":65,"trace":[{"file":"/home/xaviervimj/projet/symfony/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2020-07-25T19:17:26.984904+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.af.xlf [] []
[2020-07-25T19:17:27.018164+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.ar.xlf [] []
[2020-07-25T19:17:27.039622+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.az.xlf [] []
[2020-07-25T19:17:27.058164+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.be.xlf [] []
[2020-07-25T19:17:27.076602+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.bg.xlf [] []
[2020-07-25T19:17:27.098548+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.ca.xlf [] []
[2020-07-25T19:17:27.117355+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.cs.xlf [] []
[2020-07-25T19:17:27.142016+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.cy.xlf [] []
[2020-07-25T19:17:27.152467+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.da.xlf [] []
[2020-07-25T19:17:27.235657+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.de.xlf [] []
[2020-07-25T19:17:27.311767+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.el.xlf [] []
[2020-07-25T19:17:27.340997+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.es.xlf [] []
[2020-07-25T19:17:27.371902+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.et.xlf [] []
[2020-07-25T19:17:27.386542+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.eu.xlf [] []
[2020-07-25T19:17:27.404169+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.fa.xlf [] []
[2020-07-25T19:17:27.422200+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.fi.xlf [] []
[2020-07-25T19:17:27.436963+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.fr.xlf [] []
[2020-07-25T19:17:27.455669+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.gl.xlf [] []
[2020-07-25T19:17:27.473292+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.he.xlf [] []
[2020-07-25T19:17:27.491169+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.hr.xlf [] []
[2020-07-25T19:17:27.526501+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.hu.xlf [] []
[2020-07-25T19:17:27.545086+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.hy.xlf [] []
[2020-07-25T19:17:27.735875+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.id.xlf [] []
[2020-07-25T19:17:27.786895+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.it.xlf [] []
[2020-07-25T19:17:27.829533+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.ja.xlf [] []
[2020-07-25T19:17:27.864721+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.lb.xlf [] []
[2020-07-25T19:17:27.883238+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.lt.xlf [] []
[2020-07-25T19:17:27.901992+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.lv.xlf [] []
[2020-07-25T19:17:27.919826+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.mn.xlf [] []
[2020-07-25T19:17:27.954193+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.nb.xlf [] []
[2020-07-25T19:17:27.972593+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.nl.xlf [] []
[2020-07-25T19:17:27.991101+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.nn.xlf [] []
[2020-07-25T19:17:28.009445+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.no.xlf [] []
[2020-07-25T19:17:28.027707+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.pl.xlf [] []
[2020-07-25T19:17:28.046988+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.pt.xlf [] []
[2020-07-25T19:17:28.078638+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf [] []
[2020-07-25T19:17:28.097303+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.ro.xlf [] []
[2020-07-25T19:17:28.139575+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.ru.xlf [] []
[2020-07-25T19:17:28.166395+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.sk.xlf [] []
[2020-07-25T19:17:28.184499+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.sl.xlf [] []
[2020-07-25T19:17:28.216068+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.sq.xlf [] []
[2020-07-25T19:17:28.226731+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf [] []
[2020-07-25T19:17:28.245628+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf [] []
[2020-07-25T19:17:28.264333+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.sv.xlf [] []
[2020-07-25T19:17:28.282232+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.th.xlf [] []
[2020-07-25T19:17:28.296600+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.tl.xlf [] []
[2020-07-25T19:17:28.315020+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.tr.xlf [] []
[2020-07-25T19:17:28.333334+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.uk.xlf [] []
[2020-07-25T19:17:28.367301+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.vi.xlf [] []
[2020-07-25T19:17:28.397777+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf [] []
[2020-07-25T19:17:28.423292+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf [] []
[2020-07-25T19:17:28.433900+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/symfony/security-core/Resources/translations/security.pt_PT.xlf [] []
[2020-07-25T19:17:28.443136+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/xaviervimj/projet/vendor/vich/uploader-bundle/translations/VichUploaderBundle.vn.yml [] []
[2020-07-26T17:27:26.895908+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-26T17:27:26.955921+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-26T17:27:26.955977+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:27:26.956028+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:27:26.959614+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:27:27.610574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:27:28.567944+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:27:28.736491+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Sun, 26 Jul 2020 15:27:28 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTU3NzcyNDgsImV4cCI6MTU5NTc4MDg0OCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.sgkz8vd46cOKQyg4bKwRaxYRQJzGROhJoWUEndAA4Ns-d9rSUXnp_7x2HuDON4rYxoVDKF1g2e7Hp5XqE_LXhIJfZcnCGkajHQD8ftrbCFKqis1Iy2pcxhQD1zhAxHiZ3OcnvOCguC2LOBJtUHKVa5ys4mH2uNpFeD9SNfeAgh1Xw61V-8F7KMR07bSEOB1ccu3WNfB6iZKd5IstpZiWVQgU_obf4P1yj3mTOwbrhEquCxBXROW3ZeYrFjHsgVIqpP9OC6gVjqW9y3sn7Zs9KjlajYZZmkinQwo-lvF-tBdIcRjKDHhQjgoqY0bA5hPTsQOBOKy8MMnSnJGMXvKOxMkZOqBAci_0eKm4JiBRGvnaqPOEJla05EdeFF-nxwgZdvB1Y9fmOWkcAl9LdxxdXiHXUMGP0dsqhZ7LsWyOsq_UOv4G8urKU0gbm8Zju-r21hEfh7T3ikQaQw9mkla2KFCu2n9fbQZJRfabeps6bST1Q6oHNciUdYFWou2hgjm-5paKlSVIeWtdoZDvnVtNF_gTTZw92_ZHCa_Az8ZYNI-_IpZfMY7PJ36tQkjHPkW6cMDwrJjMPfpPvv5PAYy_hB1RiJZ1UsEYJTbioYrio3R33OWSr-tCXCRHZND9cOUBMRbLAlv2u791gTUVq_P2Vbl4N5Fcs4gkrjSDYcHtz_0\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:27:28.736592+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:27:28.736630+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:27:29.518837+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-26T17:27:29.727027+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:27:29.727104+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:29.727176+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:29.781768+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:29.791361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:27:29.806570+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:29.806860+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:29.806907+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:31.684426+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-26T17:27:31.749471+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,6,8,1,3,5]] []
[2020-07-26T17:27:32.059898+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-26T17:27:32.756719+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-26T17:27:32.764783+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:27:32.764849+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:32.764909+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:32.768781+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:32.795408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:27:32.803167+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:32.803483+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:32.803542+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:32.940006+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-26T17:27:32.944134+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-26T17:27:33.105466+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-26T17:27:44.178838+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"10"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/10","method":"GET"} []
[2020-07-26T17:27:44.186514+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:27:44.186564+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:44.186617+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:44.190511+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:44.218191+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:27:44.226013+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:44.226277+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:44.226321+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:44.536989+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [10] []
[2020-07-26T17:27:54.522820+02:00] request.INFO: Matched route "api_comments_post_collection". {"route":"api_comments_post_collection","route_parameters":{"_route":"api_comments_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments","method":"POST"} []
[2020-07-26T17:27:54.530019+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:27:54.530070+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:54.530125+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:54.534004+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:54.561009+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:27:54.569191+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:54.569499+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:54.569544+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:54.663076+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, a0_.category_id AS category_id_6, a0_.author_id AS author_id_7 FROM article a0_ WHERE a0_.id = ? [10] []
[2020-07-26T17:27:54.888470+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-26T17:27:54.890568+02:00] doctrine.DEBUG: INSERT INTO comment (content, created_at, author_id, article_id, blocked_id) VALUES (?, ?, ?, ?, ?) {"1":"huihji","2":"2020-07-26T17:27:54+02:00","3":null,"4":10,"5":null} []
[2020-07-26T17:27:54.894283+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-26T17:27:54.896604+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [101] []
[2020-07-26T17:27:55.967487+02:00] request.INFO: Matched route "api_comments_delete_item". {"route":"api_comments_delete_item","route_parameters":{"_route":"api_comments_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"delete","id":"101"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/101","method":"DELETE"} []
[2020-07-26T17:27:55.976194+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:27:55.976252+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:55.976310+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:55.980284+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:56.008379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:27:56.016546+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:56.016812+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:56.016858+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:56.126029+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [101] []
[2020-07-26T17:27:56.146300+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-26T17:27:56.146944+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [101] []
[2020-07-26T17:27:56.148457+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-26T17:27:58.811215+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-26T17:27:58.836391+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:27:58.836444+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:58.836507+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:58.843465+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:58.892704+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:27:58.904100+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:58.904948+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:58.904996+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:27:58.940252+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-26T17:27:58.942695+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-26T17:27:58.956358+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-26T17:28:01.520699+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles?category=25","method":"GET"} []
[2020-07-26T17:28:01.553716+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:28:01.553781+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:01.553840+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:01.560161+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:01.568629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:28:01.575854+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:01.576136+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:01.576181+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:01.710597+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (SELECT a6_.id FROM article a6_ LEFT JOIN category c7_ ON a6_.category_id = c7_.id LEFT JOIN user u8_ ON a6_.author_id = u8_.id LEFT JOIN comment c9_ ON a6_.id = c9_.article_id LEFT JOIN user u10_ ON c9_.author_id = u10_.id LEFT JOIN user u11_ ON c9_.blocked_id = u11_.id WHERE a6_.category_id = ?) ORDER BY a0_.updated_at DESC LIMIT 30 ["25"] []
[2020-07-26T17:28:01.725349+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (SELECT a6_.id FROM article a6_ LEFT JOIN category c7_ ON a6_.category_id = c7_.id LEFT JOIN user u8_ ON a6_.author_id = u8_.id LEFT JOIN comment c9_ ON a6_.id = c9_.article_id LEFT JOIN user u10_ ON c9_.author_id = u10_.id LEFT JOIN user u11_ ON c9_.blocked_id = u11_.id WHERE a6_.category_id = ?) AND a0_.id IN (?) ORDER BY a0_.updated_at DESC ["25",[8,1,3,5,6]] []
[2020-07-26T17:28:01.766165+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (SELECT a6_.id FROM article a6_ LEFT JOIN category c7_ ON a6_.category_id = c7_.id LEFT JOIN user u8_ ON a6_.author_id = u8_.id LEFT JOIN comment c9_ ON a6_.id = c9_.article_id LEFT JOIN user u10_ ON c9_.author_id = u10_.id LEFT JOIN user u11_ ON c9_.blocked_id = u11_.id WHERE a6_.category_id = ?) ["25"] []
[2020-07-26T17:28:04.966471+02:00] request.INFO: Matched route "api_file_uploads_GET_collection". {"route":"api_file_uploads_GET_collection","route_parameters":{"_route":"api_file_uploads_GET_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\FileUpload","_api_collection_operation_name":"GET"},"request_uri":"https://adminstda.xaviervitali.fr/api/file_uploads","method":"GET"} []
[2020-07-26T17:28:04.974099+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:28:04.974152+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:04.974209+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:04.978041+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:05.005003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-07-26T17:28:05.012968+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:05.013229+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:05.013273+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:05.335658+02:00] doctrine.DEBUG: SELECT f0_.id AS id_0, f0_.file_uploaded_name AS file_uploaded_name_1, f0_.title AS title_2, f0_.updated_at AS updated_at_3, u1_.id AS id_4, u1_.email AS email_5, u1_.roles AS roles_6, u1_.password AS password_7, u1_.gender AS gender_8, u1_.last_name AS last_name_9, u1_.first_name AS first_name_10, u1_.children AS children_11, u1_.email_notification AS email_notification_12, u1_.registered_at AS registered_at_13, u1_.granted AS granted_14, u1_.about AS about_15, f0_.added_by_id AS added_by_id_16 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id ORDER BY f0_.updated_at DESC LIMIT 30 [] []
[2020-07-26T17:28:05.435338+02:00] doctrine.DEBUG: SELECT count(DISTINCT f0_.id) AS sclr_0 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id [] []
[2020-07-26T17:28:47.570219+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-07-26T17:28:47.590957+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-07-26T17:28:47.591009+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:28:47.591057+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:28:47.592783+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:28:47.640256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:28:48.518360+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:28:48.568076+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Sun, 26 Jul 2020 15:28:48 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTU3NzczMjgsImV4cCI6MTU5NTc4MDkyOCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.J3BFd3G82u-fDTYKYfaPh-K6VTeMg0Mmz9DdKy0TZOl_WN2A8KX4lavu7RSplzj-JVh9R9LqjJAAoAAzbNZWPB5J_-6img8Q4Sed9dL_61OlvS2YJcUhVsPIjKXJuG9mSGlPvYgWx8ZCRec-PSFRKILagaNSX5aTQcFdSbopz6n7F7fgWuZdWt_uQmIl_79Q9cnoO7m5pxTZmrFekafDdDQeJptFobxaHvFLC8mvyb6-jwqS5RokablGKWYg5ZpcayRFFTdFKRYaHsKu5CPAuROg_lWPnL9BYlA6EuAcG9j9iTe7yOl5ltNMejKBOFCktsdW_SC0y0jNOut0Zi6vsVWt6egG8UYThdK79IA4K-8GUKcFKYUjChuRtCLIXN5ZVYGndEbupXYgUbw6ne9w5Q6wsp3bfg-9jy_yniiVMmxEhhoTVJ1rXvVaHUK4pN5hocNq2EoTNr70_VUoRaifys5RuCYt679yEWIORVbmoKLLVcECgNSMSTtXWu5_IRC78lG0ZnuTw6h817Ry3OOpP48XZ47EHMYbP_GMeE-k1YmMyMFO0T4iFWKI44nMjCLaq_lpSNxR5DgnsAnZiod9z5F88oCDJ64AozTRG6dAJUE8rmaY8icBiZ5MmEXbKaioPHpemZVALlt43TK5UtIXbEW0e51_vqkMGxv9Ivw-hoA\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:28:48.568162+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:28:48.568214+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-07-26T17:28:48.919554+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-26T17:28:48.954308+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:28:48.954376+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:48.954439+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:48.960038+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:48.968136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:28:48.975301+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:48.975611+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:48.975669+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:49.035899+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-26T17:28:49.042420+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,6,8,1,3,5]] []
[2020-07-26T17:28:49.098231+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-26T17:28:49.528758+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-26T17:28:49.536770+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:28:49.536820+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:49.536876+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:49.540719+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:49.567916+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:28:49.575741+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:49.576002+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:49.576047+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:49.607408+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-26T17:28:49.610057+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-26T17:28:49.624900+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-26T17:28:57.508916+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"10"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/10","method":"GET"} []
[2020-07-26T17:28:57.516559+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:28:57.516614+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:57.516668+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:57.520597+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:57.547873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:28:57.555633+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:57.555919+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:57.555964+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:28:57.597947+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [10] []
[2020-07-26T17:29:01.300826+02:00] request.INFO: Matched route "api_comments_put_item". {"route":"api_comments_put_item","route_parameters":{"_route":"api_comments_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"put","id":"51"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/51","method":"PUT"} []
[2020-07-26T17:29:01.308110+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:01.308159+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:01.308212+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:01.312158+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:01.339204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:01.346943+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:01.347230+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:01.347278+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:01.461439+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [51] []
[2020-07-26T17:29:01.551754+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [35] []
[2020-07-26T17:29:01.553139+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [37] []
[2020-07-26T17:29:01.563314+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-26T17:29:01.576896+02:00] doctrine.DEBUG: UPDATE comment SET created_at = ?, blocked_id = ? WHERE id = ? ["2020-07-09T15:40:12+02:00",37,51] []
[2020-07-26T17:29:01.580826+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-26T17:29:01.582120+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [51] []
[2020-07-26T17:29:04.635956+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"10"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/10","method":"GET"} []
[2020-07-26T17:29:04.646967+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:04.647043+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:04.647126+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:04.651271+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:04.678829+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:04.686633+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:04.686916+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:04.686964+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:04.713679+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [10] []
[2020-07-26T17:29:05.050595+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-26T17:29:05.059174+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:05.059243+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:05.059307+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:05.063416+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:05.091902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:05.103313+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:05.103740+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:05.103811+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:05.138191+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-26T17:29:05.140969+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-26T17:29:05.151047+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-26T17:29:14.094574+02:00] request.INFO: Matched route "api_articles_put_item". {"route":"api_articles_put_item","route_parameters":{"_route":"api_articles_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"put","id":"10"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/10","method":"PUT"} []
[2020-07-26T17:29:14.101909+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:14.101961+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.102017+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.105920+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.135904+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:14.147503+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.147914+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.147984+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.248908+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [10] []
[2020-07-26T17:29:14.279529+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [28] []
[2020-07-26T17:29:14.287978+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-26T17:29:14.294641+02:00] doctrine.DEBUG: UPDATE article SET category_id = ?, updated_at = ? WHERE id = ? [28,"2020-07-26T17:29:14+02:00",10] []
[2020-07-26T17:29:14.296704+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-26T17:29:14.298514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [10] []
[2020-07-26T17:29:14.337623+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.article_id = ? [10] []
[2020-07-26T17:29:14.614745+02:00] request.INFO: Matched route "api_articles_put_item". {"route":"api_articles_put_item","route_parameters":{"_route":"api_articles_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"put","id":"10"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/10","method":"PUT"} []
[2020-07-26T17:29:14.622233+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:14.622289+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.622348+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.626387+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.654518+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:14.662686+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.663039+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.663087+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.676864+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-26T17:29:14.703076+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [10] []
[2020-07-26T17:29:14.708713+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:14.708781+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.708842+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.712887+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.715831+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1 FROM category c0_ WHERE c0_.id = ? [28] []
[2020-07-26T17:29:14.721164+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:14.727083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [10] []
[2020-07-26T17:29:14.728510+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.728808+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.728856+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:14.742968+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.article_id = ? [10] []
[2020-07-26T17:29:14.760251+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-26T17:29:14.764756+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-07-26T17:29:14.796362+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-26T17:29:15.046254+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-07-26T17:29:15.076792+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:15.076869+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.076932+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.080984+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.089098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:15.096421+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.096711+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.096759+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.127664+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-07-26T17:29:15.130502+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-07-26T17:29:15.155576+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-07-26T17:29:15.479335+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-07-26T17:29:15.487682+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:15.487746+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.487808+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.491881+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.519235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:15.526786+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.527050+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.527095+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:15.555205+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-07-26T17:29:15.558672+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-07-26T17:29:15.568753+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-07-26T17:29:35.121997+02:00] request.INFO: Matched route "api_comments_get_collection". {"route":"api_comments_get_collection","route_parameters":{"_route":"api_comments_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments?blocked=api%2Fusers%2F37","method":"GET"} []
[2020-07-26T17:29:35.194981+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:35.195060+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:35.195121+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:35.214025+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:35.231765+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:35.255784+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:35.256665+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:35.256712+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:35.593811+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id IN (SELECT c4_.id FROM comment c4_ LEFT JOIN user u5_ ON c4_.author_id = u5_.id LEFT JOIN article a6_ ON c4_.article_id = a6_.id LEFT JOIN user u7_ ON c4_.blocked_id = u7_.id WHERE c4_.blocked_id = ?) ORDER BY c0_.id ASC LIMIT 30 [37] []
[2020-07-26T17:29:35.648409+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id IN (SELECT c4_.id FROM comment c4_ LEFT JOIN user u5_ ON c4_.author_id = u5_.id LEFT JOIN article a6_ ON c4_.article_id = a6_.id LEFT JOIN user u7_ ON c4_.blocked_id = u7_.id WHERE c4_.blocked_id = ?) [37] []
[2020-07-26T17:29:40.679824+02:00] request.INFO: Matched route "api_comments_put_item". {"route":"api_comments_put_item","route_parameters":{"_route":"api_comments_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"put","id":"51"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/51","method":"PUT"} []
[2020-07-26T17:29:40.687628+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-26T17:29:40.687710+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:40.687797+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:40.692976+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:40.726547+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:40.734392+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:40.734691+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:40.734736+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-26T17:29:40.806917+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [51] []
[2020-07-26T17:29:40.833013+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [35] []
[2020-07-26T17:29:40.840066+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, a0_.category_id AS category_id_6, a0_.author_id AS author_id_7 FROM article a0_ WHERE a0_.id = ? [10] []
[2020-07-26T17:29:40.855056+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-26T17:29:40.858333+02:00] doctrine.DEBUG: UPDATE comment SET created_at = ?, blocked_id = ? WHERE id = ? ["2020-07-09T15:40:12+02:00",null,51] []
[2020-07-26T17:29:40.862159+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-26T17:29:40.864023+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [51] []
[2020-07-26T17:29:43.453678+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-07-26T17:29:43.536644+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-26T17:29:43.601582+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-07-26T17:29:43.603127+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-07-26T17:29:43.901510+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-07-26T17:29:45.349707+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-26T17:29:47.086190+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a43045"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/a43045","method":"GET"} []
[2020-07-26T17:29:47.149547+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "https://adminstda.xaviervitali.fr/login")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"https://adminstda.xaviervitali.fr/login\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-26T17:29:48.950943+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-07-26T17:29:49.012501+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-07-26T17:29:49.907552+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-07-26T17:29:49.916546+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:29:50.199068+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-07-26T17:29:50.211680+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-26T17:29:50.236859+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-26T17:29:50.243132+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-26T17:29:50.308612+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-07-26T17:29:50.309576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-07-26T17:29:50.489347+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:29:51.228023+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"87ce91"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/87ce91","method":"GET"} []
[2020-07-26T17:30:40.519253+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/34","method":"GET"} []
[2020-07-26T17:30:40.549699+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-26T17:30:40.597508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-26T17:30:40.606350+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-26T17:30:40.613016+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-07-26T17:30:41.462277+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:30:41.886571+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/css/main.css" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/css/main.css\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/css/main.css/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-26T17:30:41.886660+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-26T17:30:42.779157+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-26T17:30:43.251219+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9e3eea"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/9e3eea","method":"GET"} []
[2020-07-26T17:31:26.397405+02:00] request.INFO: Matched route "admin_upload". {"route":"admin_upload","route_parameters":{"_route":"admin_upload","_controller":"App\\Controller\\AdminController::upload"},"request_uri":"https://adminstda.xaviervitali.fr/admin/upload","method":"GET"} []
[2020-07-26T17:31:26.425403+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-26T17:31:26.469865+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-26T17:31:26.478155+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-26T17:31:26.591096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 [] []
[2020-07-26T17:31:26.726387+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:31:27.224217+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"76d2fe"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/76d2fe","method":"GET"} []
[2020-07-26T17:31:34.190158+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-07-26T17:31:34.202706+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-26T17:31:34.227997+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-26T17:31:34.233848+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-26T17:31:34.349845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-07-26T17:31:34.501177+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-07-26T17:31:34.526299+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:31:35.019008+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0074e7"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/0074e7","method":"GET"} []
[2020-07-26T17:32:45.147487+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-07-26T17:32:45.177177+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-26T17:32:45.236802+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-26T17:32:45.246057+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-26T17:32:45.307837+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-07-26T17:32:45.341174+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-07-26T17:32:45.447491+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:32:45.849163+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"590049"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/590049","method":"GET"} []
[2020-07-26T17:32:47.169673+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"https://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-07-26T17:32:47.182190+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-26T17:32:47.207391+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-26T17:32:47.213205+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-26T17:32:47.234255+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-07-26T17:32:47.343702+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [10] []
[2020-07-26T17:32:47.346769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-07-26T17:32:47.347397+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [35] []
[2020-07-26T17:32:47.348660+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [42] []
[2020-07-26T17:32:47.349644+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [8] []
[2020-07-26T17:32:47.351010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-07-26T17:32:47.357887+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:32:48.001336+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"442bc6"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/442bc6","method":"GET"} []
[2020-07-26T17:33:31.960231+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-07-26T17:33:31.960322+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-07-26T17:33:31.989785+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-26T17:33:32.036007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-26T17:33:32.044886+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-26T17:33:32.056771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-07-26T17:33:32.057441+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-07-26T17:33:32.080879+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:33:32.104870+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-07-26T17:33:32.130698+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-07-26T17:33:32.136513+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-07-26T17:33:32.141661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-07-26T17:33:32.142209+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-07-26T17:33:32.153424+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-07-26T17:33:32.690084+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d96bb0"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/d96bb0","method":"GET"} []
[2020-07-28T09:10:54.465718+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"91cf4a"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/91cf4a","method":"GET"} []
[2020-07-28T09:10:54.641794+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "https://adminstda.xaviervitali.fr/admin")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"https://adminstda.xaviervitali.fr/admin\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-10T16:03:02.176008+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:02.230003+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:02.176542+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:02.175831+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:02.175829+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:02.175829+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:02.176739+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:02.175828+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:02.375604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:02.375604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:02.375604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:02.375604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:02.375604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:02.375604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:02.375604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:02.375720+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375722+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375719+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375723+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375728+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375729+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375728+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375806+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375806+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375811+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375811+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375814+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375814+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.375812+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.376047+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:02.376110+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.376210+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.452941+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.452941+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.452941+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.452941+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.452969+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.452969+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.452972+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:02.452972+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:04.639648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:03:04.639648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:04.639650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:04.639650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:04.639665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:03:04.639648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:04.639664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:04.639664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:06.468666+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.502858+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.534732+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.594636+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.595851+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.634507+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.634499+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.668318+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.713418+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:06.722647+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:06.722723+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.722774+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.723571+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:06.756612+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:03:07.439139+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODYsImV4cCI6MTU5NzA3MTc4Niwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.N0dRXbEgLzO7iAEwbirhesDspoeuCFkaGaznqb5nC6j7SCo_15rGMAflR9EMIDknA2keAy41L11G4VC8yN9SuKsrrs336nYSrSRYVdGPQUK5_fCPp9PxjlMChoSDZEVJsWHXgl_E9j8KEs8hb-pON2ZG_fZfmwP0Pjvk7mTbe0QHlDSiOg-_kikR1AK3h-3SxL3lPGByCIO0fQOwDhc9QThhRd4f2zcTpSTTLMZDo_sqEq4pLRBPcP9tFSgySBgLeiJMeuu5MkIG6lux7Cd4jbb0o4-W4VArpUK2H1L2uInph6KcFjYvjdrxPN5kGvYGP0wpmFZh9_uCk5CMY4ja2jmM1ap8G4cP4C-gKrQqI21mKt9b40_cF2p55j4jK7NoeRVIrnvmE0KCRzWqmyFq1g0dNUsW7isH94EidpYGhaHsJfetASNsBsup8HdOonUJyIPMZ00z6tx049Io2xeqNwPZNMZafXlV9Tp7g4rHzQUjeKgbiqK19i_KeXdVhZ0dONeQEiTIL4yUA4e3T-uIcf7Cnac7Ts8uxm7lJOK4iiv_OcRQY9eBrk-aLZpdMA4h3a0nEYLnYZrl2RqM2MP02J74sZQrnI-_SSfFJ3EdEuzc_7BjB9rHtLTmktu7RqLcwNpBfTTAjy-r25WF6UHdc3M1YnDkRgnW5aUbTiUgLm8\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439143+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODYsImV4cCI6MTU5NzA3MTc4Niwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.N0dRXbEgLzO7iAEwbirhesDspoeuCFkaGaznqb5nC6j7SCo_15rGMAflR9EMIDknA2keAy41L11G4VC8yN9SuKsrrs336nYSrSRYVdGPQUK5_fCPp9PxjlMChoSDZEVJsWHXgl_E9j8KEs8hb-pON2ZG_fZfmwP0Pjvk7mTbe0QHlDSiOg-_kikR1AK3h-3SxL3lPGByCIO0fQOwDhc9QThhRd4f2zcTpSTTLMZDo_sqEq4pLRBPcP9tFSgySBgLeiJMeuu5MkIG6lux7Cd4jbb0o4-W4VArpUK2H1L2uInph6KcFjYvjdrxPN5kGvYGP0wpmFZh9_uCk5CMY4ja2jmM1ap8G4cP4C-gKrQqI21mKt9b40_cF2p55j4jK7NoeRVIrnvmE0KCRzWqmyFq1g0dNUsW7isH94EidpYGhaHsJfetASNsBsup8HdOonUJyIPMZ00z6tx049Io2xeqNwPZNMZafXlV9Tp7g4rHzQUjeKgbiqK19i_KeXdVhZ0dONeQEiTIL4yUA4e3T-uIcf7Cnac7Ts8uxm7lJOK4iiv_OcRQY9eBrk-aLZpdMA4h3a0nEYLnYZrl2RqM2MP02J74sZQrnI-_SSfFJ3EdEuzc_7BjB9rHtLTmktu7RqLcwNpBfTTAjy-r25WF6UHdc3M1YnDkRgnW5aUbTiUgLm8\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439143+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODYsImV4cCI6MTU5NzA3MTc4Niwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.m8QndrEsIZCEBsAN7AqfOR5Io_wOTbDLUOml6YvgHIZv_2oj2lWEPqlfEZzfuFVWq_tulxAPbK7q7Ggd4gPsKnvDOrnAAt9GrFFlpceTq7aHdudWbpNOqioFdUVFBYIRO895Hg5OZJRsxqeHrEZo68eEQdDu4xvjbf65LMW4ci4OGO3HNZdvsG8UIwQ31cqI90-r5TW4DW9Cud4QsQYgxSDfFbhgcN30MBbrRKWvGC_uvCfYBdSfidyKyXI--TluXuguh72asR7dHWCg1pgdzbqlC21boif7t6UfiMxTou2Efvfgikta-y8Cc-HUM1c28J2siZ_f3QfIAnDSBzeSIgkT0itt3uuzWrTNg9dGH4FEYrcDJwcBPJYQ403AZtnPaMIv1FE7XUxAKB_TAeL-e8LQCzpSLpElkPVxrVDp8UjqIXqDQPxHaskP5izgWHZWHzv_2FEn8KlwH8bzWU65NSbKfJcANu5FdGqK3ZSBLBow40YxdBW3Yn_ZWCM4LfdahddyegQ0fgXbg2rDrH_cyfgG5U9PyZRywgtBqnpaBQ1kPAoxSKPut3RQyIvSlYrnaA60SMHsIFma6r7N_vmTcCzI4VsF5K__w3z6Ab58XjK6uSkRAGqyPmsneNQg0eM930tjzlJYixtkCxmt-qmiMHtRnnPR9oBdCiFkRBWyMrM\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439144+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODYsImV4cCI6MTU5NzA3MTc4Niwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.m8QndrEsIZCEBsAN7AqfOR5Io_wOTbDLUOml6YvgHIZv_2oj2lWEPqlfEZzfuFVWq_tulxAPbK7q7Ggd4gPsKnvDOrnAAt9GrFFlpceTq7aHdudWbpNOqioFdUVFBYIRO895Hg5OZJRsxqeHrEZo68eEQdDu4xvjbf65LMW4ci4OGO3HNZdvsG8UIwQ31cqI90-r5TW4DW9Cud4QsQYgxSDfFbhgcN30MBbrRKWvGC_uvCfYBdSfidyKyXI--TluXuguh72asR7dHWCg1pgdzbqlC21boif7t6UfiMxTou2Efvfgikta-y8Cc-HUM1c28J2siZ_f3QfIAnDSBzeSIgkT0itt3uuzWrTNg9dGH4FEYrcDJwcBPJYQ403AZtnPaMIv1FE7XUxAKB_TAeL-e8LQCzpSLpElkPVxrVDp8UjqIXqDQPxHaskP5izgWHZWHzv_2FEn8KlwH8bzWU65NSbKfJcANu5FdGqK3ZSBLBow40YxdBW3Yn_ZWCM4LfdahddyegQ0fgXbg2rDrH_cyfgG5U9PyZRywgtBqnpaBQ1kPAoxSKPut3RQyIvSlYrnaA60SMHsIFma6r7N_vmTcCzI4VsF5K__w3z6Ab58XjK6uSkRAGqyPmsneNQg0eM930tjzlJYixtkCxmt-qmiMHtRnnPR9oBdCiFkRBWyMrM\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439144+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODYsImV4cCI6MTU5NzA3MTc4Niwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.N0dRXbEgLzO7iAEwbirhesDspoeuCFkaGaznqb5nC6j7SCo_15rGMAflR9EMIDknA2keAy41L11G4VC8yN9SuKsrrs336nYSrSRYVdGPQUK5_fCPp9PxjlMChoSDZEVJsWHXgl_E9j8KEs8hb-pON2ZG_fZfmwP0Pjvk7mTbe0QHlDSiOg-_kikR1AK3h-3SxL3lPGByCIO0fQOwDhc9QThhRd4f2zcTpSTTLMZDo_sqEq4pLRBPcP9tFSgySBgLeiJMeuu5MkIG6lux7Cd4jbb0o4-W4VArpUK2H1L2uInph6KcFjYvjdrxPN5kGvYGP0wpmFZh9_uCk5CMY4ja2jmM1ap8G4cP4C-gKrQqI21mKt9b40_cF2p55j4jK7NoeRVIrnvmE0KCRzWqmyFq1g0dNUsW7isH94EidpYGhaHsJfetASNsBsup8HdOonUJyIPMZ00z6tx049Io2xeqNwPZNMZafXlV9Tp7g4rHzQUjeKgbiqK19i_KeXdVhZ0dONeQEiTIL4yUA4e3T-uIcf7Cnac7Ts8uxm7lJOK4iiv_OcRQY9eBrk-aLZpdMA4h3a0nEYLnYZrl2RqM2MP02J74sZQrnI-_SSfFJ3EdEuzc_7BjB9rHtLTmktu7RqLcwNpBfTTAjy-r25WF6UHdc3M1YnDkRgnW5aUbTiUgLm8\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439148+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODYsImV4cCI6MTU5NzA3MTc4Niwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.N0dRXbEgLzO7iAEwbirhesDspoeuCFkaGaznqb5nC6j7SCo_15rGMAflR9EMIDknA2keAy41L11G4VC8yN9SuKsrrs336nYSrSRYVdGPQUK5_fCPp9PxjlMChoSDZEVJsWHXgl_E9j8KEs8hb-pON2ZG_fZfmwP0Pjvk7mTbe0QHlDSiOg-_kikR1AK3h-3SxL3lPGByCIO0fQOwDhc9QThhRd4f2zcTpSTTLMZDo_sqEq4pLRBPcP9tFSgySBgLeiJMeuu5MkIG6lux7Cd4jbb0o4-W4VArpUK2H1L2uInph6KcFjYvjdrxPN5kGvYGP0wpmFZh9_uCk5CMY4ja2jmM1ap8G4cP4C-gKrQqI21mKt9b40_cF2p55j4jK7NoeRVIrnvmE0KCRzWqmyFq1g0dNUsW7isH94EidpYGhaHsJfetASNsBsup8HdOonUJyIPMZ00z6tx049Io2xeqNwPZNMZafXlV9Tp7g4rHzQUjeKgbiqK19i_KeXdVhZ0dONeQEiTIL4yUA4e3T-uIcf7Cnac7Ts8uxm7lJOK4iiv_OcRQY9eBrk-aLZpdMA4h3a0nEYLnYZrl2RqM2MP02J74sZQrnI-_SSfFJ3EdEuzc_7BjB9rHtLTmktu7RqLcwNpBfTTAjy-r25WF6UHdc3M1YnDkRgnW5aUbTiUgLm8\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439281+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439297+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439307+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439303+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439323+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439312+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439297+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439365+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439369+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439369+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439375+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.439383+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.440599+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODYsImV4cCI6MTU5NzA3MTc4Niwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.N0dRXbEgLzO7iAEwbirhesDspoeuCFkaGaznqb5nC6j7SCo_15rGMAflR9EMIDknA2keAy41L11G4VC8yN9SuKsrrs336nYSrSRYVdGPQUK5_fCPp9PxjlMChoSDZEVJsWHXgl_E9j8KEs8hb-pON2ZG_fZfmwP0Pjvk7mTbe0QHlDSiOg-_kikR1AK3h-3SxL3lPGByCIO0fQOwDhc9QThhRd4f2zcTpSTTLMZDo_sqEq4pLRBPcP9tFSgySBgLeiJMeuu5MkIG6lux7Cd4jbb0o4-W4VArpUK2H1L2uInph6KcFjYvjdrxPN5kGvYGP0wpmFZh9_uCk5CMY4ja2jmM1ap8G4cP4C-gKrQqI21mKt9b40_cF2p55j4jK7NoeRVIrnvmE0KCRzWqmyFq1g0dNUsW7isH94EidpYGhaHsJfetASNsBsup8HdOonUJyIPMZ00z6tx049Io2xeqNwPZNMZafXlV9Tp7g4rHzQUjeKgbiqK19i_KeXdVhZ0dONeQEiTIL4yUA4e3T-uIcf7Cnac7Ts8uxm7lJOK4iiv_OcRQY9eBrk-aLZpdMA4h3a0nEYLnYZrl2RqM2MP02J74sZQrnI-_SSfFJ3EdEuzc_7BjB9rHtLTmktu7RqLcwNpBfTTAjy-r25WF6UHdc3M1YnDkRgnW5aUbTiUgLm8\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.440745+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.440814+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.444578+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODYsImV4cCI6MTU5NzA3MTc4Niwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.N0dRXbEgLzO7iAEwbirhesDspoeuCFkaGaznqb5nC6j7SCo_15rGMAflR9EMIDknA2keAy41L11G4VC8yN9SuKsrrs336nYSrSRYVdGPQUK5_fCPp9PxjlMChoSDZEVJsWHXgl_E9j8KEs8hb-pON2ZG_fZfmwP0Pjvk7mTbe0QHlDSiOg-_kikR1AK3h-3SxL3lPGByCIO0fQOwDhc9QThhRd4f2zcTpSTTLMZDo_sqEq4pLRBPcP9tFSgySBgLeiJMeuu5MkIG6lux7Cd4jbb0o4-W4VArpUK2H1L2uInph6KcFjYvjdrxPN5kGvYGP0wpmFZh9_uCk5CMY4ja2jmM1ap8G4cP4C-gKrQqI21mKt9b40_cF2p55j4jK7NoeRVIrnvmE0KCRzWqmyFq1g0dNUsW7isH94EidpYGhaHsJfetASNsBsup8HdOonUJyIPMZ00z6tx049Io2xeqNwPZNMZafXlV9Tp7g4rHzQUjeKgbiqK19i_KeXdVhZ0dONeQEiTIL4yUA4e3T-uIcf7Cnac7Ts8uxm7lJOK4iiv_OcRQY9eBrk-aLZpdMA4h3a0nEYLnYZrl2RqM2MP02J74sZQrnI-_SSfFJ3EdEuzc_7BjB9rHtLTmktu7RqLcwNpBfTTAjy-r25WF6UHdc3M1YnDkRgnW5aUbTiUgLm8\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.444744+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.444811+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.709263+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.781516+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:07 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODcsImV4cCI6MTU5NzA3MTc4Nywicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.Q4QdEF5gqx_Pmb8QNl2wKmZhao6kwZjus-1LPXFK4NbqbGWO98-1aOASXuPlNYNrlbBPZrZ4fIlYMv6eYu_d1UuexzGqOI_872iMA318owz20MEmIo6d-FogqIEtqECfY18gWDLQgSwbmLrHgFtUJPglJ8C7JKehgGh9FhCOHBXTPe3s4YeGR5L8PrD1Ou7MmmXDNYDIgHjk2TwiEEaeU0Y7IRWGFQE-Pu5JN5n4JCFfx7xP6zKptVn-I1xHIlRJ_gdZR7ZvXxDi3ZBddXY6233VfM51h-XO7z5CRdE3Vq7B6DaOufQjxSQEDmEbqL6BBPFp8Ecw5WAtXGJdIZDpcNh0Z2aLQda6fH4eut187pmWCJ6mpbn77ZDCRx0hnPOlmGHq3JFaW03IvlVOLd3KwcKrnu6-Bs335ezGb0mYDZ9UWBJi7NzK4bSZSkFq8-xtAYH5VbtNTQc9jF2MCnwaA_91cPza4M2RckEHSg3FF977cZjeK7x71FdvlrKxCqHhRyPAqHIQmM2DO8E5FoJTx79pKcOEEbaT1Lz2wP8xrv3JBRiIYjK2BphEDkfWPoloR7cp6_PIGTkTWhvUrUHQmDqcj6B3tgMabXMggytw3xu9t6daT6Mz8LojHwvlN2eqeuAvaU_y_z2PFHwvrJi7A5E7a2jTztpD3un_JvH9htA\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.781632+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:07.781674+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:08.571079+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:08.582210+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:08.582318+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:08.582398+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:08.583559+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:08.623645+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:03:09.561654+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-10T16:03:09.699201+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:09.743826+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:09 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxODksImV4cCI6MTU5NzA3MTc4OSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.jeEgj4uaU2PBWSd6zodk4dZ6IuYel86Hmy6vCCMZxtXbRffKZMaj3vqJ28-Gbp6DDAmy3P3eMHccGjQFvlzZb-iEFsZb6-3RZGsfn2pIOkiQvZrX8HH9dbL8Zb5eKRIzJEOzNoU5n9OkvWdRbJenajjHGp4ULzDyCF744Av56-3jkkIbMql6NmlekqSYW7GXM9OATSjuDOR6UCfMtqsF2os7nd5aVU0UB5xfgMuhV1LaE5slrnbKp4vL6RFwlJVkpnrR1t4HkIcVq5R8WNkTx5MqQ-ELVXAO7vBt9mW47brWG3e-KnRoayg7aoaoMxHUgSjxfdh0Se4F6hDf0_3qfSB7sTIGGc9qsngGCFz6eZyu7-XNoIgVr2Bl1z3YNsgcsH2nHFQCWXwUx1YWqQZ5ayVaOziP5vpXVZ8j_1Bfz-hWikSvORTxrlv5cA3F0wu-bbtlEnltLYBnZjq-pdRA2tHfcYsE_Rep1bb6WeOCPYeA7LbOu9ipnf7woEEcDve2l1P_jtULfisS2ZMj3hd7P86CgXR8FPUx6Zn1OizzIXuX3MW4NWQkdrkewvJC2ek2WYpRjUMEcEQC1X7WX6h774QR13C9RnT0mScCgKPGDjbsl7ksq2uinm2idmfkMFqJAyfB2RVXS82isfBFohVBppvvVwf4sBoEMzFHdPFs_ag\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:09.743927+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:09.743967+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:10.100579+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:03:10.100679+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.100753+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.154328+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-10T16:03:10.184972+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:03:10.185046+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.185105+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.218559+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.218611+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.260675+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:03:10.260849+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:03:10.310236+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.310232+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.310567+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.310571+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.310614+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:10.310619+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:13.213510+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-10T16:03:13.213510+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-10T16:03:13.610001+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-10T16:03:13.610001+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-10T16:03:14.029214+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:03:14.038594+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:03:14.038650+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:14.038704+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:14.039562+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:14.067773+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:14.969353+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:15.015081+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:03:15 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgxOTQsImV4cCI6MTU5NzA3MTc5NCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ1BcL0NFMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.kbLuaK8I_apmL91AcbeNlq_ef_qHFVGyBGb_bhxQ5gPMC-GbDXkuIuUHjBzu7vb2k2jGw6pkB8wA459oQK8LphesBCkhQZY5d0Pza6Vm5EEytQxyeuETahexLc9xFmDyOZU3CQ1wRhYxq_ITCq2HUc8-Z5ysirh_g7u_y_sEF8KYcDAZRlGfVwa9p-BAN7ViWqxBv3GbFck-rMPN_MWKUjLI2yINY6-yFyoyFInVRli-KPZq7hASQg6tCkIgUXcO26wqHa4c7_TfrfXE9ET17nMA0kpZdkJ9I2oSYWlgWMaJhDFUd99TOM5DhDjpYDNI3uePSoFOne-wBD_qD8UJY-270cDkOL44SPGZo-dq4YWynhk3S5J_3sDw223r44e5dJXQE7XRo0AaBfMtTH2_Yd-fgHlgC_J0-6GUpGndKUDI4wEn8udseqf7xjyLKAUuw6JZcfYaYWROwO5xIBbcaLrywkkz1flrVyobvfubzi5hv6GieUFVc9FdgFY-4Ww7iDzR-TlRJvCsVJdtlZ5pP_Ytze0bkWm2cxwuKM_hE3hNRpDmhm_uFmoahXbqjQZey4XyM1hJT52X9Fux5-XNewKWwYHC2WXOFRWo5uGojVkTTc6irueHUnyrdQYxuWtBfmsuUL1jKVzKnli3reWTIqFRN8VZ2_LWwZkUk_EK3u4\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:15.015187+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:15.015227+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:03:15.169417+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-10T16:03:15.169458+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-10T16:03:15.511888+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-10T16:03:15.547496+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:03:15.547581+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:15.547642+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:15.551851+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:15.560330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:15.567666+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:15.567955+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:15.568001+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:15.599197+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-10T16:03:15.602164+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-10T16:03:15.627456+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-10T16:03:16.421650+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-10T16:03:16.430768+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:03:16.430862+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:16.430936+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:16.435207+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:16.465521+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:16.474053+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:16.474359+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:16.474406+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:16.710819+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-10T16:03:16.714990+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-10T16:03:17.149846+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-10T16:03:25.997635+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"10"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/10","method":"GET"} []
[2020-08-10T16:03:26.005833+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:03:26.005903+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:26.005965+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:26.010161+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:26.038248+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:26.046488+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:26.046791+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:26.046839+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:26.905026+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [10] []
[2020-08-10T16:03:53.949006+02:00] request.INFO: Matched route "api_comments_post_collection". {"route":"api_comments_post_collection","route_parameters":{"_route":"api_comments_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments","method":"POST"} []
[2020-08-10T16:03:53.971010+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:03:53.971098+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:53.971171+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:54.052890+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:54.498969+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:54.526672+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:54.527503+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:54.527552+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:55.045750+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, a0_.category_id AS category_id_6, a0_.author_id AS author_id_7 FROM article a0_ WHERE a0_.id = ? [10] []
[2020-08-10T16:03:55.823701+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T16:03:55.832813+02:00] doctrine.DEBUG: INSERT INTO comment (content, created_at, author_id, article_id, blocked_id) VALUES (?, ?, ?, ?, ?) {"1":"Tori","2":"2020-08-10T16:03:55+02:00","3":null,"4":10,"5":null} []
[2020-08-10T16:03:55.835129+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T16:03:55.837528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [101] []
[2020-08-10T16:03:56.792917+02:00] request.INFO: Matched route "api_comments_delete_item". {"route":"api_comments_delete_item","route_parameters":{"_route":"api_comments_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"delete","id":"undefined"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/undefined","method":"DELETE"} []
[2020-08-10T16:03:56.800403+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:03:56.800461+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:56.800525+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:56.804436+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:56.832500+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:03:56.840476+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:56.840763+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:56.840810+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:03:57.399747+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [0] []
[2020-08-10T16:03:57.443893+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-10T16:04:21.229988+02:00] request.INFO: Matched route "api_users_PUT_item". {"route":"api_users_PUT_item","route_parameters":{"_route":"api_users_PUT_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"PUT","id":"39"},"request_uri":"https://adminstda.xaviervitali.fr/api/users/39","method":"PUT"} []
[2020-08-10T16:04:21.239814+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:04:21.239899+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:21.239964+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:21.244083+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:21.275703+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:04:21.283817+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:21.284120+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:21.284169+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:22.506306+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [39] []
[2020-08-10T16:04:22.814440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? ["user@gmail.com"] []
[2020-08-10T16:04:22.897872+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T16:04:22.940342+02:00] doctrine.DEBUG: UPDATE user SET children = ? WHERE id = ? [["PS","CE2"],39] []
[2020-08-10T16:04:22.941613+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T16:04:22.943214+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-10T16:04:24.243269+02:00] request.INFO: Matched route "api_users_PUT_item". {"route":"api_users_PUT_item","route_parameters":{"_route":"api_users_PUT_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"PUT","id":"39"},"request_uri":"https://adminstda.xaviervitali.fr/api/users/39","method":"PUT"} []
[2020-08-10T16:04:24.367768+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:04:24.367849+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:24.367911+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:24.439297+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:24.620212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-10T16:04:24.655740+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:24.656534+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:24.656583+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:24.762875+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [39] []
[2020-08-10T16:04:24.820434+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? ["user@gmail.com"] []
[2020-08-10T16:04:24.822720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-10T16:04:43.259059+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-10T16:04:43.266802+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-10T16:04:43.266854+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:04:43.266905+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:04:43.267659+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:04:43.294643+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:04:44.178369+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:04:44.223808+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Mon, 10 Aug 2020 14:04:44 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcwNjgyODQsImV4cCI6MTU5NzA3MTg4NCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.sRgrasSjJV6j89Tp4SQfcBsuM46-N-Kuw_TEkZU9DaivBe_dI6EuYRseTGBWvUvUQP_Wtfj8tU_d8KYdXmkV_U_eWqZgGPuAhJ39QK4H7LXKDlkA8mFwGlRLpDpmCcrntL0t84tJw0Dwj3A6vYI95jYZzRdzW979M8H6vYxC6gj7FVe0keM_5R0RGGS4DdrptQtfWVJDsOynv-Jz7RVSNlImIr9CZZ2mgZ5E5WBgz6PJPGSv_kEaRdi2Y1W6PCPM0hP9YiRFlbK6qsn4ZN092E1ywUWXDOf4AQ0aCMu0_dG_NsTZLdnhCpmK3oTgrMX08dDSW0cZkWQS8oyL4Qp1V3japnnxdR7lno-i416hE2-dch0LoxCKfpaloBz3oRqvuYY_zMVqbVmF_deSZeIxvdRk500ygCsknKiVYzWMJi8yL2m4SsoK6iR7GHzSbdanHlNfU5I5madGFQaUGH2Wm4tZUI2Sm8YGvMAm8ub2RAO0jBwIQodcjeZ3e8eU59xUq39uw2gb9-FlO-UKmqGd--Y7MyGLQhFtaUofbOVDyo3UT9w-0uC1E6LVTsAedCAnSEl5ITTaqf6omkIyfAwnmnUN469TmUYy6B5Vd5OZ8Kbw09UtDQZuaVDZD2IwYOVjYJKrZK0cM0SLH9j7RZ8x3tOd7AMmqD9FwNhzQQ2DIWw\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:04:44.223895+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:04:44.223937+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-10T16:04:44.557491+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-10T16:04:44.626502+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:04:44.626577+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:44.626635+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:44.630556+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:44.638392+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:04:44.645368+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:44.645646+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:44.645705+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:44.900027+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-10T16:04:44.907224+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-10T16:04:45.027876+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-10T16:04:45.311861+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-10T16:04:45.319935+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:04:45.319986+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:45.320046+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:45.323895+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:45.350778+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:04:45.358645+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:45.358906+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:45.358951+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:45.412876+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-10T16:04:45.415459+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-10T16:04:45.583695+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-10T16:04:56.001563+02:00] request.INFO: Matched route "api_file_uploads_GET_collection". {"route":"api_file_uploads_GET_collection","route_parameters":{"_route":"api_file_uploads_GET_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\FileUpload","_api_collection_operation_name":"GET"},"request_uri":"https://adminstda.xaviervitali.fr/api/file_uploads","method":"GET"} []
[2020-08-10T16:04:56.068573+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:04:56.068691+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:56.068795+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:56.090470+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:56.226840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:04:56.245070+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:56.248625+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:56.248675+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:04:56.615595+02:00] doctrine.DEBUG: SELECT f0_.id AS id_0, f0_.file_uploaded_name AS file_uploaded_name_1, f0_.title AS title_2, f0_.updated_at AS updated_at_3, u1_.id AS id_4, u1_.email AS email_5, u1_.roles AS roles_6, u1_.password AS password_7, u1_.gender AS gender_8, u1_.last_name AS last_name_9, u1_.first_name AS first_name_10, u1_.children AS children_11, u1_.email_notification AS email_notification_12, u1_.registered_at AS registered_at_13, u1_.granted AS granted_14, u1_.about AS about_15, f0_.added_by_id AS added_by_id_16 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id ORDER BY f0_.updated_at DESC LIMIT 30 [] []
[2020-08-10T16:04:56.819861+02:00] doctrine.DEBUG: SELECT count(DISTINCT f0_.id) AS sclr_0 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id [] []
[2020-08-10T16:05:02.237200+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-10T16:05:02.246032+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:05:02.246106+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:02.246172+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:02.250399+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:02.279701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:05:02.287985+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:02.288420+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:02.288469+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:02.318308+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-10T16:05:02.320735+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-10T16:05:02.389227+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-10T16:05:07.272646+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-10T16:05:07.304216+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:05:07.304329+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.304392+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.308329+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.316415+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:05:07.323656+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.323945+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.323992+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.396188+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-10T16:05:07.399081+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-10T16:05:07.434965+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-10T16:05:07.790642+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-10T16:05:07.799144+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:05:07.799197+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.799261+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.803302+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.831007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:05:07.839111+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.839396+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.839444+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:07.869185+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-10T16:05:07.871751+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-10T16:05:07.955177+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-10T16:05:09.814819+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"10"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/10","method":"GET"} []
[2020-08-10T16:05:09.822355+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:05:09.822405+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:09.822484+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:09.826395+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:09.853052+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:05:09.861300+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:09.861594+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:09.861642+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:09.971121+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [10] []
[2020-08-10T16:05:15.859801+02:00] request.INFO: Matched route "api_comments_put_item". {"route":"api_comments_put_item","route_parameters":{"_route":"api_comments_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"put","id":"51"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/51","method":"PUT"} []
[2020-08-10T16:05:15.867347+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T16:05:15.867403+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:15.867462+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:15.871475+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:15.899568+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-10T16:05:15.907150+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:15.907433+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:15.907487+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T16:05:16.355262+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [51] []
[2020-08-10T16:05:16.605283+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [35] []
[2020-08-10T16:05:16.607129+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [37] []
[2020-08-10T16:05:16.780440+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T16:05:16.784787+02:00] doctrine.DEBUG: UPDATE comment SET created_at = ?, blocked_id = ? WHERE id = ? ["2020-07-09T15:40:12+02:00",37,51] []
[2020-08-10T16:05:16.786144+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T16:05:16.788115+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [51] []
[2020-08-11T22:59:16.442630+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-11T22:59:16.442631+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-11T22:59:16.754361+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-11T22:59:16.754383+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-11T22:59:16.754443+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:16.754453+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:16.754504+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:16.754502+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:16.848518+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:16.848551+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:18.012548+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-11T22:59:18.020802+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-11T22:59:18.020860+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:18.020910+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:18.021742+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:18.412414+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-11T22:59:18.412419+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-11T22:59:18.412414+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-11T22:59:19.367616+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-11T22:59:19.376109+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-11T22:59:19.376190+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.376241+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.377064+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.405153+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-11T22:59:19.733859+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.733867+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.737618+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.891908+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-11T22:59:19.900770+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-11T22:59:19.900856+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.900908+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.901726+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:19.929742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-11T22:59:20.059017+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Tue, 11 Aug 2020 20:59:20 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcxNzk1NTksImV4cCI6MTU5NzE4MzE1OSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.ThahrR0crVKrMnB6bvWC1bKdk5WS0vtkeEIAEu__HY_zAJzST1kHzyW9Sfg05GUZk4tXmZiuGsVKNSeJWw3SoefbSfs137ghvY5V13qWotJ7FUOUI3d94099tzosYLXCCr4FTaY2qwGJMXOI0FIv0ova_Ef7xdpylKNty5zBNpsAmHeC6Hh71VMVJrZ1MsDjqoqRNhK9kg2c74Zvq9i1KCXLfbJbQgovSff7HjYZ_LulpYHiZbyzi2Xr8KujYdLdwf3M3SDzK13LLXfSehcAHCmo3jaary0OW4ryU2WvaL-tRJnRTZWY3xwRsn-4JkoImsAYu4jvLyVt5v9cL08pkbwUsWsaXvDczVGo2EpwDnSVQttxInjMiKgy6ZG0TnqCThy2quf-QLRs99jp1Xk0ke0X6v6bObivIkaay-ppbagPXc-oDCm6kiEa7psGLnC5QgH55ZPN0QemHlt9qMWY_hOvRZSO6FoJ0d6Z-uFR0RVY9GUHg8aGpB2cla1XtZVfql27dwHw3BSkHW_cEJJnX_Q9GAZOT9_057GVic-ROeKOX3AOJZwHhyl8EXfFkLzQ6AZLVWKv_g-lxMEwumrvIL8v6mfRXpXf7zm_m6hXDUpJqFIh_w7UnKWNX9KbvWcVGmoL_CMtiY_hNiB6cE_8Y9-tWNzvIpMK4RjOcNYBlE0\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.059017+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Tue, 11 Aug 2020 20:59:20 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcxNzk1NTksImV4cCI6MTU5NzE4MzE1OSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.ThahrR0crVKrMnB6bvWC1bKdk5WS0vtkeEIAEu__HY_zAJzST1kHzyW9Sfg05GUZk4tXmZiuGsVKNSeJWw3SoefbSfs137ghvY5V13qWotJ7FUOUI3d94099tzosYLXCCr4FTaY2qwGJMXOI0FIv0ova_Ef7xdpylKNty5zBNpsAmHeC6Hh71VMVJrZ1MsDjqoqRNhK9kg2c74Zvq9i1KCXLfbJbQgovSff7HjYZ_LulpYHiZbyzi2Xr8KujYdLdwf3M3SDzK13LLXfSehcAHCmo3jaary0OW4ryU2WvaL-tRJnRTZWY3xwRsn-4JkoImsAYu4jvLyVt5v9cL08pkbwUsWsaXvDczVGo2EpwDnSVQttxInjMiKgy6ZG0TnqCThy2quf-QLRs99jp1Xk0ke0X6v6bObivIkaay-ppbagPXc-oDCm6kiEa7psGLnC5QgH55ZPN0QemHlt9qMWY_hOvRZSO6FoJ0d6Z-uFR0RVY9GUHg8aGpB2cla1XtZVfql27dwHw3BSkHW_cEJJnX_Q9GAZOT9_057GVic-ROeKOX3AOJZwHhyl8EXfFkLzQ6AZLVWKv_g-lxMEwumrvIL8v6mfRXpXf7zm_m6hXDUpJqFIh_w7UnKWNX9KbvWcVGmoL_CMtiY_hNiB6cE_8Y9-tWNzvIpMK4RjOcNYBlE0\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.059017+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Tue, 11 Aug 2020 20:59:20 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcxNzk1NTksImV4cCI6MTU5NzE4MzE1OSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.ThahrR0crVKrMnB6bvWC1bKdk5WS0vtkeEIAEu__HY_zAJzST1kHzyW9Sfg05GUZk4tXmZiuGsVKNSeJWw3SoefbSfs137ghvY5V13qWotJ7FUOUI3d94099tzosYLXCCr4FTaY2qwGJMXOI0FIv0ova_Ef7xdpylKNty5zBNpsAmHeC6Hh71VMVJrZ1MsDjqoqRNhK9kg2c74Zvq9i1KCXLfbJbQgovSff7HjYZ_LulpYHiZbyzi2Xr8KujYdLdwf3M3SDzK13LLXfSehcAHCmo3jaary0OW4ryU2WvaL-tRJnRTZWY3xwRsn-4JkoImsAYu4jvLyVt5v9cL08pkbwUsWsaXvDczVGo2EpwDnSVQttxInjMiKgy6ZG0TnqCThy2quf-QLRs99jp1Xk0ke0X6v6bObivIkaay-ppbagPXc-oDCm6kiEa7psGLnC5QgH55ZPN0QemHlt9qMWY_hOvRZSO6FoJ0d6Z-uFR0RVY9GUHg8aGpB2cla1XtZVfql27dwHw3BSkHW_cEJJnX_Q9GAZOT9_057GVic-ROeKOX3AOJZwHhyl8EXfFkLzQ6AZLVWKv_g-lxMEwumrvIL8v6mfRXpXf7zm_m6hXDUpJqFIh_w7UnKWNX9KbvWcVGmoL_CMtiY_hNiB6cE_8Y9-tWNzvIpMK4RjOcNYBlE0\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.059183+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.059185+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.059185+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.059247+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.059252+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.059252+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.397854+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.442793+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Tue, 11 Aug 2020 20:59:20 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcxNzk1NjAsImV4cCI6MTU5NzE4MzE2MCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.Q9IwBlf8u6L1kyds_-1ORoZPynaZ0wpEIPWKMgMJn6Fgs3XOjBZrjdQG9IkI456EtC7s7gxd_iInhlDB42sGQiDtOYWlAnqL-dWx0RiIdZkX8oQzjPXSZyMq6EpjglVVENwzpvRYRkCeAz4NvoqJ6UuMybg4Wv5uZcIbB0wzAvKs5heJpJUJOO_rjOTuB1vyRkmhD9iZshyTQmDNtGUtXAg_Sh76eS4YGLijp0zxsDnMX-P6hkMib41NPajWdu-C4n6o70JDRhfkDhrViEOhjCQ2Lihqv2IeteezMf_IJnR-UcwbiW0xj0gbR-Y4mLQXv2uaQpfY1sSppKHXxadJy6hqCREACSPKQ2gQcNDmn3YAr8edLSfBbL6HGQctXlqatwkIfInGMfeFae9fRCK8RWTO9nPVfTxNR75PKvUPxugpEmid99dyGK2q3Iy4F6nbMipnkQZvW7B2ghl-IJY9syL-_9k8KIPeaunkcG9xB716HxZgnvQ5Mm1bJa1q9GfeF_M4B4Bqo6Vnfh95iIYCNI4sw13PhhUpGGgDkbqTRDpHwCs0N1PPAOX9huwGm5lLCPt8PuiVO14APrE948YWDUCQbIv6H7HmNr3oXk-NLg8i8lfFYGG8jZZ4bgghQbzJYs5LothtYAjeysB-_jk6EqqDGITabRm9LiY66O_rBSE\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.442906+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.442947+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.874486+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.918782+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Tue, 11 Aug 2020 20:59:20 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcxNzk1NjAsImV4cCI6MTU5NzE4MzE2MCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.Q9IwBlf8u6L1kyds_-1ORoZPynaZ0wpEIPWKMgMJn6Fgs3XOjBZrjdQG9IkI456EtC7s7gxd_iInhlDB42sGQiDtOYWlAnqL-dWx0RiIdZkX8oQzjPXSZyMq6EpjglVVENwzpvRYRkCeAz4NvoqJ6UuMybg4Wv5uZcIbB0wzAvKs5heJpJUJOO_rjOTuB1vyRkmhD9iZshyTQmDNtGUtXAg_Sh76eS4YGLijp0zxsDnMX-P6hkMib41NPajWdu-C4n6o70JDRhfkDhrViEOhjCQ2Lihqv2IeteezMf_IJnR-UcwbiW0xj0gbR-Y4mLQXv2uaQpfY1sSppKHXxadJy6hqCREACSPKQ2gQcNDmn3YAr8edLSfBbL6HGQctXlqatwkIfInGMfeFae9fRCK8RWTO9nPVfTxNR75PKvUPxugpEmid99dyGK2q3Iy4F6nbMipnkQZvW7B2ghl-IJY9syL-_9k8KIPeaunkcG9xB716HxZgnvQ5Mm1bJa1q9GfeF_M4B4Bqo6Vnfh95iIYCNI4sw13PhhUpGGgDkbqTRDpHwCs0N1PPAOX9huwGm5lLCPt8PuiVO14APrE948YWDUCQbIv6H7HmNr3oXk-NLg8i8lfFYGG8jZZ4bgghQbzJYs5LothtYAjeysB-_jk6EqqDGITabRm9LiY66O_rBSE\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.918893+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:20.918934+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-11T22:59:21.180466+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-11T22:59:21.268591+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-11T22:59:21.584703+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-11T22:59:21.584688+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-11T22:59:21.584786+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.584791+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.584867+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.584888+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.690786+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.690786+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.740456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-11T22:59:21.740456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-11T22:59:21.765570+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.765570+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.765941+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.765943+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.765989+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:21.765991+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T22:59:24.666067+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-11T22:59:24.666077+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-11T22:59:24.792767+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-11T22:59:24.792984+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-11T22:59:25.401553+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-11T22:59:25.401553+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-12T15:52:23.559976+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-12T15:52:23.560033+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-12T15:52:23.560033+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-12T15:52:23.755947+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-12T15:52:23.755954+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-12T15:52:23.755954+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-12T15:52:23.756059+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:23.756059+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:23.756059+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:23.756149+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:23.756151+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:23.756151+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:23.796908+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:23.796916+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:23.796944+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:25.608799+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-12T15:52:25.608902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-12T15:52:25.608902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-12T15:52:25.877546+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-12T15:52:25.885799+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-12T15:52:25.885855+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:25.885903+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:25.886693+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:25.918101+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-12T15:52:27.589261+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.589261+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.633375+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.655763+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950274+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 12 Aug 2020 13:52:27 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcyNDAzNDcsImV4cCI6MTU5NzI0Mzk0Nywicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ0UyIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.SJPrDc9n_f80n2KXaq2AdyCQ-COwFXUuV9N_f7fBblHVp7Pi_fzASDNGry526jnBMUCi_Qxm34N7AmDdzktTKXt7NGC1bUu9FhxbyydnaAQJbQoZUfT1-RsRg03Gtr8li_1h0HA93BqIFaNMD_xiNLSVKRYkgjXUOlje7tWTm_XW4gCfbjuQTGQITDNNnMdXXPGzGQY-dvPMp7qCyRyiDvdz41ePfINfciGCd1ipj3ViVpTDcUdsYAHrqa69q_Pa5AmrLIA0xHzSU5UquTFoSvbawco5dRwM3iEDtANQZ4pDsbTKQYL3VvPtl5VdjYwjFpds7Xb_gCKtHBcaWxV0ciD26BZjwbD3WLalY4Yg-wFMm4fnctlDiDyb4SMGaH3lPUf2Ur257vucKkMElia2frEJq3CaEq-Q4C9hsU6cXMtbKEfUy8lSpKMEGziWaP4NqXD5tboXpcaVdPEW9FieR_bA4VEjdZtQ02jCa5yhKsOfrr3GiDPp19pHB9oLfR6jNJn8CfWv8dboiF8cO9tGrVjDUDAya9-_8yTQNqs9hoc_tyUn4-caAcgXM4Y08N1BPp1EiUFPoe-AUwUYhat0Txj2xPMTGCUSn9hZ4NHmbygy1TYg6qS2P5SGDv3Q48vczSqyIcYaV1PydICeSfb92QOP5N3LzCoQ4hoKwSxx5fY\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950318+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 12 Aug 2020 13:52:27 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcyNDAzNDcsImV4cCI6MTU5NzI0Mzk0Nywicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ0UyIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.SJPrDc9n_f80n2KXaq2AdyCQ-COwFXUuV9N_f7fBblHVp7Pi_fzASDNGry526jnBMUCi_Qxm34N7AmDdzktTKXt7NGC1bUu9FhxbyydnaAQJbQoZUfT1-RsRg03Gtr8li_1h0HA93BqIFaNMD_xiNLSVKRYkgjXUOlje7tWTm_XW4gCfbjuQTGQITDNNnMdXXPGzGQY-dvPMp7qCyRyiDvdz41ePfINfciGCd1ipj3ViVpTDcUdsYAHrqa69q_Pa5AmrLIA0xHzSU5UquTFoSvbawco5dRwM3iEDtANQZ4pDsbTKQYL3VvPtl5VdjYwjFpds7Xb_gCKtHBcaWxV0ciD26BZjwbD3WLalY4Yg-wFMm4fnctlDiDyb4SMGaH3lPUf2Ur257vucKkMElia2frEJq3CaEq-Q4C9hsU6cXMtbKEfUy8lSpKMEGziWaP4NqXD5tboXpcaVdPEW9FieR_bA4VEjdZtQ02jCa5yhKsOfrr3GiDPp19pHB9oLfR6jNJn8CfWv8dboiF8cO9tGrVjDUDAya9-_8yTQNqs9hoc_tyUn4-caAcgXM4Y08N1BPp1EiUFPoe-AUwUYhat0Txj2xPMTGCUSn9hZ4NHmbygy1TYg6qS2P5SGDv3Q48vczSqyIcYaV1PydICeSfb92QOP5N3LzCoQ4hoKwSxx5fY\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950386+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950424+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950428+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950367+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 12 Aug 2020 13:52:27 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcyNDAzNDcsImV4cCI6MTU5NzI0Mzk0Nywicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ0UyIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.SJPrDc9n_f80n2KXaq2AdyCQ-COwFXUuV9N_f7fBblHVp7Pi_fzASDNGry526jnBMUCi_Qxm34N7AmDdzktTKXt7NGC1bUu9FhxbyydnaAQJbQoZUfT1-RsRg03Gtr8li_1h0HA93BqIFaNMD_xiNLSVKRYkgjXUOlje7tWTm_XW4gCfbjuQTGQITDNNnMdXXPGzGQY-dvPMp7qCyRyiDvdz41ePfINfciGCd1ipj3ViVpTDcUdsYAHrqa69q_Pa5AmrLIA0xHzSU5UquTFoSvbawco5dRwM3iEDtANQZ4pDsbTKQYL3VvPtl5VdjYwjFpds7Xb_gCKtHBcaWxV0ciD26BZjwbD3WLalY4Yg-wFMm4fnctlDiDyb4SMGaH3lPUf2Ur257vucKkMElia2frEJq3CaEq-Q4C9hsU6cXMtbKEfUy8lSpKMEGziWaP4NqXD5tboXpcaVdPEW9FieR_bA4VEjdZtQ02jCa5yhKsOfrr3GiDPp19pHB9oLfR6jNJn8CfWv8dboiF8cO9tGrVjDUDAya9-_8yTQNqs9hoc_tyUn4-caAcgXM4Y08N1BPp1EiUFPoe-AUwUYhat0Txj2xPMTGCUSn9hZ4NHmbygy1TYg6qS2P5SGDv3Q48vczSqyIcYaV1PydICeSfb92QOP5N3LzCoQ4hoKwSxx5fY\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950367+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 12 Aug 2020 13:52:27 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcyNDAzNDcsImV4cCI6MTU5NzI0Mzk0Nywicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ0UyIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.SJPrDc9n_f80n2KXaq2AdyCQ-COwFXUuV9N_f7fBblHVp7Pi_fzASDNGry526jnBMUCi_Qxm34N7AmDdzktTKXt7NGC1bUu9FhxbyydnaAQJbQoZUfT1-RsRg03Gtr8li_1h0HA93BqIFaNMD_xiNLSVKRYkgjXUOlje7tWTm_XW4gCfbjuQTGQITDNNnMdXXPGzGQY-dvPMp7qCyRyiDvdz41ePfINfciGCd1ipj3ViVpTDcUdsYAHrqa69q_Pa5AmrLIA0xHzSU5UquTFoSvbawco5dRwM3iEDtANQZ4pDsbTKQYL3VvPtl5VdjYwjFpds7Xb_gCKtHBcaWxV0ciD26BZjwbD3WLalY4Yg-wFMm4fnctlDiDyb4SMGaH3lPUf2Ur257vucKkMElia2frEJq3CaEq-Q4C9hsU6cXMtbKEfUy8lSpKMEGziWaP4NqXD5tboXpcaVdPEW9FieR_bA4VEjdZtQ02jCa5yhKsOfrr3GiDPp19pHB9oLfR6jNJn8CfWv8dboiF8cO9tGrVjDUDAya9-_8yTQNqs9hoc_tyUn4-caAcgXM4Y08N1BPp1EiUFPoe-AUwUYhat0Txj2xPMTGCUSn9hZ4NHmbygy1TYg6qS2P5SGDv3Q48vczSqyIcYaV1PydICeSfb92QOP5N3LzCoQ4hoKwSxx5fY\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950465+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950506+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950506+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950577+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:27.950577+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:28.865632+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-12T15:52:29.224206+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T15:52:29.224287+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:29.224361+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:29.283758+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:29.313186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-12T15:52:29.341901+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:29.342202+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:29.342249+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:29.969449+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-12T15:52:29.977613+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-12T15:52:29.977675+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:29.977724+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:29.978530+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:30.005543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-12T15:52:30.887186+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:30.931767+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 12 Aug 2020 13:52:30 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTcyNDAzNTAsImV4cCI6MTU5NzI0Mzk1MCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ0UyIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.vPsFQEaFoonPAfGfkigBt-JWPsHSL3EFvpsWWwgbJN9wELPnSDrKHqElF1pAU9FCrkVokNpROSnWfxqX2kVRBmK1RjUMDcIqvnX7dzJv0gDUAm5PfHzVPmu_UYEwqwZ6G6qap6L_SYFAqwJCY8rg9-rqlAmNkSTvdlnybx55NPPHsB-CFQJ16_Ps9tlXUuEhmWhUBWM2IrQGlndXyLo-3aPC771D0N6PpklpbKmIgKqz4_2wzVhmoXc9MnKDA2esvMU2xOIA8zrTRzM2MOPJxO2qL6bZylm89ROtt6gzo8QDxsgIYV4-8EhBc1aug3NANu32BDEPGCZlx5_HMMmuMlj7TvkgptNSu7-jT1sqJx-m0MZaMO9gB5phweGQPf8nPGPHPMW3sRr7AJa-RkuaMkMQcZsssg2Mz_ilwkTIfTPBirGhY0G3rCrWtIlN61t_dQpWjyR841kxq3n77AhbGEz76ukl_eZoTzErDjxGkujlV6ulVrajnzjM62ZJ61Eot5-l_qwnipWtQS4rkNCMS3OdjuPmaXo6Aps3UbsKQFEtvTsUBHTxK8aDN5qx9eMUMCaFOEN20Mkb4Fq1bg7frvO1wIhQPAP2Ufs6TtE6PZtjFweqgDnzb9LXOMtr9eSa67QH3MR-ET3YefTR8LKUzpKm9eXTB05l_x6P0lN8118\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:30.931868+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:30.931912+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-12T15:52:31.225847+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-12T15:52:31.256614+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T15:52:31.256689+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:31.256750+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:31.260741+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:31.268786+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-12T15:52:31.275916+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:31.276212+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:31.276259+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:31.392925+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-12T15:52:31.392986+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-12T15:52:31.480426+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-12T15:52:31.480591+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-12T15:52:31.889882+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-12T15:52:31.889911+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-12T15:52:32.539425+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-12T15:52:32.547938+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T15:52:32.547993+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:32.548053+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:32.551955+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:32.579446+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-12T15:52:32.587522+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:32.587824+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:32.587883+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T15:52:32.754043+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-12T15:52:32.758042+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-12T15:52:32.880868+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-14T09:50:18.450125+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://www.adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-14T09:50:18.450114+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-14T09:50:18.450106+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://www.adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-14T09:50:18.450123+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-14T09:50:19.362878+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:19.362878+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:19.362938+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:19.362938+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:19.919945+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-14T09:50:19.919973+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-14T09:50:19.919979+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-14T09:50:19.919979+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-14T09:50:19.956946+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-14T09:50:19.956974+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-14T09:50:19.956981+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-14T09:50:19.956981+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-14T09:50:22.594175+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://www.adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-14T09:50:22.611411+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:22.618158+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-14T09:50:22.618507+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-14T09:50:23.223825+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://www.adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-14T09:50:23.241176+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:23.249629+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-14T09:50:23.250163+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-14T09:50:23.273537+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-14T09:50:23.291812+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:23.299581+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-14T09:50:23.300067+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-14T09:50:23.310324+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://www.adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-14T09:50:23.640366+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-14T09:50:23.652725+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:23.658659+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-14T09:50:23.659002+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-14T09:50:23.902642+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-14T09:50:24.502039+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-14T09:50:24.832671+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:24.832809+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:24.837388+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:25.030892+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://www.adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-14T09:50:25.091146+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-14T09:50:27.041041+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T09:50:27.054575+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST /dns-query"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST /dns-query\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/dns-query\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T09:50:38.406327+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /robots.txt"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /robots.txt\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/robots.txt/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[]
[2020-08-14T09:50:33.570600+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST /dns-query"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST /dns-query\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/dns-query\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T09:50:33.570576+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T09:50:33.570937+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T09:50:34.152214+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /robots.txt"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /robots.txt\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/robots.txt/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T09:50:41.090566+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /sitemap.xml"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /sitemap.xml\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/sitemap.xml/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} [2020-08-14T09:50:46.245552+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /sitemap.xml"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /sitemap.xml\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/sitemap.xml/\". at /home/xavieriervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T09:50:41.475045+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /robots.txt"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /robots.txt\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/robots.txt/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T09:50:48.805832+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /sitemap.xml"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /sitemap.xml\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/sitemap.xml/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-14T13:17:22.825749+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-14T13:17:22.989643+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-14T13:17:22.989751+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-14T13:17:22.989836+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-14T13:17:23.020993+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-14T13:17:26.033940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-14T13:17:27.219641+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-14T13:17:27.636136+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Fri, 14 Aug 2020 11:17:27 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc0MDM4NDcsImV4cCI6MTU5NzQwNzQ0Nywicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ0UyIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.qg1LI8TLyAGmnINHa5YuN3RkoQKzq7zl2Ju7JjJVpGGalKyBiKovlikvGHl7jP-3NjKvmin96k_fNNxmUwPnvTNLSDrkgSEZabrgORgqHqWSCX6zk_zbcYYnuYmFsIsece3J2NaI-tMfmd_HR2wO-bAbojuZLWxT4yWaqSR9vMB76TI2mtBpgTHi7enkAWCWEs7BDtQ1530THZWK9x7Kof3La2Yu9E2S0gTmk-beWjdrirqiDMlGpWhJ99CDNB29Gvwjs3djK_PW11oNmKWf8TbjAmtZepnFp1gJlIL1DH4eUNY9b8lKgj1f2pdc3DhMLt9B5QkozP1L4ez4vrJ5zz843RPbAXr04oh22yr3W_LVK-xABg4tYkk9aZo4U1FO4Io8Z4JJAN_tRlHN5fRQcHovwV6WC87ho5LNrX2ol6_zUj8zW7utR6gccp5p0T7Y0ycAOpgtjFfITLXJwHZDw4gmVvjQ6TxB20dLAZLTy2oagGvFUr_imcz3s8fltjPpumQ2bh9Q8iBXax9ALTjaViVw4lAzLleJOedfxIlAH9Wc3o5h3sC-rEZrZxFpA6fvMMkjewjF-lpDptNzL031z4v7iUA8qo_1us2CAjza-XT8zREkJaVEVSZKBouldsid5HgieOA40T7T2KEBvBOdpEEf8Tc5mJwqKfupAF22vnw\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-14T13:17:27.636285+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-14T13:17:27.636353+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-14T13:17:29.103640+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-14T13:17:29.353746+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-14T13:17:29.353835+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:29.353906+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:29.469780+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:29.493562+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-14T13:17:29.544889+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:29.545247+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:29.545295+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:32.059358+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-14T13:17:32.152704+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-14T13:17:34.573141+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-14T13:17:35.377914+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-14T13:17:35.386639+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-14T13:17:35.386717+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:35.386783+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:35.390953+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:35.419598+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-14T13:17:35.427668+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:35.427976+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:35.428024+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-14T13:17:35.615583+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-14T13:17:35.620114+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-14T13:17:35.837027+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-19T18:47:52.326505+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-19T18:47:53.068410+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-19T18:47:53.068495+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:47:53.068547+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:47:53.142691+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:47:54.210873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T18:47:55.437783+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:47:55.891478+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 19 Aug 2020 16:47:55 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc4NTU2NzUsImV4cCI6MTU5Nzg1OTI3NSwicm9sZXMiOlsiUk9MRV9XUklUVEVSIiwiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYXV0ZXVyQGdtYWlsLmNvbSIsImlkIjo0MSwiZmlyc3ROYW1lIjoicHJlbm9tIGF1dGV1ciIsImxhc3ROYW1lIjoibm9tIGF1dGV1ciIsImdlbmRlciI6Ik0iLCJjaGlsZHJlbiI6WyJDUFwvQ0UxIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.PbAeorhqdVrPKw2ux5OpmOmSOZ6XSFIJ6vTjbjTFl2hfX58TiYT_d0ybDG7FD5gcjgLWwX1tycPUMd73a3GGXhzGHh8OEn9cbCnCm5e26dSy1BXeHZGZ0TNVn9sEDJ18xxD6PoVNmfTQGaV4GpMm0vq-U0kNtEcZlUZu-CqUWm0Tu1HGoczhki0iCUGXi0fqWucn619qxCy4osZ46-c0DMBOqSvtchf-xaxAYXM7B72moh4dqaISwBNjLO3KFn_Z56c7gPh3exZ8xTFKB9kuqhnN2Wear90njjKtlEXooSveXPgFE4JwuN3dwwuYa8cVtnPSxShOhid0FTntpiVAzcIpEK0PnO8ddAKZeh9s-_m1yRcJp-vfLSLVG4Cma_9p4aD3Vc-q3ujKzkdoRYGvF1JbQTAgrrkdUuosmEMv34FvsG6GDa9O25JUNIcnFvifZlvRaiG9rvlHWFeIA65URZsjA9mVaUgLqzswDpq4mb6KsYMWZ_ZUbIVHmCDmbu_12DL6rqrmSKrxfjJE6uyqCJO3XUDLcCNWC4RrBqShgBCfhK4A-a2-VrSyNUyUf0qK3_ZnByl2fr8BOJ3dNs-OD_ehNy6Ziu3WpUvxwSj5YoC3LJYySW0WsLrzEaTlSvOmMcdDDLdO1CLLYvxlVF4n6qPYbdIf8KYdl5tZpJO0WBQ\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:47:55.891601+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:47:55.891640+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:48:43.665020+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T18:48:43.864531+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T18:48:43.864597+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:48:43.864643+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:48:43.898536+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-19T18:48:44.025476+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-19T18:48:44.041595+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-19T18:48:54.959129+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-08-19T18:48:54.966764+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T18:48:54.966830+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:48:54.966890+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:48:55.090190+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:48:55.100201+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:20.321537+02:00] request.INFO: Matched route "api_articles_post_collection". {"route":"api_articles_post_collection","route_parameters":{"_route":"api_articles_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"POST"} []
[2020-08-19T18:49:20.352603+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T18:49:20.352663+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:20.352722+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:20.360782+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:20.365212+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:27.136240+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-19T18:49:27.145844+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-19T18:49:27.145894+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:49:27.145942+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:49:27.147304+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:49:27.196385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T18:49:28.129152+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:49:28.181146+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 19 Aug 2020 16:49:28 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc4NTU3NjgsImV4cCI6MTU5Nzg1OTM2OCwicm9sZXMiOlsiUk9MRV9XUklUVEVSIiwiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYXV0ZXVyQGdtYWlsLmNvbSIsImlkIjo0MSwiZmlyc3ROYW1lIjoicHJlbm9tIGF1dGV1ciIsImxhc3ROYW1lIjoibm9tIGF1dGV1ciIsImdlbmRlciI6Ik0iLCJjaGlsZHJlbiI6WyJDUFwvQ0UxIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.VG0YKpRRn8TtNIe3L6X8Cvg9fBOBN5on9lc92GR4tZE5qSwn_JbjI4dAQVui-6u9UgcJtid2dOTb-dARhhayL4eA7w8Rm5swFXhBrTw77FlxzsQstJoBut4U148TTUsiEbGJyG4hVi6bDYVnIhTKdxSptRb6SfrpD65dCc5N_Is7MLJHbTzwRP1v9zRl5jF1eS6d3Q1CAPDoB5OvOAgzhoFmdnhl247W5HZ9bNyhkvcBZ5c6F76nzzmXc_VJcp7m97NEcQSlbHwcQDaE_j2UE7sGluWIeGHPnZOEVR2-IJod0yhZWbXUAYq7C3qknk7ZrL123dIJ-J0l_jtOI2BQwuFdsdkoLTxlxN23lAVpj9Wmmnp_judpiPBwNb9JJKOV3GUbtJq9qsZLFTTnCu39zXtKAqlZexuVd2DQtKqyM1GlSwgY4PPoZkX4qgP7SYsch2q8FH0nzqA-c3DH9LDT_MVYFRKm9azmW8RwTvJyHBPrLR3caLOgogyDAcuOrgsPXj39C2XHaFgLlWqIFywXFV0NFtTI_nen5U5rwOB8bU9cPEB8pxfN26AvvESMkkHOWLw_Y7IL3PRhhvOxUemNX7-hHmmR8Nk-EuuMHMvQT4fwP_JVBZNSsYWw23xgJ-0-snypN1WmfSmaqmgNJcoCfcr6n1hDgMc4RPOUBR6QCFQ\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:49:28.181295+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:49:28.181358+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T18:49:44.932854+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T18:49:44.940434+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T18:49:44.940483+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:44.940538+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:44.975193+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:121)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:44.983554+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:52.290971+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T18:49:52.351182+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T18:49:52.351291+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:52.351390+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:52.359385+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:121)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:52.365109+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:58.729634+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T18:49:58.738009+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T18:49:58.738071+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:58.738130+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:58.757113+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:58.830063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T18:49:58.873512+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:58.874407+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:49:58.874461+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:50:00.090667+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T18:50:00.145547+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T18:51:08.638257+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T18:51:08.689910+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T18:51:08.689990+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:51:08.690042+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:51:08.699233+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-19T18:51:08.732311+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-19T18:51:08.733107+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-19T18:51:14.445781+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T18:51:14.453415+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T18:51:14.453465+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:51:14.453521+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:51:14.462123+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:51:14.540867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T18:51:14.552836+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:51:14.553659+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:51:14.553708+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T18:51:14.607440+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T18:51:14.615551+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T19:02:43.150389+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T19:02:43.194311+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T19:02:43.194392+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:02:43.194458+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:02:43.203838+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:02:43.330497+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T19:02:43.342584+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:02:43.343431+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:02:43.343480+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:02:43.498391+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T19:02:43.514777+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T19:04:02.765528+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T19:04:02.789044+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T19:04:02.789123+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:02.789186+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:02.799211+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:02.899647+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T19:04:02.911782+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:02.912724+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:02.912795+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:03.080292+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T19:04:03.096974+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T19:04:09.549250+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T19:04:09.556868+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T19:04:09.556954+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:09.557045+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:09.561622+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:09.589483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T19:04:09.597591+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:09.597896+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:09.597944+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:09.623459+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T19:04:09.631041+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T19:04:12.278840+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T19:04:12.286781+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T19:04:12.286836+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:12.286894+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:12.290875+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:12.325001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T19:04:12.335362+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:12.335668+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:12.335715+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:04:12.360748+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T19:04:12.368288+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T19:12:48.973484+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T19:12:48.997296+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T19:12:48.997369+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:12:48.997429+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:12:49.007450+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:12:49.081484+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T19:12:49.093516+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:12:49.094399+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:12:49.094447+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:12:49.162784+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T19:12:49.178258+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T19:13:07.616807+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T19:13:07.624607+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T19:13:07.624662+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:07.624719+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:07.628706+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:07.657587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T19:13:07.666491+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:07.666798+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:07.666846+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:07.693873+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T19:13:07.701357+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T19:13:09.998339+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T19:13:10.008656+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T19:13:10.008749+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:10.008841+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:10.013924+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:10.041737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T19:13:10.049812+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:10.050104+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:10.050152+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:10.075090+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T19:13:10.083508+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T19:13:21.137656+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-19T19:13:21.165254+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T19:13:21.165325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:21.165387+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:21.175067+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:21.226648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["auteur@gmail.com"] []
[2020-08-19T19:13:21.238162+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"auteur@gmail.com\", authenticated=true, roles=\"ROLE_WRITTER, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:21.239030+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:21.239079+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T19:13:21.296665+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id = ? [0] []
[2020-08-19T19:13:21.316251+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /home/xaviervimj/projet/symfony/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-19T21:24:21.673894+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-19T21:24:22.686169+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-19T21:24:23.079116+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-19T21:24:23.117685+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-19T23:09:25.694895+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-19T23:09:26.391830+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-19T23:09:26.686519+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-19T23:09:26.722214+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-19T23:32:24.983657+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-19T23:32:24.994617+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-19T23:32:25.035214+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-19T23:32:25.035600+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-19T23:32:25.404747+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-19T23:32:26.533094+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-19T23:32:27.663501+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9127b7"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/9127b7","method":"GET"} []
[2020-08-19T23:32:27.990023+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://adminstda.xaviervitali.fr/login")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://adminstda.xaviervitali.fr/login\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-19T23:32:31.579131+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-19T23:32:31.846797+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:32:33.119833+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-08-19T23:32:33.134798+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:32:33.401480+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-19T23:32:33.414674+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:32:33.444763+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:32:33.457076+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:32:33.480847+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:32:33.748942+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"http://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-19T23:32:33.761321+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:32:33.790553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:32:33.802156+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:32:33.849067+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-19T23:32:33.849978+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-19T23:32:34.071370+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:32:34.557108+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad21ac"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/ad21ac","method":"GET"} []
[2020-08-19T23:32:36.749329+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"http://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-08-19T23:32:36.762398+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:32:36.793312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:32:36.805818+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:32:36.863105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-08-19T23:32:37.060410+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [10] []
[2020-08-19T23:32:37.088346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-19T23:32:37.089279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [35] []
[2020-08-19T23:32:37.091134+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [42] []
[2020-08-19T23:32:37.092103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [8] []
[2020-08-19T23:32:37.093001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-19T23:32:37.100266+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:32:37.425017+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"955c82"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/955c82","method":"GET"} []
[2020-08-19T23:32:41.971761+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-19T23:32:41.985915+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:32:42.019090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:32:42.034772+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:32:42.141996+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-19T23:32:42.244458+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-19T23:32:42.253055+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:32:42.610385+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6c29bf"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/6c29bf","method":"GET"} []
[2020-08-19T23:32:46.298292+02:00] request.INFO: Matched route "admin_upload". {"route":"admin_upload","route_parameters":{"_route":"admin_upload","_controller":"App\\Controller\\AdminController::upload"},"request_uri":"http://adminstda.xaviervitali.fr/admin/upload","method":"GET"} []
[2020-08-19T23:32:46.330466+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:32:46.382989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:32:46.401608+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:32:46.491116+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 [] []
[2020-08-19T23:32:47.045012+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:32:47.378833+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"255440"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/255440","method":"GET"} []
[2020-08-19T23:32:48.800184+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-19T23:32:48.827794+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:32:48.872833+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:32:48.891662+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:32:48.916831+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-19T23:32:48.927684+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-19T23:32:48.934700+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:32:49.308542+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1174ed"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/1174ed","method":"GET"} []
[2020-08-19T23:33:10.733206+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-19T23:33:10.751480+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:33:10.847330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:33:10.860373+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:33:10.900042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-19T23:33:10.925593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-19T23:33:10.938130+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:33:11.330008+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b5191a"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/b5191a","method":"GET"} []
[2020-08-19T23:33:54.298418+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-19T23:33:54.391663+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-19T23:33:54.391751+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:33:54.391809+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:33:54.418467+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:33:54.787619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:33:55.682826+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:33:55.997746+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 19 Aug 2020 21:33:55 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc4NzI4MzUsImV4cCI6MTU5NzkxNjAzNSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.uWXJX236JwsMaHn8t07TgnQvJ3Q3GlOQsP3rnFt9Ph3nZHtIxF51TPiHwH4eWRAwLK7fbZ-b7ENGphzILTPbjTd0oWtlQZBHw1QQwhMpgU5rTDu_WlfWbjaPJDChCXn8Ll63gq8ESdQ6vXpn1m9OUZAONXLMsz1LEyhX5LmqTYZ9Gvsyhwu1Xfrf11dKm7W8jrJDzJHa4NEtOo3NYmXa0vkzgbf3fZmsZvOeAvNgNjKep_SVFrpaKZTHUNidr9djUOFkv7uFK8_8rqZcxpaR8feCrCZ031dtxK-Op42A8zAMCI2aJO1XTqlJHsh1NQcqyWdggMjB7ZSMb7tpGsl8obax4g0KdGcdM83e4DL0Pc8xejdgcaIzqtbTo0ud_G-jzhUqbSAi4R7Pc579ZUMoLvD_USpzmbgEUcwZ3VrUMEH3DcDEh6lj-Ku1T18qzpUID5j0BRJmhUG6Zq83EVq-GI8JCNVgK2DHRpSO0Bd20TkRDwXQtB2UZKxD1Y9keNN7X9mOCZBz0QHn_EUzqz3HK207EQrw-T5QIR07fJMI6cVXjwLbjPstyDkYjHr9us17YyrujuLKtBOm0Wy5PPhOBrdVdicmIsw8QlcL1Nzbmyxqkb26n4OSy9sa7oQX3-79g4KVMwhkELBRFPNdH-k7giEbzg7hX0d1qG9ZPLUq8r0\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:33:55.997851+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:33:55.997889+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:33:56.584369+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-19T23:33:56.584585+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-19T23:33:56.623402+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:33:56.623469+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.623532+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.648104+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:33:56.648183+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.648241+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.696743+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.696754+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.707353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:33:56.721551+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.721854+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.721901+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.729152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:33:56.742676+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.742966+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:56.743014+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:33:57.893143+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-19T23:33:57.893320+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-19T23:33:58.005428+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-19T23:33:58.005553+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-19T23:33:58.106401+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-19T23:33:58.185722+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-19T23:34:08.807946+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-19T23:34:08.815961+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:34:08.816014+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:08.816075+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:08.820041+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:08.851686+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:34:08.865993+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:08.866269+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:08.866345+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:08.906257+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-19T23:34:08.909263+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-19T23:34:08.929528+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-19T23:34:11.563327+02:00] request.INFO: Matched route "api_file_uploads_GET_collection". {"route":"api_file_uploads_GET_collection","route_parameters":{"_route":"api_file_uploads_GET_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\FileUpload","_api_collection_operation_name":"GET"},"request_uri":"https://adminstda.xaviervitali.fr/api/file_uploads","method":"GET"} []
[2020-08-19T23:34:11.570948+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:34:11.570998+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:11.571053+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:11.574991+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:11.606726+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:34:11.620515+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:11.620792+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:11.620838+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:11.735739+02:00] doctrine.DEBUG: SELECT f0_.id AS id_0, f0_.file_uploaded_name AS file_uploaded_name_1, f0_.title AS title_2, f0_.updated_at AS updated_at_3, u1_.id AS id_4, u1_.email AS email_5, u1_.roles AS roles_6, u1_.password AS password_7, u1_.gender AS gender_8, u1_.last_name AS last_name_9, u1_.first_name AS first_name_10, u1_.children AS children_11, u1_.email_notification AS email_notification_12, u1_.registered_at AS registered_at_13, u1_.granted AS granted_14, u1_.about AS about_15, f0_.added_by_id AS added_by_id_16 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id ORDER BY f0_.updated_at DESC LIMIT 30 [] []
[2020-08-19T23:34:11.831146+02:00] doctrine.DEBUG: SELECT count(DISTINCT f0_.id) AS sclr_0 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id [] []
[2020-08-19T23:34:14.091113+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-19T23:34:14.091386+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-19T23:34:14.100423+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:34:14.100498+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.100564+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.104660+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.132463+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:34:14.132538+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.132599+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.136735+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.143315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:34:14.146976+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:34:14.156733+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.157025+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.157073+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.157334+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.157624+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.157671+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:14.188322+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-19T23:34:14.190897+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-19T23:34:14.197943+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-19T23:34:14.200952+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-19T23:34:14.202324+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-19T23:34:14.267866+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-19T23:34:17.474101+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"La_securite_d_innover_plus_simplement"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/La_securite_d_innover_plus_simplement","method":"GET"} []
[2020-08-19T23:34:17.481667+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:34:17.481717+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:17.481793+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:17.485690+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:17.516797+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:34:17.530686+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:17.530967+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:17.531013+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:34:17.678710+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["La_securite_d_innover_plus [...]"] []
[2020-08-19T23:37:27.696845+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-19T23:37:27.737194+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:37:27.788832+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:37:27.805950+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:37:27.883732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-19T23:37:27.980295+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-19T23:37:27.994228+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:37:28.478758+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1dacf"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/b1dacf","method":"GET"} []
[2020-08-19T23:37:33.232697+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-19T23:37:33.245750+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:37:33.276084+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:37:33.288069+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:37:33.310022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-19T23:37:33.320685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-19T23:37:33.327570+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:37:33.740026+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fbcdba"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/fbcdba","method":"GET"} []
[2020-08-19T23:37:37.921537+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-19T23:37:37.934379+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:37:37.964556+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:37:37.976329+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:37:37.998309+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-19T23:37:38.032562+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-19T23:37:38.039311+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:37:38.608545+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"96f296"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/96f296","method":"GET"} []
[2020-08-19T23:37:39.020543+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://adminstda.xaviervitali.fr/admin/mail")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://adminstda.xaviervitali.fr/admin/mail\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-19T23:40:01.819114+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-19T23:40:01.851843+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:40:01.910194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:40:01.929018+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:40:01.992107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-19T23:40:02.141070+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-19T23:40:02.164591+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:40:02.533949+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"995d95"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/995d95","method":"GET"} []
[2020-08-19T23:40:04.253168+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-19T23:40:04.265419+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-19T23:40:04.294350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-19T23:40:04.305713+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-19T23:40:04.326671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-19T23:40:04.337621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-19T23:40:04.344261+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-19T23:40:04.716052+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"247677"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/247677","method":"GET"} []
[2020-08-19T23:43:38.454551+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"La_securite_d_innover_plus_simplement"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/La_securite_d_innover_plus_simplement","method":"GET"} []
[2020-08-19T23:43:38.491540+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:43:38.491593+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:43:38.491651+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:43:38.524236+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:43:38.598198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-19T23:43:38.617871+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:43:38.618689+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:43:38.618744+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:43:38.767597+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["La_securite_d_innover_plus [...]"] []
[2020-08-19T23:50:30.663082+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-19T23:50:30.674727+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-19T23:50:30.674779+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:30.674827+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:30.676568+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:30.745368+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:50:31.334619+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-19T23:50:31.367596+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-19T23:50:31.367676+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:31.367727+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:31.368531+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:31.400139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:50:31.652144+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:31.703024+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 19 Aug 2020 21:50:31 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc4NzM4MzEsImV4cCI6MTU5NzkxNzAzMSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ0UyIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.t7Q4FxiZSviwMKFnCQoPGorq98mkmLYwGTNYBjgb4dVNaXdyMTN0w0T_bRMuP1SZxMgaDVIlyq9KWHa_WBGxufa6xgka7y8jcuVf9E-obPdL_S26BouhYDtQUabyWQe-4Mj_nuBCjnVxVQahumxqPTodzRvagEfP0IlK9WbgERxo_gdnYdAc1EzITP9PLdy6ksAvsvAcWEfuuzVuETkIBvZWwZOH0jtxeHyl-jdCpyKyUmc70q5JAevdiZLLp4sHPuSEIC1ATgZgNUGUKkSOIuMy-LZU8W47ocAQM7p0iyAH9LfZkx8cK-DwlLDLMtlAity0S602fOJfyZsvdjJMuTPpytcsSfAY2b2lj6sNhKnqooCcshn7KvRCrEVacUjXvHTffNbP6RceZUv1ne_LYw9LClo_OJ6LoOOM0IK5frEuHU1h-a5DaWpstDfG7oxBqNzeQz0uur6tZZUrSZtdEJobbFmiiVShZAglh6oxtW4fL_7D5xfSXY_YXog73mdQSQ8kxC4b5pvp0XAhgd2JGPUT5l0BaxQ9hoKxHKgvwfIGymg3tl9eCzTpkMIEu90bvapn6p6hvzx2cwyZm_k_q36ryfGpMkIwWxFYUFDQ5ph9LcaakoC3oHB66pQ3mZOJWYjg7tz6xiD4js0DrpfsFM0eA6eEYifqMnE8fcy2DKw\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:31.703129+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:31.703171+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:32.284110+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-19T23:50:32.295577+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-19T23:50:32.308404+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:50:32.308482+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.308547+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.314318+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.319988+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:50:32.320058+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.320118+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.324413+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.333214+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:32.335537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:50:32.345616+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.345912+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.345961+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.349035+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:50:32.362979+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.363264+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.363318+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:32.377934+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 19 Aug 2020 21:50:32 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc4NzM4MzIsImV4cCI6MTU5NzkxNzAzMiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzksImZpcnN0TmFtZSI6IlV0aWxpc2F0ZXVyIiwibGFzdE5hbWUiOiJYYXZpZXIiLCJnZW5kZXIiOiJNciIsImNoaWxkcmVuIjpbIlBTIiwiQ0UyIl0sImVtYWlsTm90aWZpY2F0aW9uIjp0cnVlfQ.Boh8jkAYZuzUfqhDt59dw3bdlg2auv9Gy1hWDcaIKJ1Cihr_Va1LCI4XNmwFBZUApEK9ZAulOGEgdLvf2eQXa41UwwIngWVwRM3Ch-oJ1fEjXt_WJHHkh7CGudzz62ILoRdhW02SMjswqbrESHgGscKdQvwUE-DqnRAtzsvVdDbjSvxcNiAoXJJ0NMv5j8YaXEFRnW9__3CAInfk65qc0MRfoi9yk1vLAkIxbvqiw_Pzs2goRxBd33ILX2CSsyM8V-OWrndJVi6W2ENkze3odDcMC7awkXnax1vcn_K3d0c_FkHPHyZgh79IfW5-e1R38F8NwF2GAIAcyiFgkotYYn33GCDrypokgkUmMMb2n4b4VfRslNuKR3YrawdDHvNR3mYk3fQrItFzhN-JIJBBIaMc11PKxV8dcw6DYX1EvE1KqNlv1Qx-KO-71hxySYLi8-4huXdR21vL-n_i-ztt5NEXlZWF3U-j_4ynd400pO5MpoZ7RPW5KrW4yLfpORzeuOKM2_cFWQXD4ss83jhTRv1t3gS_YkIf5I_h2lMySZTLKxdu2cZUziD9MZZ41UAG8XGmNHbzB9rG7tG9Eepu9aI2MWrPSfpBIctv2BGasSL6qRyGGSjCQdGl-LBaaGSacdaARU146JG5ZJT6zNh-HsIloc1wctAy9T6BPCRjLt8\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:32.378023+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:32.378062+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-19T23:50:32.489116+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-19T23:50:32.489192+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-19T23:50:32.504783+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-19T23:50:32.505082+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-19T23:50:32.557930+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-19T23:50:32.598128+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-19T23:50:38.069492+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"L_avantage_de_rouler_plus_facilement"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/L_avantage_de_rouler_plus_facilement","method":"GET"} []
[2020-08-19T23:50:38.077424+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:50:38.077479+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:38.077536+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:38.081595+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:38.114037+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:50:38.128150+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:38.128442+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:38.128489+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:38.172061+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["L_avantage_de_rouler_plus_ [...]"] []
[2020-08-19T23:50:47.966434+02:00] request.INFO: Matched route "api_file_uploads_GET_collection". {"route":"api_file_uploads_GET_collection","route_parameters":{"_route":"api_file_uploads_GET_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\FileUpload","_api_collection_operation_name":"GET"},"request_uri":"https://adminstda.xaviervitali.fr/api/file_uploads","method":"GET"} []
[2020-08-19T23:50:47.974330+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:50:47.974387+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:47.974444+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:47.978479+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:48.010876+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:50:48.024636+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:48.024928+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:48.024976+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:50:48.119961+02:00] doctrine.DEBUG: SELECT f0_.id AS id_0, f0_.file_uploaded_name AS file_uploaded_name_1, f0_.title AS title_2, f0_.updated_at AS updated_at_3, u1_.id AS id_4, u1_.email AS email_5, u1_.roles AS roles_6, u1_.password AS password_7, u1_.gender AS gender_8, u1_.last_name AS last_name_9, u1_.first_name AS first_name_10, u1_.children AS children_11, u1_.email_notification AS email_notification_12, u1_.registered_at AS registered_at_13, u1_.granted AS granted_14, u1_.about AS about_15, f0_.added_by_id AS added_by_id_16 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id ORDER BY f0_.updated_at DESC LIMIT 30 [] []
[2020-08-19T23:50:48.164678+02:00] doctrine.DEBUG: SELECT count(DISTINCT f0_.id) AS sclr_0 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id [] []
[2020-08-19T23:50:57.705385+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "https://adminstda.xaviervitali.fr/assets/files/programmation-orientee-objets-14-les-classes-5f076ff80ef94814670503.mp4")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"https://adminstda.xaviervitali.fr/assets/files/programmation-orientee-objets-14-les-classes-5f076ff80ef94814670503.mp4\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-19T23:51:06.832560+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-19T23:51:06.856654+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:51:06.856707+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:06.856768+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:06.866701+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:06.930476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:51:06.951700+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:06.953583+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:06.953641+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:07.028740+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-19T23:51:07.034179+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-19T23:51:07.072070+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-19T23:51:09.454674+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-19T23:51:09.457516+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-19T23:51:09.463190+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:51:09.463246+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.463312+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.467381+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.497399+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:51:09.497475+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.497535+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.501629+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.503244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:51:09.511967+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:51:09.517854+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.518147+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.518195+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.521635+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.521932+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.521980+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:09.548009+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-19T23:51:09.550463+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-19T23:51:09.560616+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-19T23:51:09.585732+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-19T23:51:09.588815+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-19T23:51:09.645603+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-19T23:51:11.109358+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-19T23:51:11.117831+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:51:11.117888+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:11.117949+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:11.121975+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:11.154342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:51:11.167911+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:11.168205+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:11.168251+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:11.197417+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-19T23:51:11.199764+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-19T23:51:11.210041+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-19T23:51:12.324015+02:00] request.INFO: Matched route "api_file_uploads_GET_collection". {"route":"api_file_uploads_GET_collection","route_parameters":{"_route":"api_file_uploads_GET_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\FileUpload","_api_collection_operation_name":"GET"},"request_uri":"https://adminstda.xaviervitali.fr/api/file_uploads","method":"GET"} []
[2020-08-19T23:51:12.331845+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-19T23:51:12.331921+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:12.331981+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:12.335885+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:12.367284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-19T23:51:12.380946+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:12.381252+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:12.381301+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-19T23:51:12.411987+02:00] doctrine.DEBUG: SELECT f0_.id AS id_0, f0_.file_uploaded_name AS file_uploaded_name_1, f0_.title AS title_2, f0_.updated_at AS updated_at_3, u1_.id AS id_4, u1_.email AS email_5, u1_.roles AS roles_6, u1_.password AS password_7, u1_.gender AS gender_8, u1_.last_name AS last_name_9, u1_.first_name AS first_name_10, u1_.children AS children_11, u1_.email_notification AS email_notification_12, u1_.registered_at AS registered_at_13, u1_.granted AS granted_14, u1_.about AS about_15, f0_.added_by_id AS added_by_id_16 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id ORDER BY f0_.updated_at DESC LIMIT 30 [] []
[2020-08-19T23:51:12.421787+02:00] doctrine.DEBUG: SELECT count(DISTINCT f0_.id) AS sclr_0 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id [] []
[2020-08-20T00:22:50.734639+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T00:22:50.746327+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T00:22:50.746382+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T00:22:50.746432+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T00:22:50.748114+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T00:22:50.821504+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T00:22:51.796875+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T00:22:51.863524+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Wed, 19 Aug 2020 22:22:51 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc4NzU3NzEsImV4cCI6MTU5NzkxODk3MSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOnRydWV9.eTY_UUWDZmvREaeZlT6esvLj77y95dEuJ4XpKZLWsb9AnvdbRLTrh8IeVN5VQa2SDO1EaQVwIXTtf0OSPJGdQmLh0T_Ey3_7irxprf0OAwvbBlK8xw3cMj0JQuj58kRcqIdgMlA1ySJ10d7zzuCTz_0tdfKIEd4apjDBuSvXBAHNm3QTYupVC-9o_R4jHHmAf_4ZA11v5iXZF4gWvkcmWJtrOCs5RavRKCQp3k82HZ2F_3obTI4-2oGUtYzv9ii_Md0IZMk3zJEMNVY0cIGHTJAXJce9n2Yepc7rVCqvaAst9g-X4mMcdeQ07z_BL4XRhaKzMl5uG_8YJAQWvTsoOhDrzbiyAyL3Lm9KWuKWFJhMXvQ6ZDvDTumVDt1axMM_Ec-fX_QBmqXZ40FVI91vXwmSD1PH75Dtaiiu7r-0Q5jFrXS-PMUpCqzcZbyjVstR-CsW0-VMNMsbY0qfgq_p1C9W9f-EvdhM-L1hYSFtCeq7afbjRbkNpTdHqauBK92cKIgWmr074fNpyasSeWdA0Yast4tIwt-dIL-XaG5pqClZCGiWoxAgRwdolkBP7okySstYa2GQi0N1qjYQ4ub6zHHZRnQ5pm0edeMT5kamxriA1-4KUucqD5FDNBNd4P_y0sMwtv8ZO2I0Fpw2mBUyWt7-unekWX-8IRUuk6FQX6k\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T00:22:51.863668+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T00:22:51.863733+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T00:22:52.543654+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T00:22:52.543731+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T00:22:52.563343+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T00:22:52.563417+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.563480+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.569319+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.589772+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T00:22:52.589853+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.589918+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.594063+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.601990+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T00:22:52.604474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T00:22:52.614440+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.614740+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.614787+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.615980+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.616270+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.616319+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:22:52.716946+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T00:22:52.717010+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T00:22:52.732702+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[22,23,25,28]] []
[2020-08-20T00:22:52.732793+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[10,1,3,5,6,8]] []
[2020-08-20T00:22:52.782246+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T00:22:52.784566+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-20T00:23:00.788377+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"Article_montrer"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/Article_montrer","method":"GET"} []
[2020-08-20T00:23:00.796070+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T00:23:00.796128+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:00.796197+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:00.800286+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:00.832223+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T00:23:00.845695+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:00.845978+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:00.846026+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:00.904824+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["Article_montrer"] []
[2020-08-20T00:23:09.648821+02:00] request.INFO: Matched route "api_comments_get_collection". {"route":"api_comments_get_collection","route_parameters":{"_route":"api_comments_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments?blocked=api%2Fusers%2F37","method":"GET"} []
[2020-08-20T00:23:09.691248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T00:23:09.691325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:09.691386+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:09.695521+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:09.706182+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T00:23:09.716864+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:09.717157+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:09.717205+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:10.122780+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id IN (SELECT c4_.id FROM comment c4_ LEFT JOIN user u5_ ON c4_.author_id = u5_.id LEFT JOIN article a6_ ON c4_.article_id = a6_.id LEFT JOIN user u7_ ON c4_.blocked_id = u7_.id WHERE c4_.blocked_id = ?) ORDER BY c0_.id ASC LIMIT 30 [37] []
[2020-08-20T00:23:10.229609+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id IN (SELECT c4_.id FROM comment c4_ LEFT JOIN user u5_ ON c4_.author_id = u5_.id LEFT JOIN article a6_ ON c4_.article_id = a6_.id LEFT JOIN user u7_ ON c4_.blocked_id = u7_.id WHERE c4_.blocked_id = ?) [37] []
[2020-08-20T00:23:18.295950+02:00] request.INFO: Matched route "api_comments_delete_item". {"route":"api_comments_delete_item","route_parameters":{"_route":"api_comments_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"delete","id":"51"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/51","method":"DELETE"} []
[2020-08-20T00:23:18.303276+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T00:23:18.303326+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:18.303381+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:18.307357+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:18.338586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T00:23:18.352643+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:18.352912+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:18.352957+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T00:23:18.465088+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [51] []
[2020-08-20T00:23:18.657475+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T00:23:18.658085+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [51] []
[2020-08-20T00:23:18.665967+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T00:23:25.625041+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T00:23:25.656506+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T00:23:25.686227+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T00:23:25.686939+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T00:23:25.998199+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T00:23:26.116263+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T00:23:26.213243+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T00:23:26.225134+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T00:23:26.230752+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T00:23:26.231070+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T00:23:26.581797+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T00:23:26.624381+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T00:23:27.330711+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"afb68b"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/afb68b","method":"GET"} []
[2020-08-20T00:23:27.360682+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T00:23:31.776751+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-20T00:23:31.865637+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T00:23:32.773866+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-08-20T00:23:32.783842+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:23:33.134331+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T00:23:33.148567+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:23:33.178484+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:23:33.190517+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:23:33.202267+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:23:33.549607+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"http://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T00:23:33.562701+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:23:33.597882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:23:33.615630+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:23:33.623456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T00:23:33.624100+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T00:23:33.637243+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:23:34.092175+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4b2554"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/4b2554","method":"GET"} []
[2020-08-20T00:23:46.511672+02:00] request.INFO: Matched route "admin_upload". {"route":"admin_upload","route_parameters":{"_route":"admin_upload","_controller":"App\\Controller\\AdminController::upload"},"request_uri":"http://adminstda.xaviervitali.fr/admin/upload","method":"GET"} []
[2020-08-20T00:23:46.524420+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:23:46.554384+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:23:46.566329+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:23:46.589854+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 [] []
[2020-08-20T00:23:46.867988+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:23:47.308829+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"269bff"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/269bff","method":"GET"} []
[2020-08-20T00:24:03.966554+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T00:24:04.009524+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:24:04.064264+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:24:04.081593+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:24:04.135498+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T00:24:04.178436+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-20T00:24:04.193478+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:24:04.626642+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"21bbe6"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/21bbe6","method":"GET"} []
[2020-08-20T00:24:24.593737+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T00:24:24.606783+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:24:24.637594+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:24:24.649898+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:24:24.672710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T00:24:24.717852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-20T00:24:24.724840+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:24:25.086727+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e458e0"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/e458e0","method":"GET"} []
[2020-08-20T00:24:39.565938+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"http://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T00:24:39.606147+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:24:39.668161+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:24:39.685632+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:24:39.697701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T00:24:39.698387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T00:24:39.724830+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:24:40.200452+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"658a16"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/658a16","method":"GET"} []
[2020-08-20T00:24:43.394728+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T00:24:43.410508+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:24:43.440815+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:24:43.452497+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:24:43.497920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T00:24:43.556995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-20T00:24:43.563631+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:24:43.922964+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a26ca"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/3a26ca","method":"GET"} []
[2020-08-20T00:24:54.260454+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"http://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T00:24:54.274021+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:24:54.306231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:24:54.319891+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:24:54.344957+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T00:24:54.394313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [39] []
[2020-08-20T00:24:54.401908+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:24:57.731485+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"http://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T00:24:57.744724+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:24:57.775643+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:24:57.788500+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:24:57.795310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T00:24:57.795935+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T00:24:57.808343+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:24:58.188880+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"720253"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/720253","method":"GET"} []
[2020-08-20T00:25:03.505969+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"http://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-08-20T00:25:03.519107+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:25:03.549357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:25:03.561401+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:25:03.568490+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-08-20T00:25:03.600978+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [10] []
[2020-08-20T00:25:03.604773+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-20T00:25:03.605490+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [35] []
[2020-08-20T00:25:03.606168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [42] []
[2020-08-20T00:25:03.607090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [8] []
[2020-08-20T00:25:03.608000+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T00:25:03.614958+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:25:03.989570+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69ffad"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/69ffad","method":"GET"} []
[2020-08-20T00:25:05.878681+02:00] request.INFO: Matched route "comment_delete". {"route":"comment_delete","route_parameters":{"_route":"comment_delete","_controller":"App\\Controller\\AdminController::commentDelete","id":"19"},"request_uri":"http://adminstda.xaviervitali.fr/admin/comment/delete/19","method":"GET"} []
[2020-08-20T00:25:05.896980+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:25:05.933962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:25:05.947093+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:25:05.951435+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? ["19"] []
[2020-08-20T00:25:05.985753+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T00:25:05.986317+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [19] []
[2020-08-20T00:25:05.987418+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T00:25:05.997938+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:25:06.323020+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"http://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-08-20T00:25:06.335446+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:25:06.364257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:25:06.375702+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:25:06.382258+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-08-20T00:25:06.413008+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [8] []
[2020-08-20T00:25:06.419794+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-20T00:25:06.420584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T00:25:06.421453+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [10] []
[2020-08-20T00:25:06.428294+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:25:06.784012+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2d588"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/f2d588","method":"GET"} []
[2020-08-20T00:25:07.915348+02:00] request.INFO: Matched route "comment_delete". {"route":"comment_delete","route_parameters":{"_route":"comment_delete","_controller":"App\\Controller\\AdminController::commentDelete","id":"50"},"request_uri":"http://adminstda.xaviervitali.fr/admin/comment/delete/50","method":"GET"} []
[2020-08-20T00:25:07.927641+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:25:07.957991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:25:07.969553+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:25:07.973442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? ["50"] []
[2020-08-20T00:25:07.996996+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T00:25:07.997425+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [50] []
[2020-08-20T00:25:07.998486+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T00:25:08.009093+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:25:08.325318+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"http://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-08-20T00:25:08.337795+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:25:08.367435+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:25:08.379002+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:25:08.385115+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-08-20T00:25:08.412426+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.id = ? [10] []
[2020-08-20T00:25:08.427048+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-20T00:25:08.427695+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T00:25:08.434116+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:25:08.812399+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c9ba55"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/c9ba55","method":"GET"} []
[2020-08-20T00:25:10.648354+02:00] request.INFO: Matched route "comment_delete". {"route":"comment_delete","route_parameters":{"_route":"comment_delete","_controller":"App\\Controller\\AdminController::commentDelete","id":"99"},"request_uri":"http://adminstda.xaviervitali.fr/admin/comment/delete/99","method":"GET"} []
[2020-08-20T00:25:10.737086+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:25:10.836862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:25:10.862151+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:25:10.870164+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? ["99"] []
[2020-08-20T00:25:10.936261+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T00:25:10.936946+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [99] []
[2020-08-20T00:25:10.939324+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T00:25:10.961784+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:25:11.367084+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"http://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-08-20T00:25:11.379976+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:25:11.409738+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:25:11.421508+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:25:11.427706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-08-20T00:25:11.449252+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:25:11.906017+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1fcd84"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/1fcd84","method":"GET"} []
[2020-08-20T00:25:15.391067+02:00] request.INFO: Matched route "admin_upload". {"route":"admin_upload","route_parameters":{"_route":"admin_upload","_controller":"App\\Controller\\AdminController::upload"},"request_uri":"http://adminstda.xaviervitali.fr/admin/upload","method":"GET"} []
[2020-08-20T00:25:15.403841+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T00:25:15.434113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T00:25:15.446164+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T00:25:15.487218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 [] []
[2020-08-20T00:25:15.561045+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T00:25:15.994800+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6b232e"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/6b232e","method":"GET"} []
[2020-08-20T10:28:46.075015+02:00] request.INFO: Matched route "security_logout". {"route":"security_logout","route_parameters":{"_route":"security_logout","_controller":"App\\Controller\\SecurityController::logout"},"request_uri":"https://adminstda.xaviervitali.fr/logout","method":"GET"} []
[2020-08-20T10:28:46.100470+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:28:46.110812+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:28:46.130844+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:28:46.829695+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T10:28:46.842151+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T10:28:46.848789+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T10:28:46.849331+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T10:28:47.137684+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T10:28:47.642674+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T10:28:48.165325+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9a2aad"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/9a2aad","method":"GET"} []
[2020-08-20T10:28:52.286763+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T10:28:52.333230+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T10:28:52.333320+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T10:28:52.333376+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T10:28:52.347470+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T10:28:52.379823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:28:53.277999+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T10:28:53.357269+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 20 Aug 2020 08:28:53 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc5MTIxMzMsImV4cCI6MTU5Nzk1NTMzMywicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzQsImZpcnN0TmFtZSI6IkNocmlzdGVsbGUiLCJsYXN0TmFtZSI6IkJhaWxseSIsImdlbmRlciI6Ik1tZSIsImNoaWxkcmVuIjpbIkNNMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.PiqIWXMCggwEXXJjmq8R-CpMm9G6eowEupy-l1Ut3NWj6nGJPiGycnpGlthQ8L9vGuYYTlhgIIpPul77N1dyzTpDWpKUjmXgS_tEJz7sAW43Z3vQ3PcKWOLvWYMBUNonmZs2nDTI-qs6oLoWC788kUpCyW_dgxLoqMKui9cdeOISL_LFaYdC48TMvfbltdN0Ao0BIlBb_bUfasTwRjr5mrVlrbsQmVEPX5SIIlwmaQjqwGA_KmyGypyp13YEOVipVCkJYzIAfALp8PyrIMePL2iHPEcuN3kO5a7KYKeBDc9haX6cUHCOn46OfJFI-YxbwvdWHcmSJDZJnsZ4OzM7ObeAKK6ULlcVOM1KA7Nl6kyuJykkm36nV7TSvyaShuWZfF-zjDDPz8ysZM2JwGd6GZZgmwPsaL1j80UypWW8OIYs8fnjY3Vie_149eCt6LsSOAnN6tBYDddElg26MXXcO6CiI54PY1RlksD77hBOJ3CY_zdEGLmHsq1YBp8PytdolEbtqzTf8ackqhHj0njEfzM-K8__WERGJoc0Kl0j0Ua6FtZWOL5GxvJOHVabRB3qc2WDhwZK_jT96H9vaS8jzto2ITHUhqNnJeQu7kiN_7omLtBdzto67mvQUd1_bO_eUJYcifeRQy5eukWjXv0Dgngn9u6bQ8eAiDYzgJus4go\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T10:28:53.357378+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T10:28:53.357419+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T10:28:53.727359+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T10:28:53.758634+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T10:28:53.843259+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:28:53.843262+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:28:53.843372+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.843372+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.843478+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.843478+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.870226+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.870235+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.885107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:28:53.898230+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.898552+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.898601+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.907949+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:28:53.924741+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.925087+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:53.925136+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:54.200391+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T10:28:54.200536+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T10:28:54.205620+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,25,26]] []
[2020-08-20T10:28:54.205803+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[18,16,17,1,10,2,3,4,5,6,7,8,9]] []
[2020-08-20T10:28:54.307359+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T10:28:54.434183+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-20T10:28:56.524227+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"Un_nouvel_article"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/Un_nouvel_article","method":"GET"} []
[2020-08-20T10:28:56.532475+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:28:56.532536+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:56.532618+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:56.536830+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:56.575364+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:28:56.592051+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:56.592357+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:56.592404+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:28:56.699229+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T10:29:22.309558+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T10:29:22.309511+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T10:29:22.334316+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:29:22.334395+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.334462+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.339776+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.410575+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:29:22.410654+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.410716+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.410888+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:29:22.414934+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.425481+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:29:22.428494+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.429263+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.429319+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.435540+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.435851+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.435899+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:22.586854+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T10:29:22.589665+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,25,26]] []
[2020-08-20T10:29:22.608042+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T10:29:22.612288+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[18,16,17,1,10,2,3,4,5,6,7,8,9]] []
[2020-08-20T10:29:22.682930+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T10:29:22.753677+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-20T10:29:25.239836+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"Un_nouvel_article"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/Un_nouvel_article","method":"GET"} []
[2020-08-20T10:29:25.248772+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:29:25.248838+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:25.248897+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:25.257381+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:25.291327+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:29:25.306582+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:25.307052+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:25.307100+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:25.395840+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T10:29:33.927961+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"A_celle_qui_est_trop_gaie_2020"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/A_celle_qui_est_trop_gaie_2020","method":"GET"} []
[2020-08-20T10:29:33.936006+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:29:33.936065+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:33.936123+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:33.940207+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:33.972485+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:29:33.988375+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:33.988684+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:33.988733+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:29:34.019165+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["A_celle_qui_est_trop_gaie_2020"] []
[2020-08-20T10:31:57.394364+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-20T10:31:57.538386+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T10:31:58.472591+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-08-20T10:31:58.528343+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:32:00.348391+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"https://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T10:32:00.361619+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:32:00.393130+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:32:00.405412+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:32:00.439548+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:32:00.713863+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T10:32:00.727437+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:32:00.757901+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:32:00.769842+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:32:00.809735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T10:32:00.810536+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T10:32:01.050595+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:32:01.633351+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5299ae"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/5299ae","method":"GET"} []
[2020-08-20T10:33:34.607749+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"Un_nouvel_article"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/Un_nouvel_article","method":"GET"} []
[2020-08-20T10:33:34.662456+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:33:34.662538+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:33:34.662602+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:33:34.697389+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:33:34.815352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:33:34.836151+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:33:34.836995+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:33:34.837061+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:33:34.927982+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T10:37:16.037926+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"Un_nouvel_article"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/Un_nouvel_article","method":"GET"} []
[2020-08-20T10:37:16.060465+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:37:16.060519+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:16.060596+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:16.070917+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:16.135063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:37:16.155450+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:16.156292+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:16.156340+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:16.252463+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T10:37:26.250679+02:00] request.INFO: Matched route "api_comments_post_collection". {"route":"api_comments_post_collection","route_parameters":{"_route":"api_comments_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments","method":"POST"} []
[2020-08-20T10:37:26.258152+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:37:26.258203+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:26.258258+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:26.262257+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:26.293445+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:37:26.307326+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:26.307601+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:26.307652+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:26.504186+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [34] []
[2020-08-20T10:37:26.509583+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, a0_.category_id AS category_id_6, a0_.author_id AS author_id_7 FROM article a0_ WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T10:37:26.758730+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:37:26.769402+02:00] doctrine.DEBUG: INSERT INTO comment (content, created_at, author_id, article_id, blocked_id) VALUES (?, ?, ?, ?, ?) {"1":"test","2":"2020-08-20T10:37:26+02:00","3":34,"4":18,"5":null} []
[2020-08-20T10:37:26.771292+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T10:37:26.773525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [116] []
[2020-08-20T10:37:29.499327+02:00] request.INFO: Matched route "api_comments_post_collection". {"route":"api_comments_post_collection","route_parameters":{"_route":"api_comments_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments","method":"POST"} []
[2020-08-20T10:37:29.506835+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:37:29.506886+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:29.506941+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:29.510996+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:29.542944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:37:29.556837+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:29.557129+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:29.557177+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:29.588953+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [34] []
[2020-08-20T10:37:29.593393+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, a0_.category_id AS category_id_6, a0_.author_id AS author_id_7 FROM article a0_ WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T10:37:29.651820+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:37:29.653085+02:00] doctrine.DEBUG: INSERT INTO comment (content, created_at, author_id, article_id, blocked_id) VALUES (?, ?, ?, ?, ?) {"1":"test","2":"2020-08-20T10:37:29+02:00","3":34,"4":18,"5":null} []
[2020-08-20T10:37:29.654038+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T10:37:29.655808+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [117] []
[2020-08-20T10:37:34.443323+02:00] request.INFO: Matched route "api_comments_delete_item". {"route":"api_comments_delete_item","route_parameters":{"_route":"api_comments_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"delete","id":"117"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/117","method":"DELETE"} []
[2020-08-20T10:37:34.451069+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:37:34.451135+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:34.451196+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:34.455332+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:34.488251+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:37:34.502305+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:34.502601+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:34.502650+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:34.639532+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [117] []
[2020-08-20T10:37:34.655514+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:37:34.656012+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [117] []
[2020-08-20T10:37:34.656901+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T10:37:55.578393+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T10:37:55.578436+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T10:37:55.602933+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:37:55.603008+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.603073+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.612616+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.651227+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T10:37:55.651304+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.651365+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.655556+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.677864+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:37:55.677908+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T10:37:55.691028+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.691876+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.691925+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.693384+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.693677+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.693729+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T10:37:55.784720+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T10:37:55.784727+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T10:37:55.800302+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,25,26]] []
[2020-08-20T10:37:55.800347+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[18,16,17,1,10,2,3,4,5,6,7,8,9]] []
[2020-08-20T10:37:55.830793+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T10:37:55.890309+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-20T10:38:07.235537+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:38:07.251716+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:38:07.282350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:38:07.294103+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:38:07.299746+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:38:07.323686+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:38:07.325444+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:38:07.349676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:38:07.350624+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:38:07.357117+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:38:07.357537+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:38:07.358368+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:38:07.359072+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:38:07.359781+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:38:07.360511+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:38:07.361129+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:38:07.361685+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:38:07.362344+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:38:07.363319+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:38:07.364191+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:38:07.364898+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:38:07.365597+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:38:07.366317+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:38:07.367004+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:38:07.367668+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:38:07.368409+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:38:07.369048+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:38:07.369742+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:38:07.370489+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:38:07.371114+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:38:07.371744+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:38:07.372386+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:38:07.373019+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:38:07.373673+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:38:07.374295+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:38:07.374842+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:38:07.375384+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:38:07.375934+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:38:07.376449+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:38:07.377012+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:38:07.377555+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:38:07.378131+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:38:07.378719+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:38:07.379230+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:38:07.379792+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:38:07.380281+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:38:07.380703+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:38:07.381154+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:38:07.381645+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:38:07.382054+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:38:07.382537+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:38:07.383021+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:38:07.383502+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:38:07.383911+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:38:07.384417+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:38:07.385014+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:38:07.385499+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:38:07.386031+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:38:07.386534+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:38:07.387047+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:38:07.387600+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:38:07.388019+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:38:07.388529+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:38:07.389099+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:38:07.389651+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:38:07.390223+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:38:07.390729+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:38:07.391303+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:38:07.391841+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:38:07.392290+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:38:07.392786+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:38:07.393362+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:38:07.393881+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:38:07.394299+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:38:07.394747+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:38:07.395241+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:38:07.450928+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:38:07.460111+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:38:07.743776+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:38:08.642163+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"042752"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/042752","method":"GET"} []
[2020-08-20T10:43:02.731804+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:43:02.747936+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:43:02.759244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:43:02.764918+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:43:02.770859+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:43:02.777321+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:43:02.778781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:43:02.799089+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:43:02.800042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:43:02.805360+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:43:02.805787+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:43:02.806537+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:43:02.807053+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:43:02.807521+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:43:02.807978+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:43:02.808493+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:43:02.809117+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:43:02.809683+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:43:02.810439+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:43:02.811020+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:43:02.811703+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:43:02.812541+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:43:02.813200+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:43:02.813757+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:43:02.814522+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:43:02.815099+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:43:02.815603+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:43:02.816210+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:43:02.816739+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:43:02.817267+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:43:02.817944+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:43:02.818610+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:43:02.819201+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:43:02.819704+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:43:02.820437+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:43:02.821183+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:43:02.821853+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:43:02.822473+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:43:02.823040+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:43:02.823466+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:43:02.823904+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:43:02.824318+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:43:02.824701+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:43:02.825147+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:43:02.825758+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:43:02.826250+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:43:02.826696+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:43:02.827125+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:43:02.827605+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:43:02.828046+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:43:02.828551+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:43:02.829187+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:43:02.829684+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:43:02.830170+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:43:02.830600+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:43:02.831097+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:43:02.831554+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:43:02.832080+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:43:02.832519+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:43:02.833121+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:43:02.833553+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:43:02.834036+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:43:02.834567+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:43:02.835127+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:43:02.835689+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:43:02.836308+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:43:02.836838+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:43:02.837342+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:43:02.837862+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:43:02.838407+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:43:02.838925+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:43:02.839350+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:43:02.839843+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:43:02.840369+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:43:02.840797+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:43:02.841370+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:43:02.845739+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:43:02.858250+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:43:03.113215+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:43:03.961163+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"57ee51"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/57ee51","method":"GET"} []
[2020-08-20T10:44:45.256047+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:44:45.269591+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:44:45.277476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:44:45.285037+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:44:45.290793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:44:45.297178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:44:45.298610+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:44:45.325924+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:44:45.326857+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:44:45.328813+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:44:45.337720+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:44:45.338317+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:44:45.339188+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:44:45.339813+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:44:45.340466+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:44:45.341202+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:44:45.342058+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:44:45.342683+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:44:45.343463+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:44:45.344218+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:44:45.344841+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:44:45.345537+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:44:45.346931+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:44:45.347704+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:44:45.348258+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:44:45.349002+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:44:45.349541+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:44:45.350077+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:44:45.350628+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:44:45.351294+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:44:45.351836+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:44:45.352444+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:44:45.352998+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:44:45.353482+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:44:45.354093+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:44:45.354756+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:44:45.355312+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:44:45.355816+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:44:45.356364+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:44:45.356931+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:44:45.357450+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:44:45.357958+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:44:45.358459+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:44:45.359041+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:44:45.359546+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:44:45.360072+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:44:45.360638+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:44:45.361145+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:44:45.361652+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:44:45.362243+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:44:45.362799+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:44:45.363265+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:44:45.363859+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:44:45.364383+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:44:45.364873+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:44:45.365499+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:44:45.366026+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:44:45.366568+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:44:45.367083+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:44:45.367592+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:44:45.368129+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:44:45.368673+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:44:45.369196+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:44:45.369618+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:44:45.370015+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:44:45.370407+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:44:45.370811+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:44:45.371227+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:44:45.371618+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:44:45.372049+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:44:45.372493+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:44:45.372880+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:44:45.373364+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:44:45.373831+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:44:45.374342+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:44:45.374949+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:44:45.375462+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:44:45.376146+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:44:45.376762+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:44:45.393927+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:44:45.415861+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:44:45.653650+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:44:46.470475+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9eade9"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/9eade9","method":"GET"} []
[2020-08-20T10:45:15.395987+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:45:15.495859+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:45:15.560290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:45:15.578220+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:45:15.585218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:45:15.592868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:45:15.594334+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:45:15.653898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:45:15.654893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:45:15.656284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:45:15.695681+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:45:15.696243+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:45:15.697074+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:45:15.697653+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:45:15.698235+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:45:15.698778+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:45:15.699310+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:45:15.699798+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:45:15.700292+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:45:15.700808+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:45:15.701365+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:45:15.701856+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:45:15.702351+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:45:15.702831+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:45:15.703346+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:45:15.703800+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:45:15.704920+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:45:15.705504+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:45:15.706082+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:45:15.706626+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:45:15.707130+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:45:15.707648+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:45:15.708167+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:45:15.708769+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:45:15.709413+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:45:15.709995+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:45:15.710596+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:45:15.711133+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:45:15.711620+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:45:15.712080+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:45:15.712486+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:45:15.712846+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:45:15.713275+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:45:15.713730+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:45:15.714171+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:45:15.714707+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:45:15.715109+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:45:15.715533+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:45:15.715944+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:45:15.716352+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:45:15.716845+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:45:15.717251+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:45:15.717648+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:45:15.718037+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:45:15.718501+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:45:15.718931+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:45:15.719322+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:45:15.719711+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:45:15.720071+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:45:15.720437+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:45:15.720814+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:45:15.721215+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:45:15.721593+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:45:15.721953+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:45:15.722327+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:45:15.722671+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:45:15.723043+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:45:15.723423+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:45:15.723836+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:45:15.724264+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:45:15.724643+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:45:15.725078+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:45:15.725508+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:45:15.725908+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:45:15.726302+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:45:15.726698+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:45:15.727135+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:45:15.727566+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:45:15.727979+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:45:15.734226+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:45:15.751539+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:45:15.966977+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:45:16.819568+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2d0ed9"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/2d0ed9","method":"GET"} []
[2020-08-20T10:45:21.780789+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:45:21.794122+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:45:21.826768+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:45:21.838898+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:45:21.842767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:45:21.846874+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:45:21.848171+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:45:21.879687+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:45:21.880393+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:45:21.881572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:45:21.892195+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:45:21.892548+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:45:21.893124+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:45:21.893548+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:45:21.893999+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:45:21.894546+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:45:21.894981+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:45:21.895413+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:45:21.895830+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:45:21.896301+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:45:21.896743+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:45:21.897121+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:45:21.897502+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:45:21.897848+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:45:21.898240+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:45:21.898661+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:45:21.899028+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:45:21.899376+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:45:21.899721+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:45:21.900115+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:45:21.900491+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:45:21.900841+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:45:21.901187+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:45:21.901577+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:45:21.901952+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:45:21.902367+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:45:21.902833+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:45:21.903227+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:45:21.903582+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:45:21.903965+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:45:21.904385+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:45:21.904767+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:45:21.905127+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:45:21.905517+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:45:21.905906+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:45:21.906341+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:45:21.906702+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:45:21.907065+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:45:21.907451+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:45:21.907835+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:45:21.908346+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:45:21.908759+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:45:21.909259+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:45:21.909746+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:45:21.910194+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:45:21.910615+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:45:21.911078+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:45:21.911484+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:45:21.911931+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:45:21.912374+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:45:21.912805+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:45:21.913300+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:45:21.913700+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:45:21.914172+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:45:21.914546+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:45:21.914937+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:45:21.915317+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:45:21.915695+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:45:21.916120+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:45:21.916557+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:45:21.916971+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:45:21.917330+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:45:21.917677+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:45:21.918039+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:45:21.918403+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:45:21.918744+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:45:21.919107+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:45:21.919493+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:45:21.919900+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:45:21.921791+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:45:21.930316+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:45:22.123810+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:45:22.950945+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"071b31"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/071b31","method":"GET"} []
[2020-08-20T10:46:52.583754+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:46:52.615272+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:46:52.668604+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:46:52.686250+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:46:52.693165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:46:52.700380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:46:52.701682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:46:52.757001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:46:52.757906+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:46:52.759446+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:46:52.767441+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:46:52.767912+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:46:52.768691+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:46:52.769202+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:46:52.769681+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:46:52.770132+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:46:52.770520+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:46:52.770960+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:46:52.771356+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:46:52.771737+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:46:52.772117+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:46:52.772504+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:46:52.772872+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:46:52.773635+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:46:52.774014+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:46:52.774392+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:46:52.774731+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:46:52.775139+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:46:52.775727+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:46:52.776102+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:46:52.776431+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:46:52.776819+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:46:52.777339+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:46:52.777869+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:46:52.778333+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:46:52.778682+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:46:52.779045+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:46:52.779532+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:46:52.780044+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:46:52.780413+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:46:52.780766+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:46:52.781099+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:46:52.781482+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:46:52.781937+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:46:52.782339+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:46:52.782725+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:46:52.783252+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:46:52.783799+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:46:52.784226+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:46:52.784620+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:46:52.784955+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:46:52.785359+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:46:52.785851+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:46:52.786363+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:46:52.786728+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:46:52.787082+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:46:52.787440+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:46:52.787793+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:46:52.788109+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:46:52.788466+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:46:52.788827+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:46:52.789234+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:46:52.789716+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:46:52.790203+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:46:52.790687+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:46:52.791109+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:46:52.791503+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:46:52.791938+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:46:52.792387+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:46:52.792830+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:46:52.793320+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:46:52.793831+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:46:52.794364+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:46:52.794863+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:46:52.795382+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:46:52.795891+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:46:52.796369+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:46:52.796833+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:46:52.797248+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:46:52.804598+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:46:52.824828+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:46:53.045441+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:46:53.767820+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d4387"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/3d4387","method":"GET"} []
[2020-08-20T10:46:55.917119+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "https://adminstda.xaviervitali.fr/admin")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"https://adminstda.xaviervitali.fr/admin\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T10:46:57.867466+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T10:46:57.881521+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:46:57.913319+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:46:57.931752+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:46:57.964630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T10:46:57.971935+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T10:46:58.079265+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:46:58.587794+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"527e12"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/527e12","method":"GET"} []
[2020-08-20T10:47:01.028756+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:47:01.041439+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:47:01.070709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:47:01.082125+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:47:01.085680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:47:01.089356+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:47:01.090676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:47:01.121387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:47:01.122201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:47:01.123595+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:47:01.130620+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:47:01.131012+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:47:01.131682+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:47:01.132238+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:47:01.132811+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:47:01.133411+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:47:01.134075+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:47:01.134692+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:47:01.135231+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:47:01.135773+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:47:01.136199+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:47:01.136688+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:47:01.137250+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:47:01.137737+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:47:01.138239+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:47:01.138901+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:47:01.139399+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:47:01.139892+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:47:01.140423+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:47:01.140899+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:47:01.141631+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:47:01.142325+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:47:01.143007+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:47:01.143596+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:47:01.144185+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:47:01.144817+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:47:01.145315+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:47:01.146033+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:47:01.146602+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:47:01.147097+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:47:01.147584+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:47:01.148618+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:47:01.149025+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:47:01.149477+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:47:01.149973+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:47:01.150405+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:47:01.150803+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:47:01.151278+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:47:01.151670+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:47:01.152057+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:47:01.152407+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:47:01.152805+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:47:01.153213+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:47:01.154007+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:47:01.154559+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:47:01.155053+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:47:01.155685+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:47:01.156105+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:47:01.156547+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:47:01.157085+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:47:01.157473+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:47:01.157969+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:47:01.158469+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:47:01.158914+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:47:01.159324+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:47:01.159712+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:47:01.160137+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:47:01.160528+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:47:01.160986+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:47:01.161391+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:47:01.161884+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:47:01.162212+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:47:01.162568+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:47:01.162902+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:47:01.163264+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:47:01.163620+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:47:01.163971+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:47:01.164454+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:47:01.164843+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:47:01.166571+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:47:01.173952+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:47:01.350960+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:47:02.444712+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dd0959"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/dd0959","method":"GET"} []
[2020-08-20T10:47:34.033119+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:47:34.059805+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:47:34.068142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:47:34.073755+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:47:34.079450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:47:34.086553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:47:34.088080+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:47:34.127968+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:47:34.129067+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:47:34.130376+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:47:34.137572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T10:47:34.138488+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:47:34.139549+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:47:34.141315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [36] []
[2020-08-20T10:47:34.142159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [36] []
[2020-08-20T10:47:34.143518+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [36] []
[2020-08-20T10:47:34.145703+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:47:34.146265+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:47:34.147099+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:47:34.147845+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:47:34.148614+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:47:34.149338+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:47:34.150002+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:47:34.150733+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:47:34.151488+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:47:34.152135+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:47:34.152727+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:47:34.153238+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:47:34.153802+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:47:34.154373+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:47:34.154958+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:47:34.155544+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:47:34.155993+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:47:34.156417+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:47:34.156833+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:47:34.157312+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:47:34.157948+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:47:34.158597+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:47:34.159238+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:47:34.159798+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:47:34.160234+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:47:34.160654+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:47:34.161077+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:47:34.161473+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:47:34.161939+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:47:34.162319+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:47:34.162752+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:47:34.163135+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:47:34.163529+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:47:34.164022+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:47:34.164540+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [5] []
[2020-08-20T10:47:34.165064+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [6] []
[2020-08-20T10:47:34.165465+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [14] []
[2020-08-20T10:47:34.165859+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [18] []
[2020-08-20T10:47:34.166299+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [20] []
[2020-08-20T10:47:34.166680+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [23] []
[2020-08-20T10:47:34.167061+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [27] []
[2020-08-20T10:47:34.167432+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [37] []
[2020-08-20T10:47:34.167804+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [40] []
[2020-08-20T10:47:34.168274+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [44] []
[2020-08-20T10:47:34.168643+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [47] []
[2020-08-20T10:47:34.169018+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [49] []
[2020-08-20T10:47:34.169409+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [62] []
[2020-08-20T10:47:34.169936+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [64] []
[2020-08-20T10:47:34.170358+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [69] []
[2020-08-20T10:47:34.170906+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [73] []
[2020-08-20T10:47:34.171459+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [79] []
[2020-08-20T10:47:34.171884+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [86] []
[2020-08-20T10:47:34.172302+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [87] []
[2020-08-20T10:47:34.172719+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [90] []
[2020-08-20T10:47:34.173139+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [95] []
[2020-08-20T10:47:34.173538+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [96] []
[2020-08-20T10:47:34.174027+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [98] []
[2020-08-20T10:47:34.174695+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [100] []
[2020-08-20T10:47:34.175297+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:47:34.176047+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:47:34.176685+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:47:34.177278+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:47:34.177851+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:47:34.178475+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:47:34.178978+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:47:34.179558+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:47:34.180101+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:47:34.180592+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:47:34.181015+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:47:34.181478+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:47:34.182546+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:47:34.183054+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:47:34.183488+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:47:34.183881+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:47:34.184496+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:47:34.184894+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:47:34.185315+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:47:34.185844+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:47:34.186312+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:47:34.186746+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:47:34.187301+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:47:34.187743+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:47:34.188332+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:47:34.188884+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:47:34.189431+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:47:34.190132+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:47:34.190745+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:47:34.191353+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:47:34.191945+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:47:34.192555+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:47:34.193149+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [1] []
[2020-08-20T10:47:34.193697+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [3] []
[2020-08-20T10:47:34.194240+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [4] []
[2020-08-20T10:47:34.194800+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [10] []
[2020-08-20T10:47:34.195301+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [11] []
[2020-08-20T10:47:34.195841+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [18] []
[2020-08-20T10:47:34.196329+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [20] []
[2020-08-20T10:47:34.196757+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [24] []
[2020-08-20T10:47:34.197282+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [25] []
[2020-08-20T10:47:34.197889+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [31] []
[2020-08-20T10:47:34.198612+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [33] []
[2020-08-20T10:47:34.199340+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [34] []
[2020-08-20T10:47:34.199964+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [35] []
[2020-08-20T10:47:34.200693+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [38] []
[2020-08-20T10:47:34.201317+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [39] []
[2020-08-20T10:47:34.201954+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [45] []
[2020-08-20T10:47:34.202455+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [48] []
[2020-08-20T10:47:34.202968+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [53] []
[2020-08-20T10:47:34.203571+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [56] []
[2020-08-20T10:47:34.204228+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [58] []
[2020-08-20T10:47:34.204812+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [59] []
[2020-08-20T10:47:34.205361+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [63] []
[2020-08-20T10:47:34.205897+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [69] []
[2020-08-20T10:47:34.206438+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [75] []
[2020-08-20T10:47:34.207041+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [77] []
[2020-08-20T10:47:34.207662+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [79] []
[2020-08-20T10:47:34.208234+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [80] []
[2020-08-20T10:47:34.208791+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [87] []
[2020-08-20T10:47:34.209372+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [90] []
[2020-08-20T10:47:34.209881+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [91] []
[2020-08-20T10:47:34.210312+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [93] []
[2020-08-20T10:47:34.210719+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [96] []
[2020-08-20T10:47:34.211159+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [97] []
[2020-08-20T10:47:34.211598+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [99] []
[2020-08-20T10:47:34.212019+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [2] []
[2020-08-20T10:47:34.212521+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [4] []
[2020-08-20T10:47:34.213165+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:47:34.213931+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:47:34.214423+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [36] []
[2020-08-20T10:47:34.221726+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:47:34.233135+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:47:34.487931+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:47:35.454299+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a70b06"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/a70b06","method":"GET"} []
[2020-08-20T10:48:06.013972+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:48:06.064865+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:48:06.119237+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:48:06.137520+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:48:06.144767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:48:06.152353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:48:06.153844+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:48:06.205849+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:48:06.206858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:48:06.208418+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:48:06.216290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T10:48:06.216972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:48:06.217520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:48:06.219320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [36] []
[2020-08-20T10:48:06.220025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [36] []
[2020-08-20T10:48:06.221353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [36] []
[2020-08-20T10:48:06.223427+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:48:06.223836+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:48:06.224543+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:48:06.225028+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:48:06.225585+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:48:06.226196+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:48:06.226828+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:48:06.227511+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:48:06.228164+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:48:06.228805+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:48:06.229601+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:48:06.230286+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:48:06.230943+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:48:06.231509+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:48:06.232194+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:48:06.232840+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:48:06.233603+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:48:06.234352+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:48:06.235057+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:48:06.235772+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:48:06.236594+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:48:06.237567+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:48:06.238456+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:48:06.239053+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:48:06.239609+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:48:06.240517+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:48:06.241102+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:48:06.241686+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:48:06.242252+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:48:06.242841+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:48:06.243336+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:48:06.243798+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:48:06.244232+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:48:06.244634+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:48:06.245162+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [5] []
[2020-08-20T10:48:06.245566+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [6] []
[2020-08-20T10:48:06.246027+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [14] []
[2020-08-20T10:48:06.246561+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [18] []
[2020-08-20T10:48:06.247047+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [20] []
[2020-08-20T10:48:06.247564+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [23] []
[2020-08-20T10:48:06.248089+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [27] []
[2020-08-20T10:48:06.248616+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [37] []
[2020-08-20T10:48:06.249035+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [40] []
[2020-08-20T10:48:06.249549+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [44] []
[2020-08-20T10:48:06.250124+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [47] []
[2020-08-20T10:48:06.250632+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [49] []
[2020-08-20T10:48:06.251024+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [62] []
[2020-08-20T10:48:06.251406+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [64] []
[2020-08-20T10:48:06.251774+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [69] []
[2020-08-20T10:48:06.252151+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [73] []
[2020-08-20T10:48:06.252555+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [79] []
[2020-08-20T10:48:06.253072+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [86] []
[2020-08-20T10:48:06.253446+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [87] []
[2020-08-20T10:48:06.253876+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [90] []
[2020-08-20T10:48:06.254398+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [95] []
[2020-08-20T10:48:06.254815+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [96] []
[2020-08-20T10:48:06.255219+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [98] []
[2020-08-20T10:48:06.255811+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [100] []
[2020-08-20T10:48:06.256337+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:48:06.256951+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:48:06.257447+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:48:06.258008+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:48:06.258515+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:48:06.259048+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:48:06.259431+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:48:06.259824+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:48:06.260229+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:48:06.260606+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:48:06.261122+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:48:06.261700+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:48:06.262164+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:48:06.262571+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:48:06.263013+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:48:06.263558+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:48:06.264190+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:48:06.264592+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:48:06.265059+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:48:06.265550+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:48:06.266079+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:48:06.266479+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:48:06.266980+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:48:06.267504+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:48:06.267975+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:48:06.268373+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:48:06.268737+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:48:06.269185+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:48:06.269720+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:48:06.270277+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:48:06.270769+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:48:06.271242+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:48:06.271691+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [1] []
[2020-08-20T10:48:06.272237+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [3] []
[2020-08-20T10:48:06.272670+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [4] []
[2020-08-20T10:48:06.273118+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [10] []
[2020-08-20T10:48:06.273739+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [11] []
[2020-08-20T10:48:06.274254+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [18] []
[2020-08-20T10:48:06.274662+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [20] []
[2020-08-20T10:48:06.275152+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [24] []
[2020-08-20T10:48:06.275622+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [25] []
[2020-08-20T10:48:06.276168+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [31] []
[2020-08-20T10:48:06.276675+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [33] []
[2020-08-20T10:48:06.277200+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [34] []
[2020-08-20T10:48:06.277761+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [35] []
[2020-08-20T10:48:06.278255+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [38] []
[2020-08-20T10:48:06.278667+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [39] []
[2020-08-20T10:48:06.279151+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [45] []
[2020-08-20T10:48:06.279751+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [48] []
[2020-08-20T10:48:06.280326+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [53] []
[2020-08-20T10:48:06.280859+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [56] []
[2020-08-20T10:48:06.281438+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [58] []
[2020-08-20T10:48:06.282030+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [59] []
[2020-08-20T10:48:06.282630+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [63] []
[2020-08-20T10:48:06.283203+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [69] []
[2020-08-20T10:48:06.283669+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [75] []
[2020-08-20T10:48:06.284263+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [77] []
[2020-08-20T10:48:06.285010+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [79] []
[2020-08-20T10:48:06.285563+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [80] []
[2020-08-20T10:48:06.286055+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [87] []
[2020-08-20T10:48:06.286634+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [90] []
[2020-08-20T10:48:06.287185+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [91] []
[2020-08-20T10:48:06.287856+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [93] []
[2020-08-20T10:48:06.288278+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [96] []
[2020-08-20T10:48:06.288699+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [97] []
[2020-08-20T10:48:06.289248+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [99] []
[2020-08-20T10:48:06.289788+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [2] []
[2020-08-20T10:48:06.290312+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [4] []
[2020-08-20T10:48:06.290823+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:48:06.291499+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:48:06.292056+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [36] []
[2020-08-20T10:48:06.297407+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:48:06.321161+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:48:06.522408+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:48:07.457320+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5d8af"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/f5d8af","method":"GET"} []
[2020-08-20T10:48:09.440202+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:48:09.452853+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:48:09.482238+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:48:09.493849+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:48:09.497483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:48:09.501346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:48:09.502733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:48:09.508809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:48:09.509607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:48:09.511080+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:48:09.517109+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T10:48:09.517868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:48:09.518509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:48:09.520059+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [36] []
[2020-08-20T10:48:09.520926+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [36] []
[2020-08-20T10:48:09.522300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [36] []
[2020-08-20T10:48:09.524009+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:48:09.524488+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:48:09.525162+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:48:09.525915+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:48:09.526573+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:48:09.527337+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:48:09.527832+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:48:09.528398+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:48:09.529140+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:48:09.529785+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:48:09.530630+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:48:09.531370+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:48:09.532182+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:48:09.532794+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:48:09.533642+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:48:09.534422+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:48:09.535088+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:48:09.535698+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:48:09.536391+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:48:09.537063+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:48:09.537732+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:48:09.538379+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:48:09.539121+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:48:09.539708+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:48:09.540306+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:48:09.540735+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:48:09.541331+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:48:09.541939+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:48:09.542548+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:48:09.543288+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:48:09.543824+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:48:09.544433+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:48:09.545126+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:48:09.545661+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:48:09.546165+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [5] []
[2020-08-20T10:48:09.546696+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [6] []
[2020-08-20T10:48:09.547218+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [14] []
[2020-08-20T10:48:09.547675+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [18] []
[2020-08-20T10:48:09.548131+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [20] []
[2020-08-20T10:48:09.548524+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [23] []
[2020-08-20T10:48:09.549029+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [27] []
[2020-08-20T10:48:09.549528+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [37] []
[2020-08-20T10:48:09.550046+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [40] []
[2020-08-20T10:48:09.550552+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [44] []
[2020-08-20T10:48:09.551065+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [47] []
[2020-08-20T10:48:09.551555+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [49] []
[2020-08-20T10:48:09.552050+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [62] []
[2020-08-20T10:48:09.552554+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [64] []
[2020-08-20T10:48:09.553179+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [69] []
[2020-08-20T10:48:09.553703+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [73] []
[2020-08-20T10:48:09.554336+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [79] []
[2020-08-20T10:48:09.554847+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [86] []
[2020-08-20T10:48:09.555356+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [87] []
[2020-08-20T10:48:09.555887+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [90] []
[2020-08-20T10:48:09.556417+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [95] []
[2020-08-20T10:48:09.556868+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [96] []
[2020-08-20T10:48:09.557469+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [98] []
[2020-08-20T10:48:09.557967+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [100] []
[2020-08-20T10:48:09.558462+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:48:09.559046+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:48:09.559608+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:48:09.560181+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:48:09.560705+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:48:09.561478+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:48:09.562099+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:48:09.562725+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:48:09.563447+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:48:09.564084+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:48:09.564695+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:48:09.565256+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:48:09.565808+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:48:09.566477+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:48:09.567002+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:48:09.567615+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:48:09.568128+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:48:09.568694+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:48:09.569387+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:48:09.569982+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:48:09.570584+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:48:09.571143+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:48:09.571805+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:48:09.572454+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:48:09.573123+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:48:09.573791+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:48:09.574508+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:48:09.575188+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:48:09.575769+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:48:09.576383+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:48:09.576988+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:48:09.577638+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:48:09.578350+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [1] []
[2020-08-20T10:48:09.578969+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [3] []
[2020-08-20T10:48:09.579550+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [4] []
[2020-08-20T10:48:09.580290+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [10] []
[2020-08-20T10:48:09.581192+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [11] []
[2020-08-20T10:48:09.581913+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [18] []
[2020-08-20T10:48:09.582621+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [20] []
[2020-08-20T10:48:09.583471+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [24] []
[2020-08-20T10:48:09.584178+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [25] []
[2020-08-20T10:48:09.584748+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [31] []
[2020-08-20T10:48:09.585424+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [33] []
[2020-08-20T10:48:09.586168+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [34] []
[2020-08-20T10:48:09.586845+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [35] []
[2020-08-20T10:48:09.587519+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [38] []
[2020-08-20T10:48:09.588404+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [39] []
[2020-08-20T10:48:09.589062+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [45] []
[2020-08-20T10:48:09.589756+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [48] []
[2020-08-20T10:48:09.590412+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [53] []
[2020-08-20T10:48:09.590956+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [56] []
[2020-08-20T10:48:09.591580+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [58] []
[2020-08-20T10:48:09.592222+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [59] []
[2020-08-20T10:48:09.592720+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [63] []
[2020-08-20T10:48:09.593367+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [69] []
[2020-08-20T10:48:09.593984+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [75] []
[2020-08-20T10:48:09.594802+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [77] []
[2020-08-20T10:48:09.595520+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [79] []
[2020-08-20T10:48:09.596220+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [80] []
[2020-08-20T10:48:09.596763+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [87] []
[2020-08-20T10:48:09.597427+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [90] []
[2020-08-20T10:48:09.598001+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [91] []
[2020-08-20T10:48:09.598619+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [93] []
[2020-08-20T10:48:09.599321+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [96] []
[2020-08-20T10:48:09.599949+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [97] []
[2020-08-20T10:48:09.600689+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [99] []
[2020-08-20T10:48:09.601461+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [2] []
[2020-08-20T10:48:09.602331+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [4] []
[2020-08-20T10:48:09.603097+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:48:09.603897+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:48:09.604639+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [36] []
[2020-08-20T10:48:09.606909+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:48:09.616148+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:48:09.795916+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:48:10.665103+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48fb9a"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/48fb9a","method":"GET"} []
[2020-08-20T10:48:29.384230+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:48:29.397604+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:48:29.429203+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:48:29.441379+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:48:29.445130+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:48:29.448916+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:48:29.450342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:48:29.514995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:48:29.515971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:48:29.517488+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:48:29.523423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T10:48:29.524105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:48:29.524583+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:48:29.526460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [36] []
[2020-08-20T10:48:29.527387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [36] []
[2020-08-20T10:48:29.528971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [36] []
[2020-08-20T10:48:29.530879+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:48:29.531496+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:48:29.532507+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:48:29.533137+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:48:29.533948+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:48:29.534826+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:48:29.535655+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:48:29.536322+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:48:29.536877+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:48:29.537554+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:48:29.538224+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:48:29.538892+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:48:29.539734+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:48:29.540527+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:48:29.541079+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:48:29.541618+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:48:29.542219+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:48:29.542932+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:48:29.543494+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:48:29.543990+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:48:29.544506+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:48:29.545064+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:48:29.545511+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:48:29.546042+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:48:29.546583+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:48:29.547089+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:48:29.547625+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:48:29.548187+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:48:29.548709+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:48:29.549330+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:48:29.549861+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:48:29.550318+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:48:29.550862+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:48:29.551389+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:48:29.551876+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [5] []
[2020-08-20T10:48:29.552361+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [6] []
[2020-08-20T10:48:29.552777+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [14] []
[2020-08-20T10:48:29.553293+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [18] []
[2020-08-20T10:48:29.553733+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [20] []
[2020-08-20T10:48:29.554264+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [23] []
[2020-08-20T10:48:29.554742+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [27] []
[2020-08-20T10:48:29.555228+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [37] []
[2020-08-20T10:48:29.555682+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [40] []
[2020-08-20T10:48:29.556138+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [44] []
[2020-08-20T10:48:29.556539+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [47] []
[2020-08-20T10:48:29.557071+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [49] []
[2020-08-20T10:48:29.557525+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [62] []
[2020-08-20T10:48:29.558056+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [64] []
[2020-08-20T10:48:29.558565+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [69] []
[2020-08-20T10:48:29.559076+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [73] []
[2020-08-20T10:48:29.559488+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [79] []
[2020-08-20T10:48:29.560048+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [86] []
[2020-08-20T10:48:29.560532+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [87] []
[2020-08-20T10:48:29.561181+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [90] []
[2020-08-20T10:48:29.561789+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [95] []
[2020-08-20T10:48:29.562377+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [96] []
[2020-08-20T10:48:29.562957+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [98] []
[2020-08-20T10:48:29.563477+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [100] []
[2020-08-20T10:48:29.564031+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:48:29.564606+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:48:29.565059+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:48:29.565569+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:48:29.566115+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:48:29.566608+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:48:29.567173+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:48:29.567666+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:48:29.568311+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:48:29.568848+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:48:29.569386+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:48:29.569950+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:48:29.570494+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:48:29.570991+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:48:29.571415+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:48:29.571790+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:48:29.572521+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:48:29.572940+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:48:29.573353+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:48:29.573880+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:48:29.574346+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:48:29.574730+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:48:29.575183+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:48:29.575888+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:48:29.576306+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:48:29.576722+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:48:29.577149+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:48:29.577660+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:48:29.578271+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:48:29.578836+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:48:29.579374+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:48:29.579767+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:48:29.580219+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [1] []
[2020-08-20T10:48:29.580660+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [3] []
[2020-08-20T10:48:29.581196+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [4] []
[2020-08-20T10:48:29.581755+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [10] []
[2020-08-20T10:48:29.582266+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [11] []
[2020-08-20T10:48:29.582668+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [18] []
[2020-08-20T10:48:29.583078+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [20] []
[2020-08-20T10:48:29.583653+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [24] []
[2020-08-20T10:48:29.584207+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [25] []
[2020-08-20T10:48:29.584694+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [31] []
[2020-08-20T10:48:29.585272+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [33] []
[2020-08-20T10:48:29.585764+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [34] []
[2020-08-20T10:48:29.586234+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [35] []
[2020-08-20T10:48:29.586652+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [38] []
[2020-08-20T10:48:29.587129+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [39] []
[2020-08-20T10:48:29.587569+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [45] []
[2020-08-20T10:48:29.588001+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [48] []
[2020-08-20T10:48:29.588465+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [53] []
[2020-08-20T10:48:29.588848+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [56] []
[2020-08-20T10:48:29.589371+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [58] []
[2020-08-20T10:48:29.589927+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [59] []
[2020-08-20T10:48:29.590422+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [63] []
[2020-08-20T10:48:29.590881+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [69] []
[2020-08-20T10:48:29.591370+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [75] []
[2020-08-20T10:48:29.591919+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [77] []
[2020-08-20T10:48:29.592411+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [79] []
[2020-08-20T10:48:29.592823+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [80] []
[2020-08-20T10:48:29.593353+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [87] []
[2020-08-20T10:48:29.593956+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [90] []
[2020-08-20T10:48:29.594446+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [91] []
[2020-08-20T10:48:29.594966+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [93] []
[2020-08-20T10:48:29.595433+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [96] []
[2020-08-20T10:48:29.595841+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [97] []
[2020-08-20T10:48:29.596270+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [99] []
[2020-08-20T10:48:29.596687+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [2] []
[2020-08-20T10:48:29.597397+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [4] []
[2020-08-20T10:48:29.597918+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:48:29.598431+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:48:29.598995+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [36] []
[2020-08-20T10:48:29.600984+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:48:29.609689+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:48:29.799891+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:48:30.669217+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bbf540"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/bbf540","method":"GET"} []
[2020-08-20T10:51:07.379541+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:51:07.393308+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:51:07.402515+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:51:07.407914+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:51:07.413721+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:51:07.422549+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:51:07.423993+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:51:07.451587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:51:07.452523+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:51:07.454335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:51:07.462231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T10:51:07.462899+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:51:07.463324+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [36] []
[2020-08-20T10:51:07.465149+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [36] []
[2020-08-20T10:51:07.465851+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [36] []
[2020-08-20T10:51:07.467207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [36] []
[2020-08-20T10:51:07.469677+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:51:07.470212+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:51:07.470938+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:51:07.471641+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:51:07.472325+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:51:07.473067+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:51:07.473567+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:51:07.473999+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:51:07.474584+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:51:07.475197+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:51:07.475790+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:51:07.476860+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:51:07.477550+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:51:07.478850+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:51:07.479319+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:51:07.479774+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:51:07.480273+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:51:07.480718+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:51:07.481200+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:51:07.481641+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:51:07.482175+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:51:07.482701+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:51:07.483181+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:51:07.483579+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:51:07.484074+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:51:07.484627+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:51:07.485108+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:51:07.485660+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:51:07.486317+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:51:07.486908+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:51:07.487354+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:51:07.487852+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:51:07.488438+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:51:07.489082+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:51:07.489668+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [5] []
[2020-08-20T10:51:07.490298+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [6] []
[2020-08-20T10:51:07.491007+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [14] []
[2020-08-20T10:51:07.491730+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [18] []
[2020-08-20T10:51:07.492369+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [20] []
[2020-08-20T10:51:07.492902+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [23] []
[2020-08-20T10:51:07.493402+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [27] []
[2020-08-20T10:51:07.493969+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [37] []
[2020-08-20T10:51:07.494510+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [40] []
[2020-08-20T10:51:07.495057+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [44] []
[2020-08-20T10:51:07.495569+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [47] []
[2020-08-20T10:51:07.496176+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [49] []
[2020-08-20T10:51:07.496778+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [62] []
[2020-08-20T10:51:07.497400+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [64] []
[2020-08-20T10:51:07.497966+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [69] []
[2020-08-20T10:51:07.498544+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [73] []
[2020-08-20T10:51:07.499160+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [79] []
[2020-08-20T10:51:07.499619+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [86] []
[2020-08-20T10:51:07.500145+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [87] []
[2020-08-20T10:51:07.500682+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [90] []
[2020-08-20T10:51:07.501259+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [95] []
[2020-08-20T10:51:07.501763+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [96] []
[2020-08-20T10:51:07.502250+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [98] []
[2020-08-20T10:51:07.502833+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [100] []
[2020-08-20T10:51:07.503469+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:51:07.504037+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:51:07.504527+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:51:07.505046+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:51:07.505657+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:51:07.506224+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:51:07.506854+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:51:07.507308+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:51:07.507854+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:51:07.508312+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:51:07.508833+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:51:07.509396+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:51:07.509957+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:51:07.510565+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:51:07.511072+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:51:07.511610+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:51:07.512156+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:51:07.512732+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:51:07.513313+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:51:07.513809+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:51:07.514334+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:51:07.514804+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:51:07.515503+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:51:07.515950+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:51:07.516408+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:51:07.516826+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:51:07.517394+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:51:07.517872+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:51:07.518328+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:51:07.518775+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:51:07.519203+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:51:07.519629+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:51:07.520098+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [1] []
[2020-08-20T10:51:07.520517+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [3] []
[2020-08-20T10:51:07.520984+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [4] []
[2020-08-20T10:51:07.521420+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [10] []
[2020-08-20T10:51:07.521847+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [11] []
[2020-08-20T10:51:07.522269+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [18] []
[2020-08-20T10:51:07.522742+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [20] []
[2020-08-20T10:51:07.523180+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [24] []
[2020-08-20T10:51:07.523614+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [25] []
[2020-08-20T10:51:07.524018+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [31] []
[2020-08-20T10:51:07.524503+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [33] []
[2020-08-20T10:51:07.525000+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [34] []
[2020-08-20T10:51:07.525447+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [35] []
[2020-08-20T10:51:07.525899+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [38] []
[2020-08-20T10:51:07.526349+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [39] []
[2020-08-20T10:51:07.526854+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [45] []
[2020-08-20T10:51:07.527295+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [48] []
[2020-08-20T10:51:07.527772+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [53] []
[2020-08-20T10:51:07.528184+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [56] []
[2020-08-20T10:51:07.528592+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [58] []
[2020-08-20T10:51:07.529015+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [59] []
[2020-08-20T10:51:07.529474+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [63] []
[2020-08-20T10:51:07.529997+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [69] []
[2020-08-20T10:51:07.530381+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [75] []
[2020-08-20T10:51:07.530786+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [77] []
[2020-08-20T10:51:07.531388+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [79] []
[2020-08-20T10:51:07.531913+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [80] []
[2020-08-20T10:51:07.532389+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [87] []
[2020-08-20T10:51:07.532849+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [90] []
[2020-08-20T10:51:07.533375+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [91] []
[2020-08-20T10:51:07.533845+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [93] []
[2020-08-20T10:51:07.534417+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [96] []
[2020-08-20T10:51:07.534950+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [97] []
[2020-08-20T10:51:07.535364+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [99] []
[2020-08-20T10:51:07.535915+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [2] []
[2020-08-20T10:51:07.536632+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [4] []
[2020-08-20T10:51:07.537595+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:51:07.538261+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:51:07.539409+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [36] []
[2020-08-20T10:51:07.543337+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:51:07.554560+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:51:07.811828+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:51:08.629569+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"db86be"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/db86be","method":"GET"} []
[2020-08-20T10:51:53.426274+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:51:53.438932+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:51:53.458816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:51:53.463925+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:51:53.469406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:51:53.475711+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:51:53.477091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:51:53.510843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:51:53.511722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:51:53.513449+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:51:53.522056+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:51:53.522591+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:51:53.523290+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:51:53.523785+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:51:53.524273+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:51:53.524774+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:51:53.525307+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:51:53.525768+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:51:53.526293+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:51:53.526862+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:51:53.527343+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:51:53.527853+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:51:53.528615+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:51:53.529219+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:51:53.529812+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:51:53.530389+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:51:53.530863+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:51:53.531310+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:51:53.531825+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:51:53.532262+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:51:53.532775+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:51:53.533311+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:51:53.533871+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:51:53.534400+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:51:53.534920+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:51:53.535464+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:51:53.535962+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:51:53.536434+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:51:53.536988+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:51:53.537436+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:51:53.537876+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:51:53.538322+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:51:53.538751+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:51:53.539217+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:51:53.539736+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:51:53.540175+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:51:53.540617+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:51:53.541051+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:51:53.541491+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:51:53.542016+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:51:53.542462+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:51:53.543012+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:51:53.543509+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:51:53.544046+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:51:53.544656+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:51:53.545214+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:51:53.545714+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:51:53.546189+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:51:53.546610+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:51:53.547060+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:51:53.547489+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:51:53.547914+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:51:53.548351+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:51:53.548767+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:51:53.549254+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:51:53.549726+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:51:53.550201+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:51:53.550628+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:51:53.551122+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:51:53.551540+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:51:53.551980+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:51:53.552508+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:51:53.553026+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:51:53.553529+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:51:53.554097+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:51:53.554687+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:51:53.555210+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:51:53.555768+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:51:53.556366+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:51:53.563240+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:51:53.574530+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:51:53.801692+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:51:54.621021+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8bb2e0"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/8bb2e0","method":"GET"} []
[2020-08-20T10:52:08.650976+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:52:08.663964+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:52:08.694193+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:52:08.708211+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:52:08.711962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:52:08.716061+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:52:08.717409+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:52:08.787623+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:52:08.788488+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:52:08.789892+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:52:08.807234+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:52:08.807670+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:52:08.808362+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:52:08.808792+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:52:08.809349+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:52:08.809917+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:52:08.810493+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:52:08.810939+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:52:08.811561+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:52:08.812098+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:52:08.812656+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:52:08.813505+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:52:08.814037+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:52:08.815051+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:52:08.815493+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:52:08.815981+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:52:08.816464+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:52:08.816981+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:52:08.817514+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:52:08.817964+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:52:08.818498+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:52:08.818946+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:52:08.819407+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:52:08.819843+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:52:08.820263+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:52:08.820660+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:52:08.821096+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:52:08.821519+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:52:08.822040+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:52:08.822465+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:52:08.822896+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:52:08.823367+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:52:08.823965+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:52:08.824505+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:52:08.825023+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:52:08.825583+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:52:08.826158+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:52:08.826727+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:52:08.827252+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:52:08.827745+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:52:08.828246+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:52:08.828660+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:52:08.829218+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:52:08.829807+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:52:08.830347+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:52:08.830952+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:52:08.831499+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:52:08.831990+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:52:08.832576+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:52:08.833157+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:52:08.833828+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:52:08.834455+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:52:08.834971+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:52:08.835498+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:52:08.836066+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:52:08.836603+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:52:08.837121+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:52:08.837575+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:52:08.838020+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:52:08.838444+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:52:08.838831+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:52:08.839293+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:52:08.839765+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:52:08.840133+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:52:08.840596+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:52:08.841299+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:52:08.841896+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:52:08.842475+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:52:08.843316+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:52:08.846959+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:52:08.854938+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:52:09.036418+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:52:09.832389+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff8bb2"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/ff8bb2","method":"GET"} []
[2020-08-20T10:52:49.935381+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/34","method":"GET"} []
[2020-08-20T10:52:49.948612+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:52:49.956018+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:52:49.961451+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:52:49.966867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:52:50.562256+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:52:51.068418+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T10:52:51.069079+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/css/main.css" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/css/main.css\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/css/main.css/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T10:52:51.560929+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1f1389"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/1f1389","method":"GET"} []
[2020-08-20T10:54:24.848029+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:54:24.860611+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:54:24.868221+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:54:24.873469+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:54:24.879150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:54:24.885422+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:54:24.887419+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:54:24.934111+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:54:24.935072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:54:24.936871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:54:24.944737+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:54:24.945352+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:54:24.947076+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:54:24.947687+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:54:24.948206+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:54:24.948776+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:54:24.949503+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:54:24.950231+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:54:24.950788+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:54:24.951306+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:54:24.951776+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:54:24.952332+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:54:24.952919+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:54:24.953427+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:54:24.953962+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:54:24.954458+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:54:24.955195+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:54:24.956170+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:54:24.956625+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:54:24.957076+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:54:24.957525+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:54:24.957987+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:54:24.958489+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:54:24.959113+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:54:24.959628+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:54:24.960348+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:54:24.960772+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:54:24.961273+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:54:24.961760+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:54:24.962306+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:54:24.962995+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:54:24.963716+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:54:24.964303+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:54:24.964899+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:54:24.965455+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:54:24.966084+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:54:24.966674+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:54:24.967381+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:54:24.968092+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:54:24.968711+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:54:24.969342+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:54:24.970014+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:54:24.970556+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:54:24.971149+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:54:24.971794+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:54:24.972417+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:54:24.973005+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:54:24.973512+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:54:24.974005+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:54:24.974678+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:54:24.975290+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:54:24.975763+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:54:24.976302+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:54:24.976823+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:54:24.977437+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:54:24.977957+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:54:24.978454+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:54:24.979012+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:54:24.979600+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:54:24.980291+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:54:24.980872+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:54:24.981388+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:54:24.981897+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:54:24.982411+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:54:24.982989+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:54:24.983492+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:54:24.984091+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:54:24.984678+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:54:24.985317+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:54:24.992682+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:54:25.003142+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:54:25.319973+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:54:26.138030+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f7534d"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/f7534d","method":"GET"} []
[2020-08-20T10:58:57.142584+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/34","method":"GET"} []
[2020-08-20T10:58:57.244261+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T10:58:57.607891+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T10:58:57.626144+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T10:58:57.664205+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T10:58:57.672200+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:58:57.673634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [34] []
[2020-08-20T10:58:57.761847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [34] []
[2020-08-20T10:58:57.762960+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [34] []
[2020-08-20T10:58:57.764840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [34] []
[2020-08-20T10:58:57.773739+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T10:58:57.774307+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [2] []
[2020-08-20T10:58:57.775056+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [4] []
[2020-08-20T10:58:57.775685+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [10] []
[2020-08-20T10:58:57.776290+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [11] []
[2020-08-20T10:58:57.777015+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [16] []
[2020-08-20T10:58:57.777785+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [17] []
[2020-08-20T10:58:57.778437+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [21] []
[2020-08-20T10:58:57.779149+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [22] []
[2020-08-20T10:58:57.779790+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [24] []
[2020-08-20T10:58:57.780341+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [25] []
[2020-08-20T10:58:57.780874+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [35] []
[2020-08-20T10:58:57.781557+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [39] []
[2020-08-20T10:58:57.782292+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [43] []
[2020-08-20T10:58:57.782796+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [46] []
[2020-08-20T10:58:57.783332+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [52] []
[2020-08-20T10:58:57.783899+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [55] []
[2020-08-20T10:58:57.784436+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [56] []
[2020-08-20T10:58:57.785001+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [57] []
[2020-08-20T10:58:57.785606+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [58] []
[2020-08-20T10:58:57.786172+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [60] []
[2020-08-20T10:58:57.786686+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [61] []
[2020-08-20T10:58:57.787235+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [63] []
[2020-08-20T10:58:57.787681+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [65] []
[2020-08-20T10:58:57.788289+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [67] []
[2020-08-20T10:58:57.788842+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [68] []
[2020-08-20T10:58:57.789386+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [74] []
[2020-08-20T10:58:57.789944+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [75] []
[2020-08-20T10:58:57.790388+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [76] []
[2020-08-20T10:58:57.791031+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [80] []
[2020-08-20T10:58:57.791595+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [83] []
[2020-08-20T10:58:57.792208+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [93] []
[2020-08-20T10:58:57.792663+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [113] []
[2020-08-20T10:58:57.793211+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T10:58:57.793768+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [2] []
[2020-08-20T10:58:57.794313+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [6] []
[2020-08-20T10:58:57.794941+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [7] []
[2020-08-20T10:58:57.795499+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [12] []
[2020-08-20T10:58:57.795993+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [14] []
[2020-08-20T10:58:57.796548+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [15] []
[2020-08-20T10:58:57.797201+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [17] []
[2020-08-20T10:58:57.797775+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [19] []
[2020-08-20T10:58:57.798410+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [21] []
[2020-08-20T10:58:57.799053+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [22] []
[2020-08-20T10:58:57.799581+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [23] []
[2020-08-20T10:58:57.800268+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [26] []
[2020-08-20T10:58:57.800943+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [27] []
[2020-08-20T10:58:57.801609+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [30] []
[2020-08-20T10:58:57.802319+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [32] []
[2020-08-20T10:58:57.802872+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [44] []
[2020-08-20T10:58:57.803396+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [50] []
[2020-08-20T10:58:57.803836+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [52] []
[2020-08-20T10:58:57.804450+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [54] []
[2020-08-20T10:58:57.805033+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [60] []
[2020-08-20T10:58:57.805593+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [62] []
[2020-08-20T10:58:57.806076+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [65] []
[2020-08-20T10:58:57.806604+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [68] []
[2020-08-20T10:58:57.807033+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [72] []
[2020-08-20T10:58:57.807554+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [73] []
[2020-08-20T10:58:57.808072+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [74] []
[2020-08-20T10:58:57.808612+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [76] []
[2020-08-20T10:58:57.809161+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [78] []
[2020-08-20T10:58:57.809658+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [82] []
[2020-08-20T10:58:57.810173+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [84] []
[2020-08-20T10:58:57.810731+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [94] []
[2020-08-20T10:58:57.811291+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [98] []
[2020-08-20T10:58:57.811892+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T10:58:57.812411+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T10:58:57.812935+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [34] []
[2020-08-20T10:58:57.819515+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T10:58:57.850124+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [34]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T10:58:58.432024+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T10:58:59.302650+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"80f4df"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/80f4df","method":"GET"} []
[2020-08-20T11:37:37.909312+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T11:37:37.946745+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T11:37:37.946833+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:37.946898+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:37.948795+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:38.015259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T11:37:38.304769+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T11:37:38.328363+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T11:37:38.328442+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:38.328494+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:38.329359+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:38.361525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T11:37:39.000725+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:39.084304+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 20 Aug 2020 09:37:39 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc5MTYyNTksImV4cCI6MTU5Nzk1OTQ1OSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzQsImZpcnN0TmFtZSI6IkNocmlzdGVsbGUiLCJsYXN0TmFtZSI6IkJhaWxseSIsImdlbmRlciI6Ik1tZSIsImNoaWxkcmVuIjpbIkNNMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.ZCLt77AIGnkeGHpjDanoNzeE2lMrAMHTueNoZtjnreDsUCk62sFbU0IZ6oOpF7GSlnWeOdBSIhJXgg7SFmEeXbk-WHH1pamq075USYoGrYBvDmexjXL8kDa6Q7ZBTlGSuP2mbrJUjYeLLqEZwA_xpfX0P8F9YJBCVD_g8FlOcFkp-yLsO1a5I6ToH4JjuKARx-lwDnLjYJBMZfuUGdESIeK4VDBb7Y16laM0587evP2w9Lz5CoeVk40iy5hepOfbAGGS92fOrTDcz9EFWMDP376SVwkHHWxdZND3arpjSyTlp1j0_9r7ndxrSr7vlOoiHiWdKmYbkwa8Gchx0NYschLzrj83oxB4sd-nwPQIrlpwfbU1SqfXnGWgqFTRipuIlHSvlQzgCoilzMuwtKfhUuNR7qMHAopGo_jrQB8Hf6vBu_Xl-ZA9xADRMmg3pBLJZSCa_N4LorX9bLweajmbd2OtnirINKr8AflC2S8fs3-rEr_bq8qPTWukp4a9ZLXYT1vvGt8AIzEpFO-Vt0w8p0PcwMZEysHZ4uKfz9M3mByiQoTvLTJl2RHwGzmSQQLxYy7pQysV1_-pihbYOAOh2buAAQDvrhXolT7E9gQxlOEu0o0P8gkmjbQmddCigrwgPk7HyXqC7_ay6B3bJndNP7OJoUlNE3c6kuZbF2svSNA\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:39.084419+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:39.084461+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:39.289313+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:39.334620+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 20 Aug 2020 09:37:39 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc5MTYyNTksImV4cCI6MTU5Nzk1OTQ1OSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidXNlckBnbWFpbC5jb20iLCJpZCI6MzQsImZpcnN0TmFtZSI6IkNocmlzdGVsbGUiLCJsYXN0TmFtZSI6IkJhaWxseSIsImdlbmRlciI6Ik1tZSIsImNoaWxkcmVuIjpbIkNNMSJdLCJlbWFpbE5vdGlmaWNhdGlvbiI6dHJ1ZX0.ZCLt77AIGnkeGHpjDanoNzeE2lMrAMHTueNoZtjnreDsUCk62sFbU0IZ6oOpF7GSlnWeOdBSIhJXgg7SFmEeXbk-WHH1pamq075USYoGrYBvDmexjXL8kDa6Q7ZBTlGSuP2mbrJUjYeLLqEZwA_xpfX0P8F9YJBCVD_g8FlOcFkp-yLsO1a5I6ToH4JjuKARx-lwDnLjYJBMZfuUGdESIeK4VDBb7Y16laM0587evP2w9Lz5CoeVk40iy5hepOfbAGGS92fOrTDcz9EFWMDP376SVwkHHWxdZND3arpjSyTlp1j0_9r7ndxrSr7vlOoiHiWdKmYbkwa8Gchx0NYschLzrj83oxB4sd-nwPQIrlpwfbU1SqfXnGWgqFTRipuIlHSvlQzgCoilzMuwtKfhUuNR7qMHAopGo_jrQB8Hf6vBu_Xl-ZA9xADRMmg3pBLJZSCa_N4LorX9bLweajmbd2OtnirINKr8AflC2S8fs3-rEr_bq8qPTWukp4a9ZLXYT1vvGt8AIzEpFO-Vt0w8p0PcwMZEysHZ4uKfz9M3mByiQoTvLTJl2RHwGzmSQQLxYy7pQysV1_-pihbYOAOh2buAAQDvrhXolT7E9gQxlOEu0o0P8gkmjbQmddCigrwgPk7HyXqC7_ay6B3bJndNP7OJoUlNE3c6kuZbF2svSNA\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:39.334724+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:39.334765+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T11:37:39.698271+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T11:37:39.714366+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T11:37:39.749031+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T11:37:39.749124+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.749198+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.755760+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.777179+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T11:37:39.777256+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.777316+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.781861+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.790541+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T11:37:39.792439+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T11:37:39.805452+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.805768+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.805817+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.807701+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.808112+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:39.808184+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:40.346641+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T11:37:40.347257+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T11:37:40.354488+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,25,26]] []
[2020-08-20T11:37:40.354802+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[18,16,17,1,2,3,4,5,6,7,8,9,10]] []
[2020-08-20T11:37:40.482031+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T11:37:40.693796+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-20T11:37:52.843983+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"Un_nouvel_article"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/Un_nouvel_article","method":"GET"} []
[2020-08-20T11:37:52.852289+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T11:37:52.852366+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:52.852432+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:52.856751+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:52.890483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T11:37:52.905052+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:52.905370+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:52.905418+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:53.046556+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T11:37:59.570465+02:00] request.INFO: Matched route "api_comments_delete_item". {"route":"api_comments_delete_item","route_parameters":{"_route":"api_comments_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"delete","id":"116"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/116","method":"DELETE"} []
[2020-08-20T11:37:59.578169+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T11:37:59.578232+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:59.578290+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:59.582516+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:59.615414+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T11:37:59.629596+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:59.629883+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:59.629927+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:37:59.736293+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [116] []
[2020-08-20T11:37:59.781282+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T11:37:59.781919+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [116] []
[2020-08-20T11:37:59.782815+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T11:38:07.007041+02:00] request.INFO: Matched route "api_comments_post_collection". {"route":"api_comments_post_collection","route_parameters":{"_route":"api_comments_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_collection_operation_name":"post"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments","method":"POST"} []
[2020-08-20T11:38:07.014781+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T11:38:07.014843+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:07.014903+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:07.020449+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:07.064305+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T11:38:07.078577+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:07.078880+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:07.078927+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:07.164810+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.gender AS gender_4, u0_.last_name AS last_name_5, u0_.first_name AS first_name_6, u0_.children AS children_7, u0_.email_notification AS email_notification_8, u0_.registered_at AS registered_at_9, u0_.granted AS granted_10, u0_.about AS about_11 FROM user u0_ WHERE u0_.id = ? [34] []
[2020-08-20T11:38:07.170219+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, a0_.category_id AS category_id_6, a0_.author_id AS author_id_7 FROM article a0_ WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T11:38:07.188791+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T11:38:07.190140+02:00] doctrine.DEBUG: INSERT INTO comment (content, created_at, author_id, article_id, blocked_id) VALUES (?, ?, ?, ?, ?) {"1":"Ff","2":"2020-08-20T11:38:07+02:00","3":34,"4":18,"5":null} []
[2020-08-20T11:38:07.191254+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T11:38:07.193259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.id = ? [118] []
[2020-08-20T11:38:11.601720+02:00] request.INFO: Matched route "api_comments_delete_item". {"route":"api_comments_delete_item","route_parameters":{"_route":"api_comments_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Comment","_api_item_operation_name":"delete","id":"118"},"request_uri":"https://adminstda.xaviervitali.fr/api/comments/118","method":"DELETE"} []
[2020-08-20T11:38:11.636634+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T11:38:11.636721+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:11.636798+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:11.647379+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:11.738170+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T11:38:11.779239+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:11.780218+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:11.780267+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T11:38:11.857911+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.content AS content_1, c0_.created_at AS created_at_2, u1_.id AS id_3, u1_.email AS email_4, u1_.roles AS roles_5, u1_.password AS password_6, u1_.gender AS gender_7, u1_.last_name AS last_name_8, u1_.first_name AS first_name_9, u1_.children AS children_10, u1_.email_notification AS email_notification_11, u1_.registered_at AS registered_at_12, u1_.granted AS granted_13, u1_.about AS about_14, a2_.id AS id_15, a2_.title AS title_16, a2_.content AS content_17, a2_.created_at AS created_at_18, a2_.updated_at AS updated_at_19, a2_.slug AS slug_20, u3_.id AS id_21, u3_.email AS email_22, u3_.roles AS roles_23, u3_.password AS password_24, u3_.gender AS gender_25, u3_.last_name AS last_name_26, u3_.first_name AS first_name_27, u3_.children AS children_28, u3_.email_notification AS email_notification_29, u3_.registered_at AS registered_at_30, u3_.granted AS granted_31, u3_.about AS about_32, c0_.author_id AS author_id_33, c0_.article_id AS article_id_34, c0_.blocked_id AS blocked_id_35, a2_.category_id AS category_id_36, a2_.author_id AS author_id_37 FROM comment c0_ LEFT JOIN user u1_ ON c0_.author_id = u1_.id LEFT JOIN article a2_ ON c0_.article_id = a2_.id LEFT JOIN user u3_ ON c0_.blocked_id = u3_.id WHERE c0_.id = ? [118] []
[2020-08-20T11:38:11.903610+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T11:38:11.904340+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [118] []
[2020-08-20T11:38:11.905389+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:35:12.839636+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T12:35:12.839638+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T12:35:12.866752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:12.867888+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:12.915734+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:35:12.915740+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:35:12.920703+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:35:12.920722+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:35:13.171333+02:00] request.INFO: Matched route "api_articles_get_item". {"route":"api_articles_get_item","route_parameters":{"_route":"api_articles_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_item_operation_name":"get","id":"Un_nouvel_article"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles/Un_nouvel_article","method":"GET"} []
[2020-08-20T12:35:13.180725+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:35:13.180780+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:35:13.180838+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:35:13.314634+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T12:35:13.433319+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:35:13.543388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T12:35:13.650590+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"user@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:35:13.664647+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:35:13.664700+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:35:13.950914+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.slug = ? ["Un_nouvel_article"] []
[2020-08-20T12:35:14.177585+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:14.504372+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a1533"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/4a1533","method":"GET"} []
[2020-08-20T12:35:15.201473+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://adminstda.xaviervitali.fr/login")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://adminstda.xaviervitali.fr/login\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:35:21.798249+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-20T12:35:21.906347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:35:22.965786+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-08-20T12:35:22.979861+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:35:23.342642+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T12:35:23.355963+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:23.362350+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:35:23.362672+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:35:24.089136+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T12:35:24.132493+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:25.895737+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1025f6"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/1025f6","method":"GET"} []
[2020-08-20T12:35:29.042562+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-20T12:35:29.097177+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:35:30.164010+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-08-20T12:35:30.175215+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:35:30.467143+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T12:35:30.482586+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:30.489733+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:35:30.490253+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:35:30.800719+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T12:35:30.859450+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:31.238667+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc0fdf"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/fc0fdf","method":"GET"} []
[2020-08-20T12:35:46.462470+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-20T12:35:46.536734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["xavier.vitali@gmail.com"] []
[2020-08-20T12:35:47.421162+02:00] security.INFO: User has been authenticated successfully. {"username":"xavier.vitali@gmail.com"} []
[2020-08-20T12:35:47.438700+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:35:47.786913+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T12:35:47.801493+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:47.811322+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:35:47.812016+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:35:48.177551+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T12:35:48.241253+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:35:48.703678+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3b681e"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/3b681e","method":"GET"} []
[2020-08-20T12:36:44.661481+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-20T12:36:44.754159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:36:45.625139+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-08-20T12:36:45.645824+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:36:46.034155+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T12:36:46.045810+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:36:46.053311+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:36:46.054101+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:36:46.348508+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T12:36:46.517481+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:36:46.840913+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f65cd2"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/f65cd2","method":"GET"} []
[2020-08-20T12:36:53.007448+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-20T12:36:53.055988+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:36:53.937552+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-08-20T12:36:53.947013+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:36:54.207486+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T12:36:54.219162+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:36:54.224600+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:36:54.224941+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:36:54.464615+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T12:36:54.505890+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:36:54.798338+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9d9dc9"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/9d9dc9","method":"GET"} []
[2020-08-20T12:37:18.800926+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:37:18.833435+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:37:18.833513+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:37:18.833566+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:37:18.837598+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:37:18.928041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:37:19.869294+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:37:20.058467+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 20 Aug 2020 10:37:20 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc5MTk4MzksImV4cCI6MTU5Nzk2MzAzOSwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOm51bGx9.fh1y6CrtqKT9ATwSJNsRzAAaWTqig8TP652fynb4NUeY8Nrbx4bIyyR2mIvxxshzZyxrAIfBk610uA2-vluso6wLM41BjovfqKXfu1J0L_JqPeUY4J6340P2NRv7P-VLaMsnc8VzjpuGXz_xDs0vYmftKtZGuAj5FAmYMsLen6Mlyirgm7Hp-Zdl609hshhI_bsVoyP5ElwXeWWxiMn5UQlu3V6db85bl3E5HWVbotAC_HvbPNFIzFn2WJmnWm1IDQ96O7xuFEzRxk886njPVRjhfq8kJjYJr7Xnh6tcKzRrIOIp3l9-Xf6fp9Orxz_SUFNUheKbG7twRh4zT7aUjOh8IS4mjk5UY4tGl-PLsbWB3r9p7KT74Op03secpK2xgxw4KijeKa-ntfsRzCilR-udD0vqC-1vqBhWQLsjojjz9_KchyvXSc31bKPSWTiDY-dd6QL_CSrWOsToKEixqNA2de3Ne1fAo9QiWV61w9uig196a2-AY1MBfim6BGIso-45_y5vFlYb6BgNt2d4Q6dmI8rE8WWuLsaShucXdzilMzk-IyPgHMK9M-30qRhUyoGH4clUG4fcZ1I6eEuwFJRnk7b1_eaFnt3fRqg6BaMIPLJ5vlxRW8w3Za72knh5rGz7GSgVNToj2XvZAloV451GeGPmpwU5XyuBG9rBBys\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:37:20.058575+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:37:20.058627+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:37:20.627707+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T12:37:20.652616+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T12:37:20.662534+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:37:20.662590+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.662652+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.664211+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:37:20.664274+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.664339+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.669286+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.669309+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.680260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:37:20.690539+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.690844+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.690890+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.704274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:37:20.719172+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.719510+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:20.719583+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:37:21.171108+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T12:37:21.171197+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T12:37:21.319713+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,25,26]] []
[2020-08-20T12:37:21.319857+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[18,16,17,1,2,3,4,5,6,7,8,9,10]] []
[2020-08-20T12:37:21.454136+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T12:37:21.479294+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-20T12:37:28.923317+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:37:28.939282+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:37:28.947401+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:37:28.948172+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:37:29.297375+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T12:37:29.411895+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:37:29.847355+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3713de"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/3713de","method":"GET"} []
[2020-08-20T12:37:31.472159+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"POST"} []
[2020-08-20T12:37:31.515317+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:37:32.404056+02:00] security.INFO: User has been authenticated successfully. {"username":"admin@gmail.com"} []
[2020-08-20T12:37:32.413358+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:37:32.664302+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:37:32.677816+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:37:32.708701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:37:32.720916+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:37:32.772531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:37:32.773378+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:37:33.011598+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:37:33.431213+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7b7360"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/7b7360","method":"GET"} []
[2020-08-20T12:37:57.251376+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"49"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/49","method":"GET"} []
[2020-08-20T12:37:57.315098+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:37:57.369038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:37:57.386446+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:37:57.392087+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["49"] []
[2020-08-20T12:37:57.876153+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:37:58.293669+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/css/main.css" (from "https://adminstda.xaviervitali.fr/admin/edit_user/49")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/css/main.css\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/49\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/css/main.css/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:37:58.317898+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/49")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/49\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:37:59.218245+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"22733e"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/22733e","method":"GET"} []
[2020-08-20T12:38:14.087011+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"49"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/49","method":"POST"} []
[2020-08-20T12:38:14.111758+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:14.143288+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:14.156115+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:14.162293+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["49"] []
[2020-08-20T12:38:15.128033+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? ["xavier.vitali@gmail.com"] []
[2020-08-20T12:38:15.185378+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:38:15.292195+02:00] doctrine.DEBUG: UPDATE user SET roles = ? WHERE id = ? [["ROLE_ADMIN","ROLE_WRITTER"],49] []
[2020-08-20T12:38:15.293294+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:38:15.303643+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:15.634552+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:38:15.647484+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:15.677152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:15.689113+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:15.694984+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:38:15.696064+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:38:15.710094+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:16.251625+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b24985"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/b24985","method":"GET"} []
[2020-08-20T12:38:20.546087+02:00] request.INFO: Matched route "admin_allow_acces". {"route":"admin_allow_acces","route_parameters":{"_route":"admin_allow_acces","_controller":"App\\Controller\\AdminController::allowAccess","id":"49"},"request_uri":"https://adminstda.xaviervitali.fr/admin/allow_access/49","method":"GET"} []
[2020-08-20T12:38:20.559428+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:20.590245+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:20.602567+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:20.606451+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["49"] []
[2020-08-20T12:38:20.625435+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:38:20.627009+02:00] doctrine.DEBUG: UPDATE user SET granted = ? WHERE id = ? [true,49] []
[2020-08-20T12:38:20.627899+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:38:20.872917+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2020-08-20T12:38:21.603228+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2020-08-20T12:38:22.114322+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:22.178295+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2020-08-20T12:38:22.255801+02:00] app.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2020-08-20T12:38:22.495019+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:38:22.510801+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:22.543558+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:22.555741+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:22.561561+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:38:22.562484+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:38:22.574774+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:22.889593+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"87db45"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/87db45","method":"GET"} []
[2020-08-20T12:38:31.422248+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"35"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/35","method":"GET"} []
[2020-08-20T12:38:31.457900+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:31.553789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:31.571527+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:31.577311+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["35"] []
[2020-08-20T12:38:31.582978+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [35] []
[2020-08-20T12:38:31.584898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [35] []
[2020-08-20T12:38:31.615768+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [35] []
[2020-08-20T12:38:31.616719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [35] []
[2020-08-20T12:38:31.618948+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 WHERE t0.added_by_id = ? [35] []
[2020-08-20T12:38:31.620054+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [35] []
[2020-08-20T12:38:31.626998+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:38:31.627479+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [1] []
[2020-08-20T12:38:31.628752+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [3] []
[2020-08-20T12:38:31.629659+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [7] []
[2020-08-20T12:38:31.630263+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [8] []
[2020-08-20T12:38:31.631054+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [9] []
[2020-08-20T12:38:31.631811+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [12] []
[2020-08-20T12:38:31.632583+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [13] []
[2020-08-20T12:38:31.633246+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [15] []
[2020-08-20T12:38:31.634037+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [19] []
[2020-08-20T12:38:31.634776+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [26] []
[2020-08-20T12:38:31.635340+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [29] []
[2020-08-20T12:38:31.636266+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [30] []
[2020-08-20T12:38:31.636873+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [31] []
[2020-08-20T12:38:31.637386+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [32] []
[2020-08-20T12:38:31.638090+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [33] []
[2020-08-20T12:38:31.638655+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [34] []
[2020-08-20T12:38:31.639268+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [41] []
[2020-08-20T12:38:31.639818+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [42] []
[2020-08-20T12:38:31.640331+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [45] []
[2020-08-20T12:38:31.640815+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [51] []
[2020-08-20T12:38:31.641297+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [53] []
[2020-08-20T12:38:31.641981+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [54] []
[2020-08-20T12:38:31.642614+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [59] []
[2020-08-20T12:38:31.643153+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [66] []
[2020-08-20T12:38:31.643711+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [70] []
[2020-08-20T12:38:31.644273+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [72] []
[2020-08-20T12:38:31.644733+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [77] []
[2020-08-20T12:38:31.645243+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [78] []
[2020-08-20T12:38:31.645718+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [81] []
[2020-08-20T12:38:31.646160+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [84] []
[2020-08-20T12:38:31.646881+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [85] []
[2020-08-20T12:38:31.647362+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [89] []
[2020-08-20T12:38:31.647830+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [91] []
[2020-08-20T12:38:31.648305+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [92] []
[2020-08-20T12:38:31.648746+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [94] []
[2020-08-20T12:38:31.649336+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [97] []
[2020-08-20T12:38:31.650033+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [5] []
[2020-08-20T12:38:31.650751+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [8] []
[2020-08-20T12:38:31.651401+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [9] []
[2020-08-20T12:38:31.651869+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [13] []
[2020-08-20T12:38:31.652361+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [16] []
[2020-08-20T12:38:31.652794+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [28] []
[2020-08-20T12:38:31.653427+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [29] []
[2020-08-20T12:38:31.654038+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [36] []
[2020-08-20T12:38:31.654534+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [37] []
[2020-08-20T12:38:31.655033+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [40] []
[2020-08-20T12:38:31.655441+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [41] []
[2020-08-20T12:38:31.655987+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [42] []
[2020-08-20T12:38:31.656430+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [43] []
[2020-08-20T12:38:31.656892+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [46] []
[2020-08-20T12:38:31.657457+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [47] []
[2020-08-20T12:38:31.657990+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [49] []
[2020-08-20T12:38:31.658406+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [51] []
[2020-08-20T12:38:31.659029+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [55] []
[2020-08-20T12:38:31.659491+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [57] []
[2020-08-20T12:38:31.660035+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [61] []
[2020-08-20T12:38:31.660530+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [64] []
[2020-08-20T12:38:31.661036+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [66] []
[2020-08-20T12:38:31.661540+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [67] []
[2020-08-20T12:38:31.662062+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [70] []
[2020-08-20T12:38:31.662653+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [71] []
[2020-08-20T12:38:31.663260+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [81] []
[2020-08-20T12:38:31.663754+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [83] []
[2020-08-20T12:38:31.664452+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [85] []
[2020-08-20T12:38:31.665099+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [86] []
[2020-08-20T12:38:31.665811+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [88] []
[2020-08-20T12:38:31.666593+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [89] []
[2020-08-20T12:38:31.667252+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [92] []
[2020-08-20T12:38:31.667816+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [95] []
[2020-08-20T12:38:31.668464+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [100] []
[2020-08-20T12:38:31.669074+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [3] []
[2020-08-20T12:38:31.669854+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [35] []
[2020-08-20T12:38:31.671007+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:38:31.693395+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:31.989921+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:38:32.003127+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:32.034040+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:32.046625+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:32.052420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:38:32.053837+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:38:32.066637+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:32.407327+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"533ca9"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/533ca9","method":"GET"} []
[2020-08-20T12:38:49.640160+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/34","method":"GET"} []
[2020-08-20T12:38:49.655856+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:49.685835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:49.697490+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:49.702335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T12:38:49.840216+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:50.203639+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:38:50.203695+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/css/main.css" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/css/main.css\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/css/main.css/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:38:51.483120+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:38:52.402847+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ffbe19"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/ffbe19","method":"GET"} []
[2020-08-20T12:38:58.851922+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/34","method":"POST"} []
[2020-08-20T12:38:58.864556+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:58.895017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:58.907083+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:58.911393+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T12:38:59.100626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? ["utilisateur@gmail.com"] []
[2020-08-20T12:38:59.105166+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:38:59.108353+02:00] doctrine.DEBUG: UPDATE user SET email = ? WHERE id = ? ["utilisateur@gmail.com",34] []
[2020-08-20T12:38:59.109402+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:38:59.119968+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:59.421925+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:38:59.435142+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:38:59.465933+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:38:59.478116+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:38:59.484008+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:38:59.484965+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:38:59.497073+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:38:59.858812+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"482cfc"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/482cfc","method":"GET"} []
[2020-08-20T12:39:05.712754+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"40"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/40","method":"GET"} []
[2020-08-20T12:39:05.741791+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:39:05.809972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:39:05.828499+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:39:05.835379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["40"] []
[2020-08-20T12:39:05.908591+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:39:06.249845+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/40")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/40\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:39:06.255083+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/css/main.css" (from "https://adminstda.xaviervitali.fr/admin/edit_user/40")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/css/main.css\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/40\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/css/main.css/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:39:07.198692+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83c65d"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/83c65d","method":"GET"} []
[2020-08-20T12:39:22.123539+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"40"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/40","method":"POST"} []
[2020-08-20T12:39:22.139575+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:39:22.175327+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:39:22.187882+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:39:22.193427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["40"] []
[2020-08-20T12:39:22.375495+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? ["moderateur@gmail.com"] []
[2020-08-20T12:39:22.379272+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:39:22.380814+02:00] doctrine.DEBUG: UPDATE user SET email = ?, gender = ? WHERE id = ? ["moderateur@gmail.com","M",40] []
[2020-08-20T12:39:22.381752+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:39:22.392510+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:39:22.745205+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:39:22.758430+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:39:22.789432+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:39:22.802070+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:39:22.807909+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:39:22.809267+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:39:22.823064+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:39:23.242492+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7470c3"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/7470c3","method":"GET"} []
[2020-08-20T12:39:34.164525+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"38"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/38","method":"GET"} []
[2020-08-20T12:39:34.177839+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:39:34.217329+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:39:34.230124+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:39:34.233989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["38"] []
[2020-08-20T12:39:34.352159+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:39:34.814991+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/css/main.css" (from "https://adminstda.xaviervitali.fr/admin/edit_user/38")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/css/main.css\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/38\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/css/main.css/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:39:34.836325+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/38")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/38\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:39:36.076222+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/38")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/38\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:39:36.893544+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad92a9"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/ad92a9","method":"GET"} []
[2020-08-20T12:39:47.641158+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"38"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/38","method":"POST"} []
[2020-08-20T12:39:47.659529+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:39:47.721710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:39:47.738946+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:39:47.744169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["38"] []
[2020-08-20T12:39:47.927636+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? ["ecole@gmail.com"] []
[2020-08-20T12:39:47.932297+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:39:47.935204+02:00] doctrine.DEBUG: UPDATE user SET email = ?, gender = ? WHERE id = ? ["ecole@gmail.com","Mme",38] []
[2020-08-20T12:39:47.936209+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:39:47.947373+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:39:48.252436+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:39:48.265577+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:39:48.295212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:39:48.307256+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:39:48.313163+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:39:48.314208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:39:48.326434+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:39:48.651474+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2633a0"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/2633a0","method":"GET"} []
[2020-08-20T12:46:00.138821+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"36"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/36","method":"GET"} []
[2020-08-20T12:46:00.179608+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:00.230150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:00.248611+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:00.253894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["36"] []
[2020-08-20T12:46:00.428858+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:00.956373+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/css/main.css" (from "https://adminstda.xaviervitali.fr/admin/edit_user/36")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/css/main.css\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/36\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/css/main.css/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:46:00.956379+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/36")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/36\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:46:01.485672+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7dfe7d"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/7dfe7d","method":"GET"} []
[2020-08-20T12:46:15.840517+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"36"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/36","method":"POST"} []
[2020-08-20T12:46:15.852532+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:15.882429+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:15.893960+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:15.897453+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["36"] []
[2020-08-20T12:46:16.137080+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? ["user2@gmail.com"] []
[2020-08-20T12:46:16.141701+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:46:16.144828+02:00] doctrine.DEBUG: UPDATE user SET gender = ?, children = ?, granted = ? WHERE id = ? ["Mme",["CP/CE1","CM2","MS","PS"],true,36] []
[2020-08-20T12:46:16.145802+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:46:16.155921+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:16.547258+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:46:16.559912+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:16.589799+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:16.601835+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:16.607011+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:46:16.608046+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:46:16.620105+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:17.002080+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8cedc5"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/8cedc5","method":"GET"} []
[2020-08-20T12:46:23.430924+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"36"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/36","method":"GET"} []
[2020-08-20T12:46:23.444118+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:23.474795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:23.486804+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:23.489845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["36"] []
[2020-08-20T12:46:23.494281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [36] []
[2020-08-20T12:46:23.495836+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [36] []
[2020-08-20T12:46:23.565959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [36] []
[2020-08-20T12:46:23.566860+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [36] []
[2020-08-20T12:46:23.568629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 WHERE t0.added_by_id = ? [36] []
[2020-08-20T12:46:23.569734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [36] []
[2020-08-20T12:46:23.577034+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:46:23.577558+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [5] []
[2020-08-20T12:46:23.578385+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [6] []
[2020-08-20T12:46:23.579009+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [14] []
[2020-08-20T12:46:23.579684+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [18] []
[2020-08-20T12:46:23.580311+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [20] []
[2020-08-20T12:46:23.580998+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [23] []
[2020-08-20T12:46:23.581739+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [27] []
[2020-08-20T12:46:23.582581+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [37] []
[2020-08-20T12:46:23.583277+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [40] []
[2020-08-20T12:46:23.583984+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [44] []
[2020-08-20T12:46:23.584702+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [47] []
[2020-08-20T12:46:23.585364+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [49] []
[2020-08-20T12:46:23.585949+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [62] []
[2020-08-20T12:46:23.586582+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [64] []
[2020-08-20T12:46:23.587189+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [69] []
[2020-08-20T12:46:23.587832+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [73] []
[2020-08-20T12:46:23.588427+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [79] []
[2020-08-20T12:46:23.589058+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [86] []
[2020-08-20T12:46:23.589730+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [87] []
[2020-08-20T12:46:23.590462+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [90] []
[2020-08-20T12:46:23.591167+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [95] []
[2020-08-20T12:46:23.591909+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [96] []
[2020-08-20T12:46:23.592683+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [98] []
[2020-08-20T12:46:23.593344+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [100] []
[2020-08-20T12:46:23.594047+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [1] []
[2020-08-20T12:46:23.594653+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [3] []
[2020-08-20T12:46:23.595333+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [4] []
[2020-08-20T12:46:23.596053+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [10] []
[2020-08-20T12:46:23.596691+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [11] []
[2020-08-20T12:46:23.597290+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [18] []
[2020-08-20T12:46:23.597936+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [20] []
[2020-08-20T12:46:23.598689+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [24] []
[2020-08-20T12:46:23.599750+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [25] []
[2020-08-20T12:46:23.600424+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [31] []
[2020-08-20T12:46:23.601130+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [33] []
[2020-08-20T12:46:23.601879+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [34] []
[2020-08-20T12:46:23.602645+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [35] []
[2020-08-20T12:46:23.603365+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [38] []
[2020-08-20T12:46:23.604168+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [39] []
[2020-08-20T12:46:23.604794+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [45] []
[2020-08-20T12:46:23.605413+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [48] []
[2020-08-20T12:46:23.606030+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [53] []
[2020-08-20T12:46:23.606763+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [56] []
[2020-08-20T12:46:23.607469+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [58] []
[2020-08-20T12:46:23.608151+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [59] []
[2020-08-20T12:46:23.608758+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [63] []
[2020-08-20T12:46:23.609266+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [69] []
[2020-08-20T12:46:23.609949+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [75] []
[2020-08-20T12:46:23.610631+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [77] []
[2020-08-20T12:46:23.611242+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [79] []
[2020-08-20T12:46:23.611972+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [80] []
[2020-08-20T12:46:23.612539+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [87] []
[2020-08-20T12:46:23.613157+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [90] []
[2020-08-20T12:46:23.613850+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [91] []
[2020-08-20T12:46:23.614567+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [93] []
[2020-08-20T12:46:23.615183+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [96] []
[2020-08-20T12:46:23.615986+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [97] []
[2020-08-20T12:46:23.616638+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [99] []
[2020-08-20T12:46:23.617300+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [2] []
[2020-08-20T12:46:23.618104+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [4] []
[2020-08-20T12:46:23.618781+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [36] []
[2020-08-20T12:46:23.748823+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T12:46:23.758210+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T12:46:23.942381+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:24.990338+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b493c9"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/b493c9","method":"GET"} []
[2020-08-20T12:46:31.536138+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"https://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-08-20T12:46:31.568165+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:31.628145+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:31.647715+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:31.673195+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-08-20T12:46:31.813055+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:32.250225+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dad8ba"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/dad8ba","method":"GET"} []
[2020-08-20T12:46:32.720399+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T12:46:32.734102+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:32.765390+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:32.780976+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:32.878285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T12:46:32.973477+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-20T12:46:32.974850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T12:46:32.981551+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:33.452179+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"89574e"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/89574e","method":"GET"} []
[2020-08-20T12:46:43.900226+02:00] request.INFO: Matched route "admin_mail_delete". {"route":"admin_mail_delete","route_parameters":{"_route":"admin_mail_delete","_controller":"App\\Controller\\AdminController::mailDelete","id":"2"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail/delete/2","method":"GET"} []
[2020-08-20T12:46:43.913801+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:43.952974+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:43.965247+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:43.968884+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.id = ? ["2"] []
[2020-08-20T12:46:44.023674+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:46:44.024342+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [2] []
[2020-08-20T12:46:44.025106+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:46:44.035641+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:44.318004+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T12:46:44.331007+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:44.360754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:44.372420+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:44.393623+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T12:46:44.419901+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-20T12:46:44.420686+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [36] []
[2020-08-20T12:46:44.427123+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:44.729574+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c5075a"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/c5075a","method":"GET"} []
[2020-08-20T12:46:48.445258+02:00] request.INFO: Matched route "admin_mail_delete". {"route":"admin_mail_delete","route_parameters":{"_route":"admin_mail_delete","_controller":"App\\Controller\\AdminController::mailDelete","id":"4"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail/delete/4","method":"GET"} []
[2020-08-20T12:46:48.458650+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:48.489463+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:48.501837+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:48.505587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.id = ? ["4"] []
[2020-08-20T12:46:48.516071+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:46:48.516733+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [4] []
[2020-08-20T12:46:48.517586+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:46:48.527960+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:48.787606+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T12:46:48.800452+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:48.829993+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:48.846282+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:48.872221+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T12:46:48.883476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-20T12:46:48.890055+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:49.226253+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71883b"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/71883b","method":"GET"} []
[2020-08-20T12:46:50.681163+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:46:50.694819+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:50.725283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:50.737190+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:50.742546+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:46:50.743034+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:46:50.754199+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:51.158680+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f0c26d"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/f0c26d","method":"GET"} []
[2020-08-20T12:46:54.072610+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"36"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/36","method":"GET"} []
[2020-08-20T12:46:54.085884+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:46:54.122189+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:46:54.140100+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:46:54.144506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["36"] []
[2020-08-20T12:46:54.150428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [36] []
[2020-08-20T12:46:54.152491+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [36] []
[2020-08-20T12:46:54.160621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [36] []
[2020-08-20T12:46:54.161656+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [36] []
[2020-08-20T12:46:54.163751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 WHERE t0.added_by_id = ? [36] []
[2020-08-20T12:46:54.164344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [36] []
[2020-08-20T12:46:54.168075+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:46:54.168728+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [5] []
[2020-08-20T12:46:54.169478+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [6] []
[2020-08-20T12:46:54.170019+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [14] []
[2020-08-20T12:46:54.170507+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [18] []
[2020-08-20T12:46:54.170983+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [20] []
[2020-08-20T12:46:54.171422+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [23] []
[2020-08-20T12:46:54.172120+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [27] []
[2020-08-20T12:46:54.172835+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [37] []
[2020-08-20T12:46:54.173496+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [40] []
[2020-08-20T12:46:54.174172+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [44] []
[2020-08-20T12:46:54.174667+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [47] []
[2020-08-20T12:46:54.175232+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [49] []
[2020-08-20T12:46:54.176266+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [62] []
[2020-08-20T12:46:54.176887+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [64] []
[2020-08-20T12:46:54.177476+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [69] []
[2020-08-20T12:46:54.178189+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [73] []
[2020-08-20T12:46:54.178904+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [79] []
[2020-08-20T12:46:54.179509+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [86] []
[2020-08-20T12:46:54.180045+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [87] []
[2020-08-20T12:46:54.180667+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [90] []
[2020-08-20T12:46:54.181260+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [95] []
[2020-08-20T12:46:54.181910+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [96] []
[2020-08-20T12:46:54.182533+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [98] []
[2020-08-20T12:46:54.183079+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [100] []
[2020-08-20T12:46:54.183704+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [1] []
[2020-08-20T12:46:54.184357+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [3] []
[2020-08-20T12:46:54.185092+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [4] []
[2020-08-20T12:46:54.185730+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [10] []
[2020-08-20T12:46:54.186362+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [11] []
[2020-08-20T12:46:54.186996+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [18] []
[2020-08-20T12:46:54.187652+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [20] []
[2020-08-20T12:46:54.188195+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [24] []
[2020-08-20T12:46:54.188759+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [25] []
[2020-08-20T12:46:54.189368+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [31] []
[2020-08-20T12:46:54.189933+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [33] []
[2020-08-20T12:46:54.190472+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [34] []
[2020-08-20T12:46:54.191000+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [35] []
[2020-08-20T12:46:54.191508+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [38] []
[2020-08-20T12:46:54.192021+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [39] []
[2020-08-20T12:46:54.192525+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [45] []
[2020-08-20T12:46:54.193153+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [48] []
[2020-08-20T12:46:54.193840+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [53] []
[2020-08-20T12:46:54.194493+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [56] []
[2020-08-20T12:46:54.195028+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [58] []
[2020-08-20T12:46:54.195605+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [59] []
[2020-08-20T12:46:54.196206+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [63] []
[2020-08-20T12:46:54.196736+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [69] []
[2020-08-20T12:46:54.197251+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [75] []
[2020-08-20T12:46:54.197814+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [77] []
[2020-08-20T12:46:54.198424+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [79] []
[2020-08-20T12:46:54.199019+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [80] []
[2020-08-20T12:46:54.199559+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [87] []
[2020-08-20T12:46:54.200102+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [90] []
[2020-08-20T12:46:54.200659+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [91] []
[2020-08-20T12:46:54.201210+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [93] []
[2020-08-20T12:46:54.201742+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [96] []
[2020-08-20T12:46:54.202290+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [97] []
[2020-08-20T12:46:54.202794+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [99] []
[2020-08-20T12:46:54.203332+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [36] []
[2020-08-20T12:46:54.207881+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-20T12:46:54.218372+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`))" at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM user WHERE id = ?' with params [36]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`xaviervimjapel`.`contact`, CONSTRAINT `FK_4C62E638CD53EDB6` FOREIGN KEY (`receiver_id`) REFERENCES `user` (`id`)) at /home/xaviervimj/projet/symfony/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-08-20T12:46:54.432539+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:46:54.974889+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc408d"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/bc408d","method":"GET"} []
[2020-08-20T12:47:00.157070+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T12:47:00.170381+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:00.200714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:00.212509+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:00.234217+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T12:47:00.245254+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-20T12:47:00.251856+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:00.837310+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9c9c71"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/9c9c71","method":"GET"} []
[2020-08-20T12:47:04.538081+02:00] request.INFO: Matched route "admin_mail_delete". {"route":"admin_mail_delete","route_parameters":{"_route":"admin_mail_delete","_controller":"App\\Controller\\AdminController::mailDelete","id":"1"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail/delete/1","method":"GET"} []
[2020-08-20T12:47:04.573447+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:04.643652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:04.662544+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:04.673082+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.id = ? ["1"] []
[2020-08-20T12:47:04.696440+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:47:04.697044+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [1] []
[2020-08-20T12:47:04.697814+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:47:04.719758+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:05.025930+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T12:47:05.039180+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:05.070413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:05.081935+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:05.138646+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T12:47:05.165123+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [34] []
[2020-08-20T12:47:05.171650+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:05.500075+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6e880e"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/6e880e","method":"GET"} []
[2020-08-20T12:47:06.995702+02:00] request.INFO: Matched route "admin_mail_delete". {"route":"admin_mail_delete","route_parameters":{"_route":"admin_mail_delete","_controller":"App\\Controller\\AdminController::mailDelete","id":"5"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail/delete/5","method":"GET"} []
[2020-08-20T12:47:07.008912+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:07.042825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:07.058253+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:07.061951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.id = ? ["5"] []
[2020-08-20T12:47:07.071313+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:47:07.071760+02:00] doctrine.DEBUG: DELETE FROM contact WHERE id = ? [5] []
[2020-08-20T12:47:07.072525+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:47:07.084371+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:07.447216+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T12:47:07.459940+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:07.489408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:07.500928+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:07.521911+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T12:47:07.533869+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:07.914504+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c48402"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/c48402","method":"GET"} []
[2020-08-20T12:47:09.116853+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:47:09.130117+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:09.159950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:09.171460+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:09.176361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:47:09.177190+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:47:09.188153+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:09.879857+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3437fa"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/3437fa","method":"GET"} []
[2020-08-20T12:47:13.673749+02:00] request.INFO: Matched route "admin_delete_user". {"route":"admin_delete_user","route_parameters":{"_route":"admin_delete_user","_controller":"App\\Controller\\AdminController::deleteUser","id":"36"},"request_uri":"https://adminstda.xaviervitali.fr/admin/delete_user/36","method":"GET"} []
[2020-08-20T12:47:13.687624+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:13.718076+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:13.730086+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:13.733184+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["36"] []
[2020-08-20T12:47:13.736995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.content AS content_3, t0.created_at AS created_at_4, t0.updated_at AS updated_at_5, t0.slug AS slug_6, t0.category_id AS category_id_7, t0.author_id AS author_id_8 FROM article t0 WHERE t0.author_id = ? [36] []
[2020-08-20T12:47:13.738137+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.author_id = ? [36] []
[2020-08-20T12:47:13.792441+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 WHERE t0.blocked_id = ? [36] []
[2020-08-20T12:47:13.793574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.article_id AS article_id_2, t0.user_id AS user_id_3 FROM `like` t0 WHERE t0.user_id = ? [36] []
[2020-08-20T12:47:13.795260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 WHERE t0.added_by_id = ? [36] []
[2020-08-20T12:47:13.795852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.sender_id = ? [36] []
[2020-08-20T12:47:13.798535+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-20T12:47:13.799048+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [5] []
[2020-08-20T12:47:13.799790+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [6] []
[2020-08-20T12:47:13.800453+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [14] []
[2020-08-20T12:47:13.801208+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [18] []
[2020-08-20T12:47:13.801911+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [20] []
[2020-08-20T12:47:13.802644+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [23] []
[2020-08-20T12:47:13.803432+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [27] []
[2020-08-20T12:47:13.804174+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [37] []
[2020-08-20T12:47:13.804755+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [40] []
[2020-08-20T12:47:13.805758+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [44] []
[2020-08-20T12:47:13.806431+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [47] []
[2020-08-20T12:47:13.807120+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [49] []
[2020-08-20T12:47:13.807643+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [62] []
[2020-08-20T12:47:13.808218+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [64] []
[2020-08-20T12:47:13.808898+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [69] []
[2020-08-20T12:47:13.809654+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [73] []
[2020-08-20T12:47:13.810134+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [79] []
[2020-08-20T12:47:13.810616+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [86] []
[2020-08-20T12:47:13.811035+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [87] []
[2020-08-20T12:47:13.811614+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [90] []
[2020-08-20T12:47:13.812163+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [95] []
[2020-08-20T12:47:13.812627+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [96] []
[2020-08-20T12:47:13.813179+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [98] []
[2020-08-20T12:47:13.813731+02:00] doctrine.DEBUG: DELETE FROM comment WHERE id = ? [100] []
[2020-08-20T12:47:13.814367+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [1] []
[2020-08-20T12:47:13.814860+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [3] []
[2020-08-20T12:47:13.815443+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [4] []
[2020-08-20T12:47:13.816011+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [10] []
[2020-08-20T12:47:13.816582+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [11] []
[2020-08-20T12:47:13.817121+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [18] []
[2020-08-20T12:47:13.817898+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [20] []
[2020-08-20T12:47:13.818573+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [24] []
[2020-08-20T12:47:13.819157+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [25] []
[2020-08-20T12:47:13.819756+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [31] []
[2020-08-20T12:47:13.820333+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [33] []
[2020-08-20T12:47:13.820814+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [34] []
[2020-08-20T12:47:13.821323+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [35] []
[2020-08-20T12:47:13.821800+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [38] []
[2020-08-20T12:47:13.822308+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [39] []
[2020-08-20T12:47:13.822774+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [45] []
[2020-08-20T12:47:13.823183+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [48] []
[2020-08-20T12:47:13.823566+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [53] []
[2020-08-20T12:47:13.824064+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [56] []
[2020-08-20T12:47:13.824546+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [58] []
[2020-08-20T12:47:13.825077+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [59] []
[2020-08-20T12:47:13.825540+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [63] []
[2020-08-20T12:47:13.825946+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [69] []
[2020-08-20T12:47:13.826346+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [75] []
[2020-08-20T12:47:13.826738+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [77] []
[2020-08-20T12:47:13.827115+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [79] []
[2020-08-20T12:47:13.827499+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [80] []
[2020-08-20T12:47:13.827889+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [87] []
[2020-08-20T12:47:13.828553+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [90] []
[2020-08-20T12:47:13.829126+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [91] []
[2020-08-20T12:47:13.829575+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [93] []
[2020-08-20T12:47:13.830042+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [96] []
[2020-08-20T12:47:13.830496+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [97] []
[2020-08-20T12:47:13.830992+02:00] doctrine.DEBUG: DELETE FROM `like` WHERE id = ? [99] []
[2020-08-20T12:47:13.831434+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [36] []
[2020-08-20T12:47:13.832263+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-20T12:47:13.843124+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:14.111949+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:47:14.125520+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:14.156736+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:14.169450+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:14.174771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:47:14.175684+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:47:14.192795+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:14.581596+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bba380"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/bba380","method":"GET"} []
[2020-08-20T12:47:37.678549+02:00] request.INFO: Matched route "admin_edit_user". {"route":"admin_edit_user","route_parameters":{"_route":"admin_edit_user","_controller":"App\\Controller\\AdminController::editUser","id":"34"},"request_uri":"https://adminstda.xaviervitali.fr/admin/edit_user/34","method":"GET"} []
[2020-08-20T12:47:37.709108+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:37.761975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:37.779253+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:37.785211+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? ["34"] []
[2020-08-20T12:47:37.970674+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:38.397773+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/css/main.css" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/css/main.css\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/css/main.css/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:47:38.397808+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /admin/assets/js/main.js" (from "https://adminstda.xaviervitali.fr/admin/edit_user/34")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /admin/assets/js/main.js\" (from \"https://adminstda.xaviervitali.fr/admin/edit_user/34\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/admin/assets/js/main.js/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T12:47:40.126138+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fa939a"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/fa939a","method":"GET"} []
[2020-08-20T12:47:57.155606+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"https://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-08-20T12:47:57.168901+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:57.200112+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:57.212250+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:57.218572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-08-20T12:47:57.278861+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:57.690762+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a42693"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/a42693","method":"GET"} []
[2020-08-20T12:47:58.885407+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T12:47:58.898791+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:47:58.929588+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:47:58.941798+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:47:58.965102+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T12:47:58.977682+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:47:59.533788+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f8fe22"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/f8fe22","method":"GET"} []
[2020-08-20T12:48:01.806191+02:00] request.INFO: Matched route "admin_upload". {"route":"admin_upload","route_parameters":{"_route":"admin_upload","_controller":"App\\Controller\\AdminController::upload"},"request_uri":"https://adminstda.xaviervitali.fr/admin/upload","method":"GET"} []
[2020-08-20T12:48:01.819257+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:48:01.849413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:48:01.861374+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:48:01.934609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 [] []
[2020-08-20T12:48:02.042616+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:48:02.436702+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a1202d"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/a1202d","method":"GET"} []
[2020-08-20T12:48:08.372631+02:00] request.INFO: Matched route "api_file_uploads_GET_collection". {"route":"api_file_uploads_GET_collection","route_parameters":{"_route":"api_file_uploads_GET_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\FileUpload","_api_collection_operation_name":"GET"},"request_uri":"https://adminstda.xaviervitali.fr/api/file_uploads","method":"GET"} []
[2020-08-20T12:48:08.385481+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:48:08.385535+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:48:08.385596+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:48:08.395958+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:48:08.458749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:48:08.480794+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:48:08.481752+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:48:08.481800+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:48:08.730969+02:00] doctrine.DEBUG: SELECT f0_.id AS id_0, f0_.file_uploaded_name AS file_uploaded_name_1, f0_.title AS title_2, f0_.updated_at AS updated_at_3, u1_.id AS id_4, u1_.email AS email_5, u1_.roles AS roles_6, u1_.password AS password_7, u1_.gender AS gender_8, u1_.last_name AS last_name_9, u1_.first_name AS first_name_10, u1_.children AS children_11, u1_.email_notification AS email_notification_12, u1_.registered_at AS registered_at_13, u1_.granted AS granted_14, u1_.about AS about_15, f0_.added_by_id AS added_by_id_16 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id ORDER BY f0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T12:48:08.828944+02:00] doctrine.DEBUG: SELECT count(DISTINCT f0_.id) AS sclr_0 FROM file_upload f0_ LEFT JOIN user u1_ ON f0_.added_by_id = u1_.id [] []
[2020-08-20T12:49:28.560211+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:49:28.591172+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:49:28.643447+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:49:28.660359+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:49:28.671618+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? [false] []
[2020-08-20T12:49:28.672250+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.granted = ? ORDER BY t0.last_name ASC [true] []
[2020-08-20T12:49:28.695549+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:49:29.593532+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"265112"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/265112","method":"GET"} []
[2020-08-20T12:49:32.690525+02:00] request.INFO: Matched route "admin_upload". {"route":"admin_upload","route_parameters":{"_route":"admin_upload","_controller":"App\\Controller\\AdminController::upload"},"request_uri":"https://adminstda.xaviervitali.fr/admin/upload","method":"GET"} []
[2020-08-20T12:49:32.705916+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:49:32.742360+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:49:32.754444+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:49:32.800218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.file_uploaded_name AS file_uploaded_name_2, t0.title AS title_3, t0.updated_at AS updated_at_4, t0.added_by_id AS added_by_id_5 FROM file_upload t0 [] []
[2020-08-20T12:49:32.867973+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:49:33.331004+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9319d4"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/9319d4","method":"GET"} []
[2020-08-20T12:49:38.171738+02:00] request.INFO: Matched route "admin_mail_index". {"route":"admin_mail_index","route_parameters":{"_route":"admin_mail_index","_controller":"App\\Controller\\AdminController::mailIndex"},"request_uri":"https://adminstda.xaviervitali.fr/admin/mail","method":"GET"} []
[2020-08-20T12:49:38.185998+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:49:38.224131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:49:38.240927+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:49:38.268618+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.created_at AS created_at_2, t0.title AS title_3, t0.content AS content_4, t0.channel AS channel_5, t0.sender_id AS sender_id_6, t0.receiver_id AS receiver_id_7 FROM contact t0 WHERE t0.channel = ? ["espace contact"] []
[2020-08-20T12:49:38.281954+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:49:38.724233+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a5c1b4"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/a5c1b4","method":"GET"} []
[2020-08-20T12:49:50.685656+02:00] request.INFO: Matched route "admin_comments". {"route":"admin_comments","route_parameters":{"_route":"admin_comments","_controller":"App\\Controller\\AdminController::comments"},"request_uri":"https://adminstda.xaviervitali.fr/admin/comments","method":"GET"} []
[2020-08-20T12:49:50.698252+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken"} []
[2020-08-20T12:49:50.727609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.id = ? [37] []
[2020-08-20T12:49:50.739155+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"admin@gmail.com"} []
[2020-08-20T12:49:50.745110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.content AS content_2, t0.created_at AS created_at_3, t0.author_id AS author_id_4, t0.article_id AS article_id_5, t0.blocked_id AS blocked_id_6 FROM comment t0 [] []
[2020-08-20T12:49:50.812196+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-08-20T12:49:51.274593+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a87f2c"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/a87f2c","method":"GET"} []
[2020-08-20T12:52:51.629953+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T12:52:51.637193+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T12:52:51.681002+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:52:51.681088+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.681161+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.691428+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.699453+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:52:51.699536+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.699605+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.703917+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.718804+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T12:52:51.731970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T12:52:51.753436+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\UserNotFoundException(code: 0):  at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:159)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.753654+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\UserNotFoundException(code: 0):  at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:159)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.780424+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:51.780439+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:58.974357+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T12:52:58.983202+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:52:58.983280+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:58.983345+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:58.987625+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:59.021143+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T12:52:59.025681+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\UserNotFoundException(code: 0):  at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:159)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:59.024763+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T12:52:59.053212+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:59.085813+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:52:59.085884+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:59.085947+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:59.090083+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:59.100470+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T12:52:59.105011+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\UserNotFoundException(code: 0):  at /home/xaviervimj/projet/symfony/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:159)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:52:59.106947+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:24.205548+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:53:24.218112+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:53:24.218191+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:24.218246+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:24.235869+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:24.516546+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["utlisateur@gmail.com"] []
[2020-08-20T12:53:24.562885+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"utlisateur@gmail.com\" not found. at /home/xaviervimj/projet/symfony/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:24.566387+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:34.210916+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:53:34.218665+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:53:34.218725+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:34.218780+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:34.219572+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:34.251114+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["utlisateur@gmail.com"] []
[2020-08-20T12:53:34.256310+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"utlisateur@gmail.com\" not found. at /home/xaviervimj/projet/symfony/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:34.258289+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:35.485936+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:53:35.493741+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:53:35.493814+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:35.493869+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:35.494687+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:35.526856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["utlisateur@gmail.com"] []
[2020-08-20T12:53:35.532283+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"utlisateur@gmail.com\" not found. at /home/xaviervimj/projet/symfony/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:35.534332+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:38.201205+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:53:38.208737+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:53:38.208794+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:38.208849+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:38.209628+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:38.240712+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["utlisateur@gmail.com"] []
[2020-08-20T12:53:38.246117+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"utlisateur@gmail.com\" not found. at /home/xaviervimj/projet/symfony/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:38.247987+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:39.690033+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:53:39.697397+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:53:39.697449+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:39.697501+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:39.698315+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:39.729223+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["utlisateur@gmail.com"] []
[2020-08-20T12:53:39.734736+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"utlisateur@gmail.com\" not found. at /home/xaviervimj/projet/symfony/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:39.736628+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:44.827266+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:53:44.834972+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:53:44.835034+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:44.835088+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:44.835902+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:44.867503+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T12:53:44.872851+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"user@gmail.com\" not found. at /home/xaviervimj/projet/symfony/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:44.874840+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:46.903702+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:53:46.911584+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:53:46.911643+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:46.911700+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:46.912582+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:46.944765+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["user@gmail.com"] []
[2020-08-20T12:53:46.950211+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"user@gmail.com\" not found. at /home/xaviervimj/projet/symfony/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:46.952236+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:52.555194+02:00] request.INFO: Matched route "security_login_token". {"route":"security_login_token","route_parameters":{"_route":"security_login_token","_controller":"App\\Controller\\SecurityController::login_token"},"request_uri":"https://adminstda.xaviervitali.fr/api/login_token","method":"POST"} []
[2020-08-20T12:53:52.562622+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"login","authenticators":1} []
[2020-08-20T12:53:52.562672+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:52.562723+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:52.563481+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"login","authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:52.594585+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:53:53.492658+02:00] security.INFO: Guard authentication successful! {"token":{"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken":"PostAuthenticationGuardToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:53.602577+02:00] security.DEBUG: Guard authenticator set success response. {"response":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Response\\JWTAuthenticationSuccessResponse":"HTTP/1.0 200 OK\r\nCache-Control: no-cache, private\r\nContent-Type:  application/json\r\nDate:          Thu, 20 Aug 2020 10:53:53 GMT\r\n\r\n{\"token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTc5MjA4MzMsImV4cCI6MTU5Nzk2NDAzMywicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGdtYWlsLmNvbSIsImlkIjozNywiZmlyc3ROYW1lIjoiUHJcdTAwZTlub20gYWRtaW4iLCJsYXN0TmFtZSI6Ik5vbSBhZG1pbiIsImdlbmRlciI6Ik1yIiwiY2hpbGRyZW4iOlsiUFMiXSwiZW1haWxOb3RpZmljYXRpb24iOm51bGx9.LbYNOdJAo1bCQPW49PlPQTq-nzmFGKxc7k_bOd_b0qnCNxQGjkinYwEdlkSoiQaCWFu_zpV__g1CwqA1d3Yast8LdhptVTvMsCmtlC5vkfF75TviLUe3hpa7BjXkUWn9DAtsZaXGGB9T2hcPDqXKr-VcBa2dQ5GA6fQ8TUcOepzn-i-eDr8hbnR7uW4JdFF5q3Frq4weFblr5mqkaR4ckW3U-d9WPyyVCTOP812u9fgkM7X2T-tXjQiXv9wELVaz0-ZpUE-kvPU7gfbdS0q9o1Vnd0_Y1trfrIOV9oQPSXUg0qh0A5p1aCfmykIF56ElnoXjVQ6oWmmZhuTeAIvJspSBJe27qpGEgKTFJKy0g7WjgViKowNWM-lahMeHZ6YQFkM4pNT-AoIT2Unkx9owvdUxAKRY1p-CylzMCuhhR-3zb762HKIFIUyGo--EuzZd8TAGWAQZpEdnHq_dkxeheHToaRVF1ncx4XSLBEiMCXLS8dUIP3xjA_7dNzeyjhU33hNM0lhPdhpu7R3RnRWHF9KQ3vtKDv7AAaFLNcyCzATREr5CvwYEaHZYWlSkxagiFb3m8nXoN6oFnORz4sqwM-YMVruqvajp29IgIDisV2exXyph7s3UK8xpV9hU49c_AiRFuRnsEZCqz6GknrjHftISr7_sesZ2glSDzzCgT0s\"}"},"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:53.602695+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:53.602738+02:00] security.DEBUG: The "App\Security\GrantedAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\GrantedAuthenticator"} []
[2020-08-20T12:53:54.470267+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T12:53:54.470356+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T12:53:54.499247+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:53:54.499325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.499388+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.510179+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.531957+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:53:54.532047+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.532129+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.536842+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.550684+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:53:54.550692+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:53:54.588146+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.588462+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.588511+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.593660+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.593965+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.594018+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:54.758506+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T12:53:54.758559+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T12:53:54.773328+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,25,26]] []
[2020-08-20T12:53:54.773439+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[18,16,17,1,4,5,6,7,8,9,10,2,3]] []
[2020-08-20T12:53:54.866379+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T12:53:54.938701+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-20T12:53:55.340667+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T12:53:55.350335+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T12:53:55.377660+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:53:55.377732+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.377796+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.377860+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T12:53:55.377925+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.377988+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.382433+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.382481+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.392897+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:53:55.403679+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.403994+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.404043+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.415169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T12:53:55.429168+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.429480+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.429528+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T12:53:55.453544+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T12:53:55.456446+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[18,16,17,1,4,5,6,7,8,9,10,2,3]] []
[2020-08-20T12:53:55.460655+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T12:53:55.463207+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,25,26]] []
[2020-08-20T12:53:55.487230+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T12:53:55.487791+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
[2020-08-20T12:54:01.006397+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T12:54:01.021077+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:54:01.034228+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T12:54:01.034979+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T12:54:01.352655+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T12:54:01.459861+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T12:54:02.083349+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c8b729"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/c8b729","method":"GET"} []
[2020-08-20T12:54:02.175091+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico"" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T16:48:47.412175+02:00] request.INFO: Matched route "dummy". {"route":"dummy","route_parameters":{"_route":"dummy","_controller":"App\\Controller\\AdminController::toto"},"request_uri":"http://adminstda.xaviervitali.fr/","method":"GET"} []
[2020-08-20T16:48:47.483404+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T16:48:47.526594+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T16:48:47.527310+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T16:48:47.846011+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T16:48:48.135717+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T16:48:48.504323+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"75c912"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/75c912","method":"GET"} []
[2020-08-20T16:49:06.994043+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T16:49:07.034318+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T16:49:07.343185+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"949fb8"},"request_uri":"http://adminstda.xaviervitali.fr/_wdt/949fb8","method":"GET"} []
[2020-08-20T16:51:40.809569+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "https://adminstda.xaviervitali.fr/api/articles")" at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"https://adminstda.xaviervitali.fr/api/articles\") at /home/xaviervimj/projet/symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/xaviervimj/projet/symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-20T16:51:53.366831+02:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\AdminController::admin"},"request_uri":"https://adminstda.xaviervitali.fr/admin","method":"GET"} []
[2020-08-20T16:51:53.387958+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T16:51:53.394817+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/xaviervimj/projet/symfony/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-20T16:51:53.395524+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-20T16:51:53.665563+02:00] request.INFO: Matched route "security_login". {"route":"security_login","route_parameters":{"_route":"security_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"https://adminstda.xaviervitali.fr/login","method":"GET"} []
[2020-08-20T16:51:53.733584+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-20T16:51:54.239954+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f1a6a2"},"request_uri":"https://adminstda.xaviervitali.fr/_wdt/f1a6a2","method":"GET"} []
[2020-08-20T16:52:03.304493+02:00] request.INFO: Matched route "api_articles_get_collection". {"route":"api_articles_get_collection","route_parameters":{"_route":"api_articles_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Article","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/articles","method":"GET"} []
[2020-08-20T16:52:03.340608+02:00] request.INFO: Matched route "api_categories_get_collection". {"route":"api_categories_get_collection","route_parameters":{"_route":"api_categories_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Category","_api_collection_operation_name":"get"},"request_uri":"https://adminstda.xaviervitali.fr/api/categories","method":"GET"} []
[2020-08-20T16:52:03.388140+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T16:52:03.388215+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.388279+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.398762+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.404442+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-20T16:52:03.404509+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.404585+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.408737+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.432831+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T16:52:03.444412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.gender AS gender_5, t0.last_name AS last_name_6, t0.first_name AS first_name_7, t0.children AS children_8, t0.email_notification AS email_notification_9, t0.registered_at AS registered_at_10, t0.granted AS granted_11, t0.about AS about_12 FROM user t0 WHERE t0.email = ? LIMIT 1 ["admin@gmail.com"] []
[2020-08-20T16:52:03.446241+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.446975+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.447027+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.459683+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"admin@gmail.com\", authenticated=true, roles=\"ROLE_ADMIN, ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.460082+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.460134+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-20T16:52:03.720384+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-08-20T16:52:03.721559+02:00] doctrine.DEBUG: SELECT DISTINCT a0_.id AS id_0, a0_.updated_at AS updated_at_1 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id ORDER BY a0_.updated_at DESC LIMIT 30 [] []
[2020-08-20T16:52:03.725727+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.title AS title_1, a1_.id AS id_2, a1_.title AS title_3, a1_.content AS content_4, a1_.created_at AS created_at_5, a1_.updated_at AS updated_at_6, a1_.slug AS slug_7, a1_.category_id AS category_id_8, a1_.author_id AS author_id_9 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[21,22,23,25,26]] []
[2020-08-20T16:52:03.725916+02:00] doctrine.DEBUG: SELECT a0_.id AS id_0, a0_.title AS title_1, a0_.content AS content_2, a0_.created_at AS created_at_3, a0_.updated_at AS updated_at_4, a0_.slug AS slug_5, c1_.id AS id_6, c1_.title AS title_7, u2_.id AS id_8, u2_.email AS email_9, u2_.roles AS roles_10, u2_.password AS password_11, u2_.gender AS gender_12, u2_.last_name AS last_name_13, u2_.first_name AS first_name_14, u2_.children AS children_15, u2_.email_notification AS email_notification_16, u2_.registered_at AS registered_at_17, u2_.granted AS granted_18, u2_.about AS about_19, c3_.id AS id_20, c3_.content AS content_21, c3_.created_at AS created_at_22, u4_.id AS id_23, u4_.email AS email_24, u4_.roles AS roles_25, u4_.password AS password_26, u4_.gender AS gender_27, u4_.last_name AS last_name_28, u4_.first_name AS first_name_29, u4_.children AS children_30, u4_.email_notification AS email_notification_31, u4_.registered_at AS registered_at_32, u4_.granted AS granted_33, u4_.about AS about_34, u5_.id AS id_35, u5_.email AS email_36, u5_.roles AS roles_37, u5_.password AS password_38, u5_.gender AS gender_39, u5_.last_name AS last_name_40, u5_.first_name AS first_name_41, u5_.children AS children_42, u5_.email_notification AS email_notification_43, u5_.registered_at AS registered_at_44, u5_.granted AS granted_45, u5_.about AS about_46, a0_.category_id AS category_id_47, a0_.author_id AS author_id_48, c3_.author_id AS author_id_49, c3_.article_id AS article_id_50, c3_.blocked_id AS blocked_id_51 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id WHERE a0_.id IN (?) ORDER BY a0_.updated_at DESC [[18,16,17,1,4,5,6,7,8,9,10,2,3]] []
[2020-08-20T16:52:03.821428+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM category c0_ LEFT JOIN article a1_ ON c0_.id = a1_.category_id [] []
[2020-08-20T16:52:03.845708+02:00] doctrine.DEBUG: SELECT count(DISTINCT a0_.id) AS sclr_0 FROM article a0_ LEFT JOIN category c1_ ON a0_.category_id = c1_.id LEFT JOIN user u2_ ON a0_.author_id = u2_.id LEFT JOIN comment c3_ ON a0_.id = c3_.article_id LEFT JOIN user u4_ ON c3_.author_id = u4_.id LEFT JOIN user u5_ ON c3_.blocked_id = u5_.id [] []
