<?php //App.Entity.FileUpload

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\File'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\File')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\File'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\FileUpload',
                'uploadedFile',
            ],
            'defaultGroup' => [
                'FileUpload',
            ],
            'members' => [
                [
                    'uploadedFile' => [
                        $o[1],
                    ],
                ],
            ],
            'properties' => [
                [
                    'uploadedFile' => $o[1],
                ],
            ],
            'class' => [
                1 => 'App\\Entity\\FileUpload',
            ],
            'property' => [
                1 => 'uploadedFile',
            ],
            'constraints' => [
                1 => [
                    $o[2],
                    $o[3],
                ],
            ],
            'constraintsByGroup' => [
                1 => [
                    'Default' => [
                        $o[2],
                        $o[3],
                    ],
                    'FileUpload' => [
                        $o[2],
                        $o[3],
                    ],
                ],
            ],
            'mimeTypes' => [
                2 => [
                    'image/jpeg',
                    'image/gif',
                    'image/png',
                    'video/mp4',
                    'video/quicktime',
                    'video/avi',
                    'application/pdf',
                    'application/msword',
                    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                    'application/vnd.oasis.opendocument.text',
                ],
            ],
            'mimeTypesMessage' => [
                2 => 'Wrong file type (jpg,gif,png,mp4,mov,avi,pdf,doc,docx,odt)',
            ],
            'groups' => [
                2 => [
                    'Default',
                    'FileUpload',
                ],
                [
                    'Default',
                    'FileUpload',
                ],
            ],
            'binaryFormat' => [
                3 => false,
            ],
        ],
        'Symfony\\Component\\Validator\\Constraints\\File' => [
            'maxSize' => [
                3 => 1000000000,
            ],
        ],
    ],
    $o[0],
    []
); }];
